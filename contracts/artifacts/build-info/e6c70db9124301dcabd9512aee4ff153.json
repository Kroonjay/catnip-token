{
	"id": "e6c70db9124301dcabd9512aee4ff153",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CatNip.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract CatnipToken is Initializable, ERC20Upgradeable, OwnableUpgradeable {\n    address public charityWallet;  // Address for collecting charity donations\n    uint256 public charityFee;     // Charity fee percentage (in basis points, i.e., parts per ten thousand)\n    uint256 public feeDivisor;     // Divisor to calculate fee (e.g., 10,000 for basis points)\n\n    function initialize(address _charityWallet, uint256 _initialSupply, uint256 _charityFee) public initializer {\n        __ERC20_init(\"Catnip\", \"CATNIP\");\n       address owner = msg.sender;\n       __Ownable_init(owner);\n\n        charityWallet = _charityWallet;\n        charityFee = _charityFee;\n        feeDivisor = 10000;  // Set divisor to 10,000 for basis point calculation (1% = 100 basis points)\n\n        _mint(msg.sender, _initialSupply * (10 ** decimals()));\n    }\n\n    function setCharityWallet(address _charityWallet) external onlyOwner {\n        require(_charityWallet != address(0), \"Invalid address\");\n        charityWallet = _charityWallet;\n    }\n\n    function setCharityFee(uint256 _charityFee) external onlyOwner {\n        require(_charityFee <= feeDivisor, \"Fee too high\");\n        charityFee = _charityFee;\n    }\n\n    function _transfer(address sender, address recipient, uint256 amount) internal override {\n        // Calculate the charity donation based on the transaction amount\n        uint256 feeAmount = (amount * charityFee) / feeDivisor;\n\n        // Deduct the fee from the amount to be transferred\n        uint256 amountAfterFee = amount - feeAmount;\n\n        // Transfer the fee to the charity wallet\n        super._transfer(sender, charityWallet, feeAmount);\n\n        // Transfer the remaining amount to the recipient\n        super._transfer(sender, recipient, amountAfterFee);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal virtual {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal virtual {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7495638cf1899296f31b86ac9e6d2fa8b5f75f346bb9b6c3850b4bde1209a882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8540eb125e40e2d732d76aecc33e4953bda770aae942647f6a80d5c719675df2\",\"dweb:/ipfs/QmeMQnjuEwc9Ru1mZci7QpkewvaeB98SCe462aNrhjUcHS\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CatNip.sol": {
				"CatnipToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "charityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "charityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeDivisor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_charityWallet",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_charityFee",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_charityFee",
									"type": "uint256"
								}
							],
							"name": "setCharityFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_charityWallet",
									"type": "address"
								}
							],
							"name": "setCharityWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CatNip.sol\":289:2065  contract CatnipToken is Initializable, ERC20Upgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CatNip.sol\":289:2065  contract CatnipToken is Initializable, ERC20Upgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a1ac61e\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x9a36f932\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x9a36f932\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xecfca899\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x7a1ac61e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7b208769\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x30563bd7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x20c7c596\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CatNip.sol\":1317:1481  function setCharityFee(uint256 _charityFee) external onlyOwner {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CatNip.sol\":1129:1311  function setCharityWallet(address _charityWallet) external onlyOwner {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/CatNip.sol\":655:1123  function initialize(address _charityWallet, uint256 _initialSupply, uint256 _charityFee) public initializer {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/CatNip.sol\":371:399  address public charityWallet */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CatNip.sol\":559:584  uint256 public feeDivisor */\n    tag_16:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CatNip.sol\":450:475  uint256 public charityFee */\n    tag_19:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2761:2774  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2808  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2827  _getERC20Storage */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2829  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2847  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2853  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2839:2853  return $._name */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_97\n      jump\t// in\n    tag_98:\n      dup1\n      iszero\n      tag_99\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_100\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_99)\n    tag_100:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_101:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_101\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5283:5287  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5312  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5325  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5327  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5346:5351  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5353:5360  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5362:5367  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5345  _approve */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5385:5389  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5378:5389  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3955  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:3989  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4008  _getERC20Storage */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:4010  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4028  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4041  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4020:4041  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CatNip.sol\":1317:1481  function setCharityFee(uint256 _charityFee) external onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"contracts/CatNip.sol\":1413:1423  feeDivisor */\n      sload(0x02)\n        /* \"contracts/CatNip.sol\":1398:1409  _charityFee */\n      dup2\n        /* \"contracts/CatNip.sol\":1398:1423  _charityFee <= feeDivisor */\n      gt\n      iszero\n        /* \"contracts/CatNip.sol\":1390:1440  require(_charityFee <= feeDivisor, \"Fee too high\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/CatNip.sol\":1463:1474  _charityFee */\n      dup1\n        /* \"contracts/CatNip.sol\":1450:1460  charityFee */\n      0x01\n        /* \"contracts/CatNip.sol\":1450:1474  charityFee = _charityFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CatNip.sol\":1317:1481  function setCharityFee(uint256 _charityFee) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6075:6079  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6106  address spender */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6119  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6121  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6147:6151  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6153:6160  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6162:6167  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6146  _spendAllowance */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6188:6192  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6194:6196  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6198:6203  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6187  _transfer */\n      tag_121\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6221:6225  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6214:6225  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CatNip.sol\":1129:1311  function setCharityWallet(address _charityWallet) external onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/CatNip.sol\":1242:1243  0 */\n      0x00\n        /* \"contracts/CatNip.sol\":1216:1244  _charityWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CatNip.sol\":1216:1230  _charityWallet */\n      dup2\n        /* \"contracts/CatNip.sol\":1216:1244  _charityWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CatNip.sol\":1208:1264  require(_charityWallet != address(0), \"Invalid address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/CatNip.sol\":1290:1304  _charityWallet */\n      dup1\n        /* \"contracts/CatNip.sol\":1274:1287  charityWallet */\n      0x00\n      dup1\n        /* \"contracts/CatNip.sol\":1274:1304  charityWallet = _charityWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CatNip.sol\":1129:1311  function setCharityWallet(address _charityWallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3803:3808  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3827:3829  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3820:3829  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4178  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4212  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4231  _getERC20Storage */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4233  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4251  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4261  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4269  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4270  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CatNip.sol\":655:1123  function initialize(address _charityWallet, uint256 _initialSupply, uint256 _charityFee) public initializer {... */\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_139\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_140\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_143:\n        /* \"contracts/CatNip.sol\":773:805  __ERC20_init(\"Catnip\", \"CATNIP\") */\n      tag_145\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4361746e69700000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4341544e49500000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/CatNip.sol\":773:785  __ERC20_init */\n      tag_146\n        /* \"contracts/CatNip.sol\":773:805  __ERC20_init(\"Catnip\", \"CATNIP\") */\n      jump\t// in\n    tag_145:\n        /* \"contracts/CatNip.sol\":814:827  address owner */\n      0x00\n        /* \"contracts/CatNip.sol\":830:840  msg.sender */\n      caller\n        /* \"contracts/CatNip.sol\":814:840  address owner = msg.sender */\n      swap1\n      pop\n        /* \"contracts/CatNip.sol\":849:870  __Ownable_init(owner) */\n      tag_147\n        /* \"contracts/CatNip.sol\":864:869  owner */\n      dup2\n        /* \"contracts/CatNip.sol\":849:863  __Ownable_init */\n      tag_148\n        /* \"contracts/CatNip.sol\":849:870  __Ownable_init(owner) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/CatNip.sol\":897:911  _charityWallet */\n      dup9\n        /* \"contracts/CatNip.sol\":881:894  charityWallet */\n      0x00\n      dup1\n        /* \"contracts/CatNip.sol\":881:911  charityWallet = _charityWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CatNip.sol\":934:945  _charityFee */\n      dup7\n        /* \"contracts/CatNip.sol\":921:931  charityFee */\n      0x01\n        /* \"contracts/CatNip.sol\":921:945  charityFee = _charityFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CatNip.sol\":968:973  10000 */\n      0x2710\n        /* \"contracts/CatNip.sol\":955:965  feeDivisor */\n      0x02\n        /* \"contracts/CatNip.sol\":955:973  feeDivisor = 10000 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CatNip.sol\":1062:1116  _mint(msg.sender, _initialSupply * (10 ** decimals())) */\n      tag_149\n        /* \"contracts/CatNip.sol\":1068:1078  msg.sender */\n      caller\n        /* \"contracts/CatNip.sol\":1104:1114  decimals() */\n      tag_150\n        /* \"contracts/CatNip.sol\":1104:1112  decimals */\n      tag_52\n        /* \"contracts/CatNip.sol\":1104:1114  decimals() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/CatNip.sol\":1098:1100  10 */\n      0x0a\n        /* \"contracts/CatNip.sol\":1098:1114  10 ** decimals() */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"contracts/CatNip.sol\":1080:1094  _initialSupply */\n      dup11\n        /* \"contracts/CatNip.sol\":1080:1115  _initialSupply * (10 ** decimals()) */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"contracts/CatNip.sol\":1062:1067  _mint */\n      tag_155\n        /* \"contracts/CatNip.sol\":1062:1116  _mint(msg.sender, _initialSupply * (10 ** decimals())) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/CatNip.sol\":763:1123  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CatNip.sol\":655:1123  function initialize(address _charityWallet, uint256 _initialSupply, uint256 _charityFee) public initializer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CatNip.sol\":371:399  address public charityWallet */\n    tag_66:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3020:3033  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3067  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3086  _getERC20Storage */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3088  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3106  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3114  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3098:3114  return $._symbol */\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_97\n      jump\t// in\n    tag_164:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_97\n      jump\t// in\n    tag_165:\n      dup1\n      iszero\n      tag_166\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_167\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_166)\n    tag_167:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_168:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_168\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CatNip.sol\":559:584  uint256 public feeDivisor */\n    tag_76:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4541:4545  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4570  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4583  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4585  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4605:4610  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4614  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4616:4621  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4604  _transfer */\n      tag_121\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4639:4643  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4632:4643  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4795  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4829  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4848  _getERC20Storage */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4850  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4868  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4880  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4881:4886  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4888:4895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4860:4896  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CatNip.sol\":450:475  uint256 public charityFee */\n    tag_88:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10025:10153  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10109:10146  _approve(owner, spender, value, true) */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10118:10123  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10125:10132  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10134:10139  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10141:10145  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10109:10117  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10109:10146  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10025:10153  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_70\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11769:12246  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11868:11892  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11895:11920  allowance(owner, spender) */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11905:11910  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11912:11919  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11895:11904  allowance */\n      tag_85\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11895:11920  allowance(owner, spender) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11868:11920  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11954:11971  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11934:11950  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11934:11971  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11930:12240  if (currentAllowance != type(uint256).max) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12010:12015  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11991:12007  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11991:12015  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11987:12117  if (currentAllowance < value) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12069:12076  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12078:12094  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12096:12101  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12042:12102  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11987:12117  if (currentAllowance < value) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12215  _approve(owner, spender, currentAllowance - value, false) */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12167:12172  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12174:12181  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12202:12207  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12183:12199  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12183:12207  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12209:12214  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12166  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12215  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11930:12240  if (currentAllowance != type(uint256).max) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11858:12246  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11769:12246  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CatNip.sol\":1487:2063  function _transfer(address sender, address recipient, uint256 amount) internal override {... */\n    tag_121:\n        /* \"contracts/CatNip.sol\":1659:1676  uint256 feeAmount */\n      0x00\n        /* \"contracts/CatNip.sol\":1703:1713  feeDivisor */\n      sload(0x02)\n        /* \"contracts/CatNip.sol\":1689:1699  charityFee */\n      sload(0x01)\n        /* \"contracts/CatNip.sol\":1680:1686  amount */\n      dup4\n        /* \"contracts/CatNip.sol\":1680:1699  amount * charityFee */\n      tag_199\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_199:\n        /* \"contracts/CatNip.sol\":1679:1713  (amount * charityFee) / feeDivisor */\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"contracts/CatNip.sol\":1659:1713  uint256 feeAmount = (amount * charityFee) / feeDivisor */\n      swap1\n      pop\n        /* \"contracts/CatNip.sol\":1784:1806  uint256 amountAfterFee */\n      0x00\n        /* \"contracts/CatNip.sol\":1818:1827  feeAmount */\n      dup2\n        /* \"contracts/CatNip.sol\":1809:1815  amount */\n      dup4\n        /* \"contracts/CatNip.sol\":1809:1827  amount - feeAmount */\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"contracts/CatNip.sol\":1784:1827  uint256 amountAfterFee = amount - feeAmount */\n      swap1\n      pop\n        /* \"contracts/CatNip.sol\":1888:1937  super._transfer(sender, charityWallet, feeAmount) */\n      tag_204\n        /* \"contracts/CatNip.sol\":1904:1910  sender */\n      dup6\n        /* \"contracts/CatNip.sol\":1912:1925  charityWallet */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CatNip.sol\":1927:1936  feeAmount */\n      dup5\n        /* \"contracts/CatNip.sol\":1888:1903  super._transfer */\n      tag_205\n        /* \"contracts/CatNip.sol\":1888:1937  super._transfer(sender, charityWallet, feeAmount) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/CatNip.sol\":2006:2056  super._transfer(sender, recipient, amountAfterFee) */\n      tag_206\n        /* \"contracts/CatNip.sol\":2022:2028  sender */\n      dup6\n        /* \"contracts/CatNip.sol\":2030:2039  recipient */\n      dup6\n        /* \"contracts/CatNip.sol\":2041:2055  amountAfterFee */\n      dup4\n        /* \"contracts/CatNip.sol\":2006:2021  super._transfer */\n      tag_205\n        /* \"contracts/CatNip.sol\":2006:2056  super._transfer(sender, recipient, amountAfterFee) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/CatNip.sol\":1575:2063  {... */\n      pop\n      pop\n        /* \"contracts/CatNip.sol\":1487:2063  function _transfer(address sender, address recipient, uint256 amount) internal override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2407:2412  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2414:2421  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2406  __ERC20_init_unchained */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8741:8957  function _mint(address account, uint256 value) internal virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8838:8839  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8819:8840  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8819:8826  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8819:8840  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8815:8906  if (account == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8892:8893  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8863:8895  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8815:8906  if (account == address(0)) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8915:8950  _update(address(0), account, value) */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8931:8932  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8935:8942  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8944:8949  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8915:8922  _update */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8915:8950  _update(address(0), account, value) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8741:8957  function _mint(address account, uint256 value) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11000:11487  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11108:11130  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11133:11151  _getERC20Storage() */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11133:11149  _getERC20Storage */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11133:11151  _getERC20Storage() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11108:11151  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11182:11183  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11165:11184  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11165:11170  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11165:11184  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11161:11250  if (owner == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11236:11237  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11207:11239  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11161:11250  if (owner == address(0)) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11282:11283  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11263:11284  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11263:11270  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11263:11284  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11259:11349  if (spender == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11335:11336  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11307:11338  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11259:11349  if (spender == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11390:11395  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11358:11359  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11358:11371  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11358:11378  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11372:11377  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11358:11378  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11358:11387  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11379:11386  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11358:11387  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11358:11395  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11409:11418  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11405:11481  if (emitEvent) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11455:11462  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11439:11470  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11448:11453  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11439:11470  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11464:11469  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11439:11470  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_234\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11405:11481  if (emitEvent) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11098:11487  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11000:11487  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6913  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6712:6713  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6696:6714  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6696:6700  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6696:6714  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6692:6778  if (from == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6764:6765  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6737:6767  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6692:6778  if (from == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6805:6806  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6791:6807  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6791:6793  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6791:6807  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6787:6873  if (to == address(0)) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6859:6860  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6830:6862  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6787:6873  if (to == address(0)) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6882:6906  _update(from, to, value) */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6890:6894  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6896:6898  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6900:6905  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6882:6889  _update */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6882:6906  _update(from, to, value) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6913  function _transfer(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2569  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2588  _getERC20Storage */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2590  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2610:2615  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2601  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2607  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2615  $._name = name_ */\n      swap1\n      dup2\n      tag_249\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2637:2644  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2626  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2634  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2644  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_251\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_251:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2537:2651  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7228:8398  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7313:7335  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7338:7356  _getERC20Storage() */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7338:7354  _getERC20Storage */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7338:7356  _getERC20Storage() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7313:7356  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7386:7387  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7370:7388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7370:7374  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7370:7388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7366:7912  if (from == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7524:7529  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7506:7507  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7506:7520  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7506:7529  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_261\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7366:7912  if (from == address(0)) {... */\n      jump(tag_263)\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7560:7579  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7582:7583  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7582:7593  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7582:7599  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7594:7598  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7582:7599  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7560:7599  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7631:7636  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7617:7628  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7617:7636  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7613:7728  if (fromBalance < value) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7688:7692  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7694:7705  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7707:7712  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7663:7713  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7613:7728  if (fromBalance < value) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7882:7887  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7868:7879  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7868:7887  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7848:7849  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7848:7859  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7848:7865  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7864  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7848:7865  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7848:7887  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7546:7912  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7366:7912  if (from == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7940:7941  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7926:7942  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7926:7928  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7926:7942  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7922:8351  if (to == address(0)) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8107:8112  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8089:8090  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8089:8103  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8089:8112  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7922:8351  if (to == address(0)) {... */\n      jump(tag_267)\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8321:8326  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8302:8303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8302:8313  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8302:8317  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8314:8316  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8302:8317  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8302:8326  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7922:8351  if (to == address(0)) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8381:8383  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8366:8391  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8375:8379  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8366:8391  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8385:8390  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8366:8391  Transfer(from, to, value) */\n      mload(0x40)\n      tag_268\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7303:8398  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7228:8398  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_270\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_271:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_272:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_273:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_274:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_275:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_328\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_271\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":711:782   */\n      tag_329\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_272\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_330\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_273\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":881:910   */\n      tag_331\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_274\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_27:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_333\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_275\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_277:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_279:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_280:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_339\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_279\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_281:\n        /* \"#utility.yul\":1876:1900   */\n      tag_341\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_280\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_342:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_282:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_344\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_281\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_283:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_284:\n        /* \"#utility.yul\":2232:2256   */\n      tag_347\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_283\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_348:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_285:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_350\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_284\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_30:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_353\n      tag_277\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2525:2644   */\n    tag_352:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_354\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_282\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_355\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_285\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_286:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_287:\n        /* \"#utility.yul\":3089:3110   */\n      tag_358\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_286\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_33:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_360\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_287\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_288:\n        /* \"#utility.yul\":3426:3450   */\n      tag_362\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_283\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_37:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_364\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_288\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_40:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_367\n      tag_277\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3767:3886   */\n    tag_366:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_368\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_285\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_44:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_371\n      tag_277\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4136:4255   */\n    tag_370:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_372\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_282\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_373\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_282\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_374\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_285\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4980   */\n    tag_49:\n        /* \"#utility.yul\":4710:4716   */\n      0x00\n        /* \"#utility.yul\":4759:4761   */\n      0x20\n        /* \"#utility.yul\":4747:4756   */\n      dup3\n        /* \"#utility.yul\":4738:4745   */\n      dup5\n        /* \"#utility.yul\":4734:4757   */\n      sub\n        /* \"#utility.yul\":4730:4762   */\n      slt\n        /* \"#utility.yul\":4727:4846   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":4765:4844   */\n      tag_377\n      tag_277\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4727:4846   */\n    tag_376:\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4910:4963   */\n      tag_378\n        /* \"#utility.yul\":4955:4962   */\n      dup5\n        /* \"#utility.yul\":4946:4952   */\n      dup3\n        /* \"#utility.yul\":4935:4944   */\n      dup6\n        /* \"#utility.yul\":4931:4953   */\n      add\n        /* \"#utility.yul\":4910:4963   */\n      tag_282\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4900:4963   */\n      swap2\n      pop\n        /* \"#utility.yul\":4856:4973   */\n      pop\n        /* \"#utility.yul\":4651:4980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4986:5072   */\n    tag_289:\n        /* \"#utility.yul\":5021:5028   */\n      0x00\n        /* \"#utility.yul\":5061:5065   */\n      0xff\n        /* \"#utility.yul\":5054:5059   */\n      dup3\n        /* \"#utility.yul\":5050:5066   */\n      and\n        /* \"#utility.yul\":5039:5066   */\n      swap1\n      pop\n        /* \"#utility.yul\":4986:5072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5078:5190   */\n    tag_290:\n        /* \"#utility.yul\":5161:5183   */\n      tag_381\n        /* \"#utility.yul\":5177:5182   */\n      dup2\n        /* \"#utility.yul\":5161:5183   */\n      tag_289\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5156:5159   */\n      dup3\n        /* \"#utility.yul\":5149:5184   */\n      mstore\n        /* \"#utility.yul\":5078:5190   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5196:5410   */\n    tag_54:\n        /* \"#utility.yul\":5285:5289   */\n      0x00\n        /* \"#utility.yul\":5323:5325   */\n      0x20\n        /* \"#utility.yul\":5312:5321   */\n      dup3\n        /* \"#utility.yul\":5308:5326   */\n      add\n        /* \"#utility.yul\":5300:5326   */\n      swap1\n      pop\n        /* \"#utility.yul\":5336:5403   */\n      tag_383\n        /* \"#utility.yul\":5400:5401   */\n      0x00\n        /* \"#utility.yul\":5389:5398   */\n      dup4\n        /* \"#utility.yul\":5385:5402   */\n      add\n        /* \"#utility.yul\":5376:5382   */\n      dup5\n        /* \"#utility.yul\":5336:5403   */\n      tag_290\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5196:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:6035   */\n    tag_63:\n        /* \"#utility.yul\":5493:5499   */\n      0x00\n        /* \"#utility.yul\":5501:5507   */\n      dup1\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x60\n        /* \"#utility.yul\":5546:5555   */\n      dup5\n        /* \"#utility.yul\":5537:5544   */\n      dup7\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_386\n      tag_277\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5526:5645   */\n    tag_385:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_387\n        /* \"#utility.yul\":5754:5761   */\n      dup7\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup8\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_282\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5699:5762   */\n      swap4\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_388\n        /* \"#utility.yul\":5882:5889   */\n      dup7\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup8\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_285\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5827:5890   */\n      swap3\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5939:5941   */\n      0x40\n        /* \"#utility.yul\":5965:6018   */\n      tag_389\n        /* \"#utility.yul\":6010:6017   */\n      dup7\n        /* \"#utility.yul\":6001:6007   */\n      dup3\n        /* \"#utility.yul\":5990:5999   */\n      dup8\n        /* \"#utility.yul\":5986:6008   */\n      add\n        /* \"#utility.yul\":5965:6018   */\n      tag_285\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":5955:6018   */\n      swap2\n      pop\n        /* \"#utility.yul\":5910:6028   */\n      pop\n        /* \"#utility.yul\":5416:6035   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6041:6159   */\n    tag_291:\n        /* \"#utility.yul\":6128:6152   */\n      tag_391\n        /* \"#utility.yul\":6146:6151   */\n      dup2\n        /* \"#utility.yul\":6128:6152   */\n      tag_280\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6123:6126   */\n      dup3\n        /* \"#utility.yul\":6116:6153   */\n      mstore\n        /* \"#utility.yul\":6041:6159   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6165:6387   */\n    tag_68:\n        /* \"#utility.yul\":6258:6262   */\n      0x00\n        /* \"#utility.yul\":6296:6298   */\n      0x20\n        /* \"#utility.yul\":6285:6294   */\n      dup3\n        /* \"#utility.yul\":6281:6299   */\n      add\n        /* \"#utility.yul\":6273:6299   */\n      swap1\n      pop\n        /* \"#utility.yul\":6309:6380   */\n      tag_393\n        /* \"#utility.yul\":6377:6378   */\n      0x00\n        /* \"#utility.yul\":6366:6375   */\n      dup4\n        /* \"#utility.yul\":6362:6379   */\n      add\n        /* \"#utility.yul\":6353:6359   */\n      dup5\n        /* \"#utility.yul\":6309:6380   */\n      tag_291\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6165:6387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6393:6867   */\n    tag_84:\n        /* \"#utility.yul\":6461:6467   */\n      0x00\n        /* \"#utility.yul\":6469:6475   */\n      dup1\n        /* \"#utility.yul\":6518:6520   */\n      0x40\n        /* \"#utility.yul\":6506:6515   */\n      dup4\n        /* \"#utility.yul\":6497:6504   */\n      dup6\n        /* \"#utility.yul\":6493:6516   */\n      sub\n        /* \"#utility.yul\":6489:6521   */\n      slt\n        /* \"#utility.yul\":6486:6605   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":6524:6603   */\n      tag_396\n      tag_277\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6486:6605   */\n    tag_395:\n        /* \"#utility.yul\":6644:6645   */\n      0x00\n        /* \"#utility.yul\":6669:6722   */\n      tag_397\n        /* \"#utility.yul\":6714:6721   */\n      dup6\n        /* \"#utility.yul\":6705:6711   */\n      dup3\n        /* \"#utility.yul\":6694:6703   */\n      dup7\n        /* \"#utility.yul\":6690:6712   */\n      add\n        /* \"#utility.yul\":6669:6722   */\n      tag_282\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6659:6722   */\n      swap3\n      pop\n        /* \"#utility.yul\":6615:6732   */\n      pop\n        /* \"#utility.yul\":6771:6773   */\n      0x20\n        /* \"#utility.yul\":6797:6850   */\n      tag_398\n        /* \"#utility.yul\":6842:6849   */\n      dup6\n        /* \"#utility.yul\":6833:6839   */\n      dup3\n        /* \"#utility.yul\":6822:6831   */\n      dup7\n        /* \"#utility.yul\":6818:6840   */\n      add\n        /* \"#utility.yul\":6797:6850   */\n      tag_282\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6787:6850   */\n      swap2\n      pop\n        /* \"#utility.yul\":6742:6860   */\n      pop\n        /* \"#utility.yul\":6393:6867   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6873:7053   */\n    tag_292:\n        /* \"#utility.yul\":6921:6998   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6918:6919   */\n      0x00\n        /* \"#utility.yul\":6911:6999   */\n      mstore\n        /* \"#utility.yul\":7018:7022   */\n      0x22\n        /* \"#utility.yul\":7015:7016   */\n      0x04\n        /* \"#utility.yul\":7008:7023   */\n      mstore\n        /* \"#utility.yul\":7042:7046   */\n      0x24\n        /* \"#utility.yul\":7039:7040   */\n      0x00\n        /* \"#utility.yul\":7032:7047   */\n      revert\n        /* \"#utility.yul\":7059:7379   */\n    tag_97:\n        /* \"#utility.yul\":7103:7109   */\n      0x00\n        /* \"#utility.yul\":7140:7141   */\n      0x02\n        /* \"#utility.yul\":7134:7138   */\n      dup3\n        /* \"#utility.yul\":7130:7142   */\n      div\n        /* \"#utility.yul\":7120:7142   */\n      swap1\n      pop\n        /* \"#utility.yul\":7187:7188   */\n      0x01\n        /* \"#utility.yul\":7181:7185   */\n      dup3\n        /* \"#utility.yul\":7177:7189   */\n      and\n        /* \"#utility.yul\":7208:7226   */\n      dup1\n        /* \"#utility.yul\":7198:7279   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":7264:7268   */\n      0x7f\n        /* \"#utility.yul\":7256:7262   */\n      dup3\n        /* \"#utility.yul\":7252:7269   */\n      and\n        /* \"#utility.yul\":7242:7269   */\n      swap2\n      pop\n        /* \"#utility.yul\":7198:7279   */\n    tag_401:\n        /* \"#utility.yul\":7326:7328   */\n      0x20\n        /* \"#utility.yul\":7318:7324   */\n      dup3\n        /* \"#utility.yul\":7315:7329   */\n      lt\n        /* \"#utility.yul\":7295:7313   */\n      dup2\n        /* \"#utility.yul\":7292:7330   */\n      sub\n        /* \"#utility.yul\":7289:7373   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":7345:7363   */\n      tag_403\n      tag_292\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7289:7373   */\n    tag_402:\n        /* \"#utility.yul\":7110:7379   */\n      pop\n        /* \"#utility.yul\":7059:7379   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7385:7547   */\n    tag_293:\n        /* \"#utility.yul\":7525:7539   */\n      0x46656520746f6f20686967680000000000000000000000000000000000000000\n        /* \"#utility.yul\":7521:7522   */\n      0x00\n        /* \"#utility.yul\":7513:7519   */\n      dup3\n        /* \"#utility.yul\":7509:7523   */\n      add\n        /* \"#utility.yul\":7502:7540   */\n      mstore\n        /* \"#utility.yul\":7385:7547   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7553:7919   */\n    tag_294:\n        /* \"#utility.yul\":7695:7698   */\n      0x00\n        /* \"#utility.yul\":7716:7783   */\n      tag_406\n        /* \"#utility.yul\":7780:7782   */\n      0x0c\n        /* \"#utility.yul\":7775:7778   */\n      dup4\n        /* \"#utility.yul\":7716:7783   */\n      tag_272\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7709:7783   */\n      swap2\n      pop\n        /* \"#utility.yul\":7792:7885   */\n      tag_407\n        /* \"#utility.yul\":7881:7884   */\n      dup3\n        /* \"#utility.yul\":7792:7885   */\n      tag_293\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7910:7912   */\n      0x20\n        /* \"#utility.yul\":7905:7908   */\n      dup3\n        /* \"#utility.yul\":7901:7913   */\n      add\n        /* \"#utility.yul\":7894:7913   */\n      swap1\n      pop\n        /* \"#utility.yul\":7553:7919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7925:8344   */\n    tag_115:\n        /* \"#utility.yul\":8091:8095   */\n      0x00\n        /* \"#utility.yul\":8129:8131   */\n      0x20\n        /* \"#utility.yul\":8118:8127   */\n      dup3\n        /* \"#utility.yul\":8114:8132   */\n      add\n        /* \"#utility.yul\":8106:8132   */\n      swap1\n      pop\n        /* \"#utility.yul\":8178:8187   */\n      dup2\n        /* \"#utility.yul\":8172:8176   */\n      dup2\n        /* \"#utility.yul\":8168:8188   */\n      sub\n        /* \"#utility.yul\":8164:8165   */\n      0x00\n        /* \"#utility.yul\":8153:8162   */\n      dup4\n        /* \"#utility.yul\":8149:8166   */\n      add\n        /* \"#utility.yul\":8142:8189   */\n      mstore\n        /* \"#utility.yul\":8206:8337   */\n      tag_409\n        /* \"#utility.yul\":8332:8336   */\n      dup2\n        /* \"#utility.yul\":8206:8337   */\n      tag_294\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8198:8337   */\n      swap1\n      pop\n        /* \"#utility.yul\":7925:8344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8350:8515   */\n    tag_295:\n        /* \"#utility.yul\":8490:8507   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":8486:8487   */\n      0x00\n        /* \"#utility.yul\":8478:8484   */\n      dup3\n        /* \"#utility.yul\":8474:8488   */\n      add\n        /* \"#utility.yul\":8467:8508   */\n      mstore\n        /* \"#utility.yul\":8350:8515   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8521:8887   */\n    tag_296:\n        /* \"#utility.yul\":8663:8666   */\n      0x00\n        /* \"#utility.yul\":8684:8751   */\n      tag_412\n        /* \"#utility.yul\":8748:8750   */\n      0x0f\n        /* \"#utility.yul\":8743:8746   */\n      dup4\n        /* \"#utility.yul\":8684:8751   */\n      tag_272\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":8677:8751   */\n      swap2\n      pop\n        /* \"#utility.yul\":8760:8853   */\n      tag_413\n        /* \"#utility.yul\":8849:8852   */\n      dup3\n        /* \"#utility.yul\":8760:8853   */\n      tag_295\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8878:8880   */\n      0x20\n        /* \"#utility.yul\":8873:8876   */\n      dup3\n        /* \"#utility.yul\":8869:8881   */\n      add\n        /* \"#utility.yul\":8862:8881   */\n      swap1\n      pop\n        /* \"#utility.yul\":8521:8887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8893:9312   */\n    tag_127:\n        /* \"#utility.yul\":9059:9063   */\n      0x00\n        /* \"#utility.yul\":9097:9099   */\n      0x20\n        /* \"#utility.yul\":9086:9095   */\n      dup3\n        /* \"#utility.yul\":9082:9100   */\n      add\n        /* \"#utility.yul\":9074:9100   */\n      swap1\n      pop\n        /* \"#utility.yul\":9146:9155   */\n      dup2\n        /* \"#utility.yul\":9140:9144   */\n      dup2\n        /* \"#utility.yul\":9136:9156   */\n      sub\n        /* \"#utility.yul\":9132:9133   */\n      0x00\n        /* \"#utility.yul\":9121:9130   */\n      dup4\n        /* \"#utility.yul\":9117:9134   */\n      add\n        /* \"#utility.yul\":9110:9157   */\n      mstore\n        /* \"#utility.yul\":9174:9305   */\n      tag_415\n        /* \"#utility.yul\":9300:9304   */\n      dup2\n        /* \"#utility.yul\":9174:9305   */\n      tag_296\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":9166:9305   */\n      swap1\n      pop\n        /* \"#utility.yul\":8893:9312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9318:9498   */\n    tag_297:\n        /* \"#utility.yul\":9366:9443   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9363:9364   */\n      0x00\n        /* \"#utility.yul\":9356:9444   */\n      mstore\n        /* \"#utility.yul\":9463:9467   */\n      0x11\n        /* \"#utility.yul\":9460:9461   */\n      0x04\n        /* \"#utility.yul\":9453:9468   */\n      mstore\n        /* \"#utility.yul\":9487:9491   */\n      0x24\n        /* \"#utility.yul\":9484:9485   */\n      0x00\n        /* \"#utility.yul\":9477:9492   */\n      revert\n        /* \"#utility.yul\":9504:9606   */\n    tag_298:\n        /* \"#utility.yul\":9546:9554   */\n      0x00\n        /* \"#utility.yul\":9593:9598   */\n      dup2\n        /* \"#utility.yul\":9590:9591   */\n      0x01\n        /* \"#utility.yul\":9586:9599   */\n      shr\n        /* \"#utility.yul\":9565:9599   */\n      swap1\n      pop\n        /* \"#utility.yul\":9504:9606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9612:10460   */\n    tag_299:\n        /* \"#utility.yul\":9673:9678   */\n      0x00\n        /* \"#utility.yul\":9680:9684   */\n      dup1\n        /* \"#utility.yul\":9704:9710   */\n      dup3\n        /* \"#utility.yul\":9695:9710   */\n      swap2\n      pop\n        /* \"#utility.yul\":9728:9733   */\n      dup4\n        /* \"#utility.yul\":9719:9733   */\n      swap1\n      pop\n        /* \"#utility.yul\":9742:10454   */\n    tag_419:\n        /* \"#utility.yul\":9763:9764   */\n      0x01\n        /* \"#utility.yul\":9753:9761   */\n      dup6\n        /* \"#utility.yul\":9750:9765   */\n      gt\n        /* \"#utility.yul\":9742:10454   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":9858:9862   */\n      dup1\n        /* \"#utility.yul\":9853:9856   */\n      dup7\n        /* \"#utility.yul\":9849:9863   */\n      div\n        /* \"#utility.yul\":9843:9847   */\n      dup2\n        /* \"#utility.yul\":9840:9864   */\n      gt\n        /* \"#utility.yul\":9837:9887   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":9867:9885   */\n      tag_423\n      tag_297\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9837:9887   */\n    tag_422:\n        /* \"#utility.yul\":9917:9918   */\n      0x01\n        /* \"#utility.yul\":9907:9915   */\n      dup6\n        /* \"#utility.yul\":9903:9919   */\n      and\n        /* \"#utility.yul\":9900:10351   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":10332:10336   */\n      dup1\n        /* \"#utility.yul\":10325:10330   */\n      dup3\n        /* \"#utility.yul\":10321:10337   */\n      mul\n        /* \"#utility.yul\":10312:10337   */\n      swap2\n      pop\n        /* \"#utility.yul\":9900:10351   */\n    tag_424:\n        /* \"#utility.yul\":10382:10386   */\n      dup1\n        /* \"#utility.yul\":10376:10380   */\n      dup2\n        /* \"#utility.yul\":10372:10387   */\n      mul\n        /* \"#utility.yul\":10364:10387   */\n      swap1\n      pop\n        /* \"#utility.yul\":10412:10444   */\n      tag_425\n        /* \"#utility.yul\":10435:10443   */\n      dup6\n        /* \"#utility.yul\":10412:10444   */\n      tag_298\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":10400:10444   */\n      swap5\n      pop\n        /* \"#utility.yul\":9742:10454   */\n      jump(tag_419)\n    tag_421:\n        /* \"#utility.yul\":9612:10460   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10466:11539   */\n    tag_300:\n        /* \"#utility.yul\":10520:10525   */\n      0x00\n        /* \"#utility.yul\":10711:10719   */\n      dup3\n        /* \"#utility.yul\":10701:10741   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":10732:10733   */\n      0x01\n        /* \"#utility.yul\":10723:10733   */\n      swap1\n      pop\n        /* \"#utility.yul\":10734:10739   */\n      jump(tag_426)\n        /* \"#utility.yul\":10701:10741   */\n    tag_427:\n        /* \"#utility.yul\":10760:10764   */\n      dup2\n        /* \"#utility.yul\":10750:10786   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":10777:10778   */\n      0x00\n        /* \"#utility.yul\":10768:10778   */\n      swap1\n      pop\n        /* \"#utility.yul\":10779:10784   */\n      jump(tag_426)\n        /* \"#utility.yul\":10750:10786   */\n    tag_428:\n        /* \"#utility.yul\":10846:10850   */\n      dup2\n        /* \"#utility.yul\":10894:10895   */\n      0x01\n        /* \"#utility.yul\":10889:10916   */\n      dup2\n      eq\n      tag_430\n      jumpi\n        /* \"#utility.yul\":10930:10931   */\n      0x02\n        /* \"#utility.yul\":10925:11116   */\n      dup2\n      eq\n      tag_431\n      jumpi\n        /* \"#utility.yul\":10839:11116   */\n      jump(tag_429)\n        /* \"#utility.yul\":10889:10916   */\n    tag_430:\n        /* \"#utility.yul\":10907:10908   */\n      0x01\n        /* \"#utility.yul\":10898:10908   */\n      swap2\n      pop\n        /* \"#utility.yul\":10909:10914   */\n      pop\n      jump(tag_426)\n        /* \"#utility.yul\":10925:11116   */\n    tag_431:\n        /* \"#utility.yul\":10970:10973   */\n      0xff\n        /* \"#utility.yul\":10960:10968   */\n      dup5\n        /* \"#utility.yul\":10957:10974   */\n      gt\n        /* \"#utility.yul\":10954:10997   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":10977:10995   */\n      tag_433\n      tag_297\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":10954:10997   */\n    tag_432:\n        /* \"#utility.yul\":11026:11034   */\n      dup4\n        /* \"#utility.yul\":11023:11024   */\n      0x02\n        /* \"#utility.yul\":11019:11035   */\n      exp\n        /* \"#utility.yul\":11010:11035   */\n      swap2\n      pop\n        /* \"#utility.yul\":11061:11064   */\n      dup5\n        /* \"#utility.yul\":11054:11059   */\n      dup3\n        /* \"#utility.yul\":11051:11065   */\n      gt\n        /* \"#utility.yul\":11048:11088   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":11068:11086   */\n      tag_435\n      tag_297\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":11048:11088   */\n    tag_434:\n        /* \"#utility.yul\":11101:11106   */\n      pop\n      jump(tag_426)\n        /* \"#utility.yul\":10839:11116   */\n    tag_429:\n      pop\n        /* \"#utility.yul\":11225:11227   */\n      0x20\n        /* \"#utility.yul\":11215:11223   */\n      dup4\n        /* \"#utility.yul\":11212:11228   */\n      lt\n        /* \"#utility.yul\":11206:11209   */\n      0x0133\n        /* \"#utility.yul\":11200:11204   */\n      dup4\n        /* \"#utility.yul\":11197:11210   */\n      lt\n        /* \"#utility.yul\":11193:11229   */\n      and\n        /* \"#utility.yul\":11175:11177   */\n      0x4e\n        /* \"#utility.yul\":11165:11173   */\n      dup5\n        /* \"#utility.yul\":11162:11178   */\n      lt\n        /* \"#utility.yul\":11157:11159   */\n      0x0b\n        /* \"#utility.yul\":11151:11155   */\n      dup5\n        /* \"#utility.yul\":11148:11160   */\n      lt\n        /* \"#utility.yul\":11144:11179   */\n      and\n        /* \"#utility.yul\":11128:11239   */\n      or\n        /* \"#utility.yul\":11125:11371   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":11281:11289   */\n      dup3\n        /* \"#utility.yul\":11275:11279   */\n      dup3\n        /* \"#utility.yul\":11271:11290   */\n      exp\n        /* \"#utility.yul\":11262:11290   */\n      swap1\n      pop\n        /* \"#utility.yul\":11316:11319   */\n      dup4\n        /* \"#utility.yul\":11309:11314   */\n      dup2\n        /* \"#utility.yul\":11306:11320   */\n      gt\n        /* \"#utility.yul\":11303:11343   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":11323:11341   */\n      tag_438\n      tag_297\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11303:11343   */\n    tag_437:\n        /* \"#utility.yul\":11356:11361   */\n      jump(tag_426)\n        /* \"#utility.yul\":11125:11371   */\n    tag_436:\n        /* \"#utility.yul\":11396:11438   */\n      tag_439\n        /* \"#utility.yul\":11434:11437   */\n      dup5\n        /* \"#utility.yul\":11424:11432   */\n      dup5\n        /* \"#utility.yul\":11418:11422   */\n      dup5\n        /* \"#utility.yul\":11415:11416   */\n      0x01\n        /* \"#utility.yul\":11396:11438   */\n      tag_299\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":11381:11438   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":11470:11474   */\n      dup2\n        /* \"#utility.yul\":11465:11468   */\n      dup5\n        /* \"#utility.yul\":11461:11475   */\n      div\n        /* \"#utility.yul\":11454:11459   */\n      dup2\n        /* \"#utility.yul\":11451:11476   */\n      gt\n        /* \"#utility.yul\":11448:11499   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":11479:11497   */\n      tag_441\n      tag_297\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11448:11499   */\n    tag_440:\n        /* \"#utility.yul\":11528:11532   */\n      dup2\n        /* \"#utility.yul\":11521:11526   */\n      dup2\n        /* \"#utility.yul\":11517:11533   */\n      mul\n        /* \"#utility.yul\":11508:11533   */\n      swap1\n      pop\n        /* \"#utility.yul\":10466:11539   */\n    tag_426:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11545:11826   */\n    tag_152:\n        /* \"#utility.yul\":11603:11608   */\n      0x00\n        /* \"#utility.yul\":11627:11650   */\n      tag_443\n        /* \"#utility.yul\":11645:11649   */\n      dup3\n        /* \"#utility.yul\":11627:11650   */\n      tag_283\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11619:11650   */\n      swap2\n      pop\n        /* \"#utility.yul\":11671:11696   */\n      tag_444\n        /* \"#utility.yul\":11687:11695   */\n      dup4\n        /* \"#utility.yul\":11671:11696   */\n      tag_289\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11659:11696   */\n      swap3\n      pop\n        /* \"#utility.yul\":11715:11819   */\n      tag_445\n        /* \"#utility.yul\":11752:11818   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11742:11750   */\n      dup5\n        /* \"#utility.yul\":11736:11740   */\n      dup5\n        /* \"#utility.yul\":11715:11819   */\n      tag_300\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11706:11819   */\n      swap1\n      pop\n        /* \"#utility.yul\":11545:11826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11832:12242   */\n    tag_154:\n        /* \"#utility.yul\":11872:11879   */\n      0x00\n        /* \"#utility.yul\":11895:11915   */\n      tag_447\n        /* \"#utility.yul\":11913:11914   */\n      dup3\n        /* \"#utility.yul\":11895:11915   */\n      tag_283\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11890:11915   */\n      swap2\n      pop\n        /* \"#utility.yul\":11929:11949   */\n      tag_448\n        /* \"#utility.yul\":11947:11948   */\n      dup4\n        /* \"#utility.yul\":11929:11949   */\n      tag_283\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11924:11949   */\n      swap3\n      pop\n        /* \"#utility.yul\":11984:11985   */\n      dup3\n        /* \"#utility.yul\":11981:11982   */\n      dup3\n        /* \"#utility.yul\":11977:11986   */\n      mul\n        /* \"#utility.yul\":12006:12036   */\n      tag_449\n        /* \"#utility.yul\":12024:12035   */\n      dup2\n        /* \"#utility.yul\":12006:12036   */\n      tag_283\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11995:12036   */\n      swap2\n      pop\n        /* \"#utility.yul\":12185:12186   */\n      dup3\n        /* \"#utility.yul\":12176:12183   */\n      dup3\n        /* \"#utility.yul\":12172:12187   */\n      div\n        /* \"#utility.yul\":12169:12170   */\n      dup5\n        /* \"#utility.yul\":12166:12188   */\n      eq\n        /* \"#utility.yul\":12146:12147   */\n      dup4\n        /* \"#utility.yul\":12139:12148   */\n      iszero\n        /* \"#utility.yul\":12119:12202   */\n      or\n        /* \"#utility.yul\":12096:12235   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":12215:12233   */\n      tag_451\n      tag_297\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12096:12235   */\n    tag_450:\n        /* \"#utility.yul\":11880:12242   */\n      pop\n        /* \"#utility.yul\":11832:12242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12248:12333   */\n    tag_301:\n        /* \"#utility.yul\":12293:12300   */\n      0x00\n        /* \"#utility.yul\":12322:12327   */\n      dup2\n        /* \"#utility.yul\":12311:12327   */\n      swap1\n      pop\n        /* \"#utility.yul\":12248:12333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12339:12440   */\n    tag_302:\n        /* \"#utility.yul\":12375:12382   */\n      0x00\n        /* \"#utility.yul\":12415:12433   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12408:12413   */\n      dup3\n        /* \"#utility.yul\":12404:12434   */\n      and\n        /* \"#utility.yul\":12393:12434   */\n      swap1\n      pop\n        /* \"#utility.yul\":12339:12440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12446:12506   */\n    tag_303:\n        /* \"#utility.yul\":12474:12477   */\n      0x00\n        /* \"#utility.yul\":12495:12500   */\n      dup2\n        /* \"#utility.yul\":12488:12500   */\n      swap1\n      pop\n        /* \"#utility.yul\":12446:12506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12512:12668   */\n    tag_304:\n        /* \"#utility.yul\":12569:12578   */\n      0x00\n        /* \"#utility.yul\":12602:12662   */\n      tag_456\n        /* \"#utility.yul\":12619:12661   */\n      tag_457\n        /* \"#utility.yul\":12628:12660   */\n      tag_458\n        /* \"#utility.yul\":12654:12659   */\n      dup5\n        /* \"#utility.yul\":12628:12660   */\n      tag_301\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12619:12661   */\n      tag_303\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12602:12662   */\n      tag_302\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12589:12662   */\n      swap1\n      pop\n        /* \"#utility.yul\":12512:12668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12674:12819   */\n    tag_305:\n        /* \"#utility.yul\":12768:12812   */\n      tag_460\n        /* \"#utility.yul\":12806:12811   */\n      dup2\n        /* \"#utility.yul\":12768:12812   */\n      tag_304\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12763:12766   */\n      dup3\n        /* \"#utility.yul\":12756:12813   */\n      mstore\n        /* \"#utility.yul\":12674:12819   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12825:13061   */\n    tag_158:\n        /* \"#utility.yul\":12925:12929   */\n      0x00\n        /* \"#utility.yul\":12963:12965   */\n      0x20\n        /* \"#utility.yul\":12952:12961   */\n      dup3\n        /* \"#utility.yul\":12948:12966   */\n      add\n        /* \"#utility.yul\":12940:12966   */\n      swap1\n      pop\n        /* \"#utility.yul\":12976:13054   */\n      tag_462\n        /* \"#utility.yul\":13051:13052   */\n      0x00\n        /* \"#utility.yul\":13040:13049   */\n      dup4\n        /* \"#utility.yul\":13036:13053   */\n      add\n        /* \"#utility.yul\":13027:13033   */\n      dup5\n        /* \"#utility.yul\":12976:13054   */\n      tag_305\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12825:13061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13067:13509   */\n    tag_196:\n        /* \"#utility.yul\":13216:13220   */\n      0x00\n        /* \"#utility.yul\":13254:13256   */\n      0x60\n        /* \"#utility.yul\":13243:13252   */\n      dup3\n        /* \"#utility.yul\":13239:13257   */\n      add\n        /* \"#utility.yul\":13231:13257   */\n      swap1\n      pop\n        /* \"#utility.yul\":13267:13338   */\n      tag_464\n        /* \"#utility.yul\":13335:13336   */\n      0x00\n        /* \"#utility.yul\":13324:13333   */\n      dup4\n        /* \"#utility.yul\":13320:13337   */\n      add\n        /* \"#utility.yul\":13311:13317   */\n      dup7\n        /* \"#utility.yul\":13267:13338   */\n      tag_291\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":13348:13420   */\n      tag_465\n        /* \"#utility.yul\":13416:13418   */\n      0x20\n        /* \"#utility.yul\":13405:13414   */\n      dup4\n        /* \"#utility.yul\":13401:13419   */\n      add\n        /* \"#utility.yul\":13392:13398   */\n      dup6\n        /* \"#utility.yul\":13348:13420   */\n      tag_288\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":13430:13502   */\n      tag_466\n        /* \"#utility.yul\":13498:13500   */\n      0x40\n        /* \"#utility.yul\":13487:13496   */\n      dup4\n        /* \"#utility.yul\":13483:13501   */\n      add\n        /* \"#utility.yul\":13474:13480   */\n      dup5\n        /* \"#utility.yul\":13430:13502   */\n      tag_288\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":13067:13509   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13515:13695   */\n    tag_306:\n        /* \"#utility.yul\":13563:13640   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13560:13561   */\n      0x00\n        /* \"#utility.yul\":13553:13641   */\n      mstore\n        /* \"#utility.yul\":13660:13664   */\n      0x12\n        /* \"#utility.yul\":13657:13658   */\n      0x04\n        /* \"#utility.yul\":13650:13665   */\n      mstore\n        /* \"#utility.yul\":13684:13688   */\n      0x24\n        /* \"#utility.yul\":13681:13682   */\n      0x00\n        /* \"#utility.yul\":13674:13689   */\n      revert\n        /* \"#utility.yul\":13701:13886   */\n    tag_201:\n        /* \"#utility.yul\":13741:13742   */\n      0x00\n        /* \"#utility.yul\":13758:13778   */\n      tag_469\n        /* \"#utility.yul\":13776:13777   */\n      dup3\n        /* \"#utility.yul\":13758:13778   */\n      tag_283\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13753:13778   */\n      swap2\n      pop\n        /* \"#utility.yul\":13792:13812   */\n      tag_470\n        /* \"#utility.yul\":13810:13811   */\n      dup4\n        /* \"#utility.yul\":13792:13812   */\n      tag_283\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":13787:13812   */\n      swap3\n      pop\n        /* \"#utility.yul\":13831:13832   */\n      dup3\n        /* \"#utility.yul\":13821:13856   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":13836:13854   */\n      tag_472\n      tag_306\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":13821:13856   */\n    tag_471:\n        /* \"#utility.yul\":13878:13879   */\n      dup3\n        /* \"#utility.yul\":13875:13876   */\n      dup3\n        /* \"#utility.yul\":13871:13880   */\n      div\n        /* \"#utility.yul\":13866:13880   */\n      swap1\n      pop\n        /* \"#utility.yul\":13701:13886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13892:14086   */\n    tag_203:\n        /* \"#utility.yul\":13932:13936   */\n      0x00\n        /* \"#utility.yul\":13952:13972   */\n      tag_474\n        /* \"#utility.yul\":13970:13971   */\n      dup3\n        /* \"#utility.yul\":13952:13972   */\n      tag_283\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":13947:13972   */\n      swap2\n      pop\n        /* \"#utility.yul\":13986:14006   */\n      tag_475\n        /* \"#utility.yul\":14004:14005   */\n      dup4\n        /* \"#utility.yul\":13986:14006   */\n      tag_283\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":13981:14006   */\n      swap3\n      pop\n        /* \"#utility.yul\":14030:14031   */\n      dup3\n        /* \"#utility.yul\":14027:14028   */\n      dup3\n        /* \"#utility.yul\":14023:14032   */\n      sub\n        /* \"#utility.yul\":14015:14032   */\n      swap1\n      pop\n        /* \"#utility.yul\":14054:14055   */\n      dup2\n        /* \"#utility.yul\":14048:14052   */\n      dup2\n        /* \"#utility.yul\":14045:14056   */\n      gt\n        /* \"#utility.yul\":14042:14079   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":14059:14077   */\n      tag_477\n      tag_297\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":14042:14079   */\n    tag_476:\n        /* \"#utility.yul\":13892:14086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14092:14272   */\n    tag_307:\n        /* \"#utility.yul\":14140:14217   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14137:14138   */\n      0x00\n        /* \"#utility.yul\":14130:14218   */\n      mstore\n        /* \"#utility.yul\":14237:14241   */\n      0x41\n        /* \"#utility.yul\":14234:14235   */\n      0x04\n        /* \"#utility.yul\":14227:14242   */\n      mstore\n        /* \"#utility.yul\":14261:14265   */\n      0x24\n        /* \"#utility.yul\":14258:14259   */\n      0x00\n        /* \"#utility.yul\":14251:14266   */\n      revert\n        /* \"#utility.yul\":14278:14419   */\n    tag_308:\n        /* \"#utility.yul\":14327:14331   */\n      0x00\n        /* \"#utility.yul\":14350:14353   */\n      dup2\n        /* \"#utility.yul\":14342:14353   */\n      swap1\n      pop\n        /* \"#utility.yul\":14373:14376   */\n      dup2\n        /* \"#utility.yul\":14370:14371   */\n      0x00\n        /* \"#utility.yul\":14363:14377   */\n      mstore\n        /* \"#utility.yul\":14407:14411   */\n      0x20\n        /* \"#utility.yul\":14404:14405   */\n      0x00\n        /* \"#utility.yul\":14394:14412   */\n      keccak256\n        /* \"#utility.yul\":14386:14412   */\n      swap1\n      pop\n        /* \"#utility.yul\":14278:14419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14425:14518   */\n    tag_309:\n        /* \"#utility.yul\":14462:14468   */\n      0x00\n        /* \"#utility.yul\":14509:14511   */\n      0x20\n        /* \"#utility.yul\":14504:14506   */\n      0x1f\n        /* \"#utility.yul\":14497:14502   */\n      dup4\n        /* \"#utility.yul\":14493:14507   */\n      add\n        /* \"#utility.yul\":14489:14512   */\n      div\n        /* \"#utility.yul\":14479:14512   */\n      swap1\n      pop\n        /* \"#utility.yul\":14425:14518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14524:14631   */\n    tag_310:\n        /* \"#utility.yul\":14568:14576   */\n      0x00\n        /* \"#utility.yul\":14618:14623   */\n      dup3\n        /* \"#utility.yul\":14612:14616   */\n      dup3\n        /* \"#utility.yul\":14608:14624   */\n      shl\n        /* \"#utility.yul\":14587:14624   */\n      swap1\n      pop\n        /* \"#utility.yul\":14524:14631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14637:15030   */\n    tag_311:\n        /* \"#utility.yul\":14706:14712   */\n      0x00\n        /* \"#utility.yul\":14756:14757   */\n      0x08\n        /* \"#utility.yul\":14744:14754   */\n      dup4\n        /* \"#utility.yul\":14740:14758   */\n      mul\n        /* \"#utility.yul\":14779:14876   */\n      tag_483\n        /* \"#utility.yul\":14809:14875   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14798:14807   */\n      dup3\n        /* \"#utility.yul\":14779:14876   */\n      tag_310\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":14897:14936   */\n      tag_484\n        /* \"#utility.yul\":14927:14935   */\n      dup7\n        /* \"#utility.yul\":14916:14925   */\n      dup4\n        /* \"#utility.yul\":14897:14936   */\n      tag_310\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14885:14936   */\n      swap6\n      pop\n        /* \"#utility.yul\":14969:14973   */\n      dup1\n        /* \"#utility.yul\":14965:14974   */\n      not\n        /* \"#utility.yul\":14958:14963   */\n      dup5\n        /* \"#utility.yul\":14954:14975   */\n      and\n        /* \"#utility.yul\":14945:14975   */\n      swap4\n      pop\n        /* \"#utility.yul\":15018:15022   */\n      dup1\n        /* \"#utility.yul\":15008:15016   */\n      dup7\n        /* \"#utility.yul\":15004:15023   */\n      and\n        /* \"#utility.yul\":14997:15002   */\n      dup5\n        /* \"#utility.yul\":14994:15024   */\n      or\n        /* \"#utility.yul\":14984:15024   */\n      swap3\n      pop\n        /* \"#utility.yul\":14713:15030   */\n      pop\n      pop\n        /* \"#utility.yul\":14637:15030   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15036:15178   */\n    tag_312:\n        /* \"#utility.yul\":15086:15095   */\n      0x00\n        /* \"#utility.yul\":15119:15172   */\n      tag_486\n        /* \"#utility.yul\":15137:15171   */\n      tag_487\n        /* \"#utility.yul\":15146:15170   */\n      tag_488\n        /* \"#utility.yul\":15164:15169   */\n      dup5\n        /* \"#utility.yul\":15146:15170   */\n      tag_283\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":15137:15171   */\n      tag_303\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":15119:15172   */\n      tag_283\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":15106:15172   */\n      swap1\n      pop\n        /* \"#utility.yul\":15036:15178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15184:15259   */\n    tag_313:\n        /* \"#utility.yul\":15227:15230   */\n      0x00\n        /* \"#utility.yul\":15248:15253   */\n      dup2\n        /* \"#utility.yul\":15241:15253   */\n      swap1\n      pop\n        /* \"#utility.yul\":15184:15259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15265:15534   */\n    tag_314:\n        /* \"#utility.yul\":15375:15414   */\n      tag_491\n        /* \"#utility.yul\":15406:15413   */\n      dup4\n        /* \"#utility.yul\":15375:15414   */\n      tag_312\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":15436:15527   */\n      tag_492\n        /* \"#utility.yul\":15485:15526   */\n      tag_493\n        /* \"#utility.yul\":15509:15525   */\n      dup3\n        /* \"#utility.yul\":15485:15526   */\n      tag_313\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":15477:15483   */\n      dup5\n        /* \"#utility.yul\":15470:15474   */\n      dup5\n        /* \"#utility.yul\":15464:15475   */\n      sload\n        /* \"#utility.yul\":15436:15527   */\n      tag_311\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":15430:15434   */\n      dup3\n        /* \"#utility.yul\":15423:15528   */\n      sstore\n        /* \"#utility.yul\":15341:15534   */\n      pop\n        /* \"#utility.yul\":15265:15534   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15540:15613   */\n    tag_315:\n        /* \"#utility.yul\":15585:15588   */\n      0x00\n        /* \"#utility.yul\":15540:15613   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15619:15808   */\n    tag_316:\n        /* \"#utility.yul\":15696:15728   */\n      tag_496\n      tag_315\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":15737:15802   */\n      tag_497\n        /* \"#utility.yul\":15795:15801   */\n      dup2\n        /* \"#utility.yul\":15787:15793   */\n      dup5\n        /* \"#utility.yul\":15781:15785   */\n      dup5\n        /* \"#utility.yul\":15737:15802   */\n      tag_314\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":15672:15808   */\n      pop\n        /* \"#utility.yul\":15619:15808   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15814:16000   */\n    tag_317:\n        /* \"#utility.yul\":15874:15994   */\n    tag_499:\n        /* \"#utility.yul\":15891:15894   */\n      dup2\n        /* \"#utility.yul\":15884:15889   */\n      dup2\n        /* \"#utility.yul\":15881:15895   */\n      lt\n        /* \"#utility.yul\":15874:15994   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":15945:15984   */\n      tag_502\n        /* \"#utility.yul\":15982:15983   */\n      0x00\n        /* \"#utility.yul\":15975:15980   */\n      dup3\n        /* \"#utility.yul\":15945:15984   */\n      tag_316\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":15918:15919   */\n      0x01\n        /* \"#utility.yul\":15911:15916   */\n      dup2\n        /* \"#utility.yul\":15907:15920   */\n      add\n        /* \"#utility.yul\":15898:15920   */\n      swap1\n      pop\n        /* \"#utility.yul\":15874:15994   */\n      jump(tag_499)\n    tag_501:\n        /* \"#utility.yul\":15814:16000   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16006:16549   */\n    tag_318:\n        /* \"#utility.yul\":16107:16109   */\n      0x1f\n        /* \"#utility.yul\":16102:16105   */\n      dup3\n        /* \"#utility.yul\":16099:16110   */\n      gt\n        /* \"#utility.yul\":16096:16542   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":16141:16179   */\n      tag_505\n        /* \"#utility.yul\":16173:16178   */\n      dup2\n        /* \"#utility.yul\":16141:16179   */\n      tag_308\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":16225:16254   */\n      tag_506\n        /* \"#utility.yul\":16243:16253   */\n      dup5\n        /* \"#utility.yul\":16225:16254   */\n      tag_309\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":16215:16223   */\n      dup2\n        /* \"#utility.yul\":16211:16255   */\n      add\n        /* \"#utility.yul\":16408:16410   */\n      0x20\n        /* \"#utility.yul\":16396:16406   */\n      dup6\n        /* \"#utility.yul\":16393:16411   */\n      lt\n        /* \"#utility.yul\":16390:16439   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":16429:16437   */\n      dup2\n        /* \"#utility.yul\":16414:16437   */\n      swap1\n      pop\n        /* \"#utility.yul\":16390:16439   */\n    tag_507:\n        /* \"#utility.yul\":16452:16532   */\n      tag_508\n        /* \"#utility.yul\":16508:16530   */\n      tag_509\n        /* \"#utility.yul\":16526:16529   */\n      dup6\n        /* \"#utility.yul\":16508:16530   */\n      tag_309\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":16498:16506   */\n      dup4\n        /* \"#utility.yul\":16494:16531   */\n      add\n        /* \"#utility.yul\":16481:16492   */\n      dup3\n        /* \"#utility.yul\":16452:16532   */\n      tag_317\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":16111:16542   */\n      pop\n      pop\n        /* \"#utility.yul\":16096:16542   */\n    tag_504:\n        /* \"#utility.yul\":16006:16549   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16555:16672   */\n    tag_319:\n        /* \"#utility.yul\":16609:16617   */\n      0x00\n        /* \"#utility.yul\":16659:16664   */\n      dup3\n        /* \"#utility.yul\":16653:16657   */\n      dup3\n        /* \"#utility.yul\":16649:16665   */\n      shr\n        /* \"#utility.yul\":16628:16665   */\n      swap1\n      pop\n        /* \"#utility.yul\":16555:16672   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16678:16847   */\n    tag_320:\n        /* \"#utility.yul\":16722:16728   */\n      0x00\n        /* \"#utility.yul\":16755:16806   */\n      tag_512\n        /* \"#utility.yul\":16803:16804   */\n      0x00\n        /* \"#utility.yul\":16799:16805   */\n      not\n        /* \"#utility.yul\":16791:16796   */\n      dup5\n        /* \"#utility.yul\":16788:16789   */\n      0x08\n        /* \"#utility.yul\":16784:16797   */\n      mul\n        /* \"#utility.yul\":16755:16806   */\n      tag_319\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16751:16807   */\n      not\n        /* \"#utility.yul\":16836:16840   */\n      dup1\n        /* \"#utility.yul\":16830:16834   */\n      dup4\n        /* \"#utility.yul\":16826:16841   */\n      and\n        /* \"#utility.yul\":16816:16841   */\n      swap2\n      pop\n        /* \"#utility.yul\":16729:16847   */\n      pop\n        /* \"#utility.yul\":16678:16847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16852:17147   */\n    tag_321:\n        /* \"#utility.yul\":16928:16932   */\n      0x00\n        /* \"#utility.yul\":17074:17103   */\n      tag_514\n        /* \"#utility.yul\":17099:17102   */\n      dup4\n        /* \"#utility.yul\":17093:17097   */\n      dup4\n        /* \"#utility.yul\":17074:17103   */\n      tag_320\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":17066:17103   */\n      swap2\n      pop\n        /* \"#utility.yul\":17136:17139   */\n      dup3\n        /* \"#utility.yul\":17133:17134   */\n      0x02\n        /* \"#utility.yul\":17129:17140   */\n      mul\n        /* \"#utility.yul\":17123:17127   */\n      dup3\n        /* \"#utility.yul\":17120:17141   */\n      or\n        /* \"#utility.yul\":17112:17141   */\n      swap1\n      pop\n        /* \"#utility.yul\":16852:17147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17152:18547   */\n    tag_250:\n        /* \"#utility.yul\":17269:17306   */\n      tag_516\n        /* \"#utility.yul\":17302:17305   */\n      dup3\n        /* \"#utility.yul\":17269:17306   */\n      tag_271\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":17371:17389   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17363:17369   */\n      dup2\n        /* \"#utility.yul\":17360:17390   */\n      gt\n        /* \"#utility.yul\":17357:17413   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":17393:17411   */\n      tag_518\n      tag_307\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":17357:17413   */\n    tag_517:\n        /* \"#utility.yul\":17437:17475   */\n      tag_519\n        /* \"#utility.yul\":17469:17473   */\n      dup3\n        /* \"#utility.yul\":17463:17474   */\n      sload\n        /* \"#utility.yul\":17437:17475   */\n      tag_97\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":17522:17589   */\n      tag_520\n        /* \"#utility.yul\":17582:17588   */\n      dup3\n        /* \"#utility.yul\":17574:17580   */\n      dup3\n        /* \"#utility.yul\":17568:17572   */\n      dup6\n        /* \"#utility.yul\":17522:17589   */\n      tag_318\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":17616:17617   */\n      0x00\n        /* \"#utility.yul\":17640:17644   */\n      0x20\n        /* \"#utility.yul\":17627:17644   */\n      swap1\n      pop\n        /* \"#utility.yul\":17672:17674   */\n      0x1f\n        /* \"#utility.yul\":17664:17670   */\n      dup4\n        /* \"#utility.yul\":17661:17675   */\n      gt\n        /* \"#utility.yul\":17689:17690   */\n      0x01\n        /* \"#utility.yul\":17684:18302   */\n      dup2\n      eq\n      tag_522\n      jumpi\n        /* \"#utility.yul\":18346:18347   */\n      0x00\n        /* \"#utility.yul\":18363:18369   */\n      dup5\n        /* \"#utility.yul\":18360:18437   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":18412:18421   */\n      dup3\n        /* \"#utility.yul\":18407:18410   */\n      dup8\n        /* \"#utility.yul\":18403:18422   */\n      add\n        /* \"#utility.yul\":18397:18423   */\n      mload\n        /* \"#utility.yul\":18388:18423   */\n      swap1\n      pop\n        /* \"#utility.yul\":18360:18437   */\n    tag_523:\n        /* \"#utility.yul\":18463:18530   */\n      tag_524\n        /* \"#utility.yul\":18523:18529   */\n      dup6\n        /* \"#utility.yul\":18516:18521   */\n      dup3\n        /* \"#utility.yul\":18463:18530   */\n      tag_321\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":18457:18461   */\n      dup7\n        /* \"#utility.yul\":18450:18531   */\n      sstore\n        /* \"#utility.yul\":18319:18541   */\n      pop\n        /* \"#utility.yul\":17654:18541   */\n      jump(tag_521)\n        /* \"#utility.yul\":17684:18302   */\n    tag_522:\n        /* \"#utility.yul\":17736:17740   */\n      0x1f\n        /* \"#utility.yul\":17732:17741   */\n      not\n        /* \"#utility.yul\":17724:17730   */\n      dup5\n        /* \"#utility.yul\":17720:17742   */\n      and\n        /* \"#utility.yul\":17770:17807   */\n      tag_525\n        /* \"#utility.yul\":17802:17806   */\n      dup7\n        /* \"#utility.yul\":17770:17807   */\n      tag_308\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":17829:17830   */\n      0x00\n        /* \"#utility.yul\":17843:18051   */\n    tag_526:\n        /* \"#utility.yul\":17857:17864   */\n      dup3\n        /* \"#utility.yul\":17854:17855   */\n      dup2\n        /* \"#utility.yul\":17851:17865   */\n      lt\n        /* \"#utility.yul\":17843:18051   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":17936:17945   */\n      dup5\n        /* \"#utility.yul\":17931:17934   */\n      dup10\n        /* \"#utility.yul\":17927:17946   */\n      add\n        /* \"#utility.yul\":17921:17947   */\n      mload\n        /* \"#utility.yul\":17913:17919   */\n      dup3\n        /* \"#utility.yul\":17906:17948   */\n      sstore\n        /* \"#utility.yul\":17987:17988   */\n      0x01\n        /* \"#utility.yul\":17979:17985   */\n      dup3\n        /* \"#utility.yul\":17975:17989   */\n      add\n        /* \"#utility.yul\":17965:17989   */\n      swap2\n      pop\n        /* \"#utility.yul\":18034:18036   */\n      0x20\n        /* \"#utility.yul\":18023:18032   */\n      dup6\n        /* \"#utility.yul\":18019:18037   */\n      add\n        /* \"#utility.yul\":18006:18037   */\n      swap5\n      pop\n        /* \"#utility.yul\":17880:17884   */\n      0x20\n        /* \"#utility.yul\":17877:17878   */\n      dup2\n        /* \"#utility.yul\":17873:17885   */\n      add\n        /* \"#utility.yul\":17868:17885   */\n      swap1\n      pop\n        /* \"#utility.yul\":17843:18051   */\n      jump(tag_526)\n    tag_528:\n        /* \"#utility.yul\":18079:18085   */\n      dup7\n        /* \"#utility.yul\":18070:18077   */\n      dup4\n        /* \"#utility.yul\":18067:18086   */\n      lt\n        /* \"#utility.yul\":18064:18243   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":18137:18146   */\n      dup5\n        /* \"#utility.yul\":18132:18135   */\n      dup10\n        /* \"#utility.yul\":18128:18147   */\n      add\n        /* \"#utility.yul\":18122:18148   */\n      mload\n        /* \"#utility.yul\":18180:18228   */\n      tag_530\n        /* \"#utility.yul\":18222:18226   */\n      0x1f\n        /* \"#utility.yul\":18214:18220   */\n      dup10\n        /* \"#utility.yul\":18210:18227   */\n      and\n        /* \"#utility.yul\":18199:18208   */\n      dup3\n        /* \"#utility.yul\":18180:18228   */\n      tag_320\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18172:18178   */\n      dup4\n        /* \"#utility.yul\":18165:18229   */\n      sstore\n        /* \"#utility.yul\":18087:18243   */\n      pop\n        /* \"#utility.yul\":18064:18243   */\n    tag_529:\n        /* \"#utility.yul\":18289:18290   */\n      0x01\n        /* \"#utility.yul\":18285:18286   */\n      0x02\n        /* \"#utility.yul\":18277:18283   */\n      dup9\n        /* \"#utility.yul\":18273:18287   */\n      mul\n        /* \"#utility.yul\":18269:18291   */\n      add\n        /* \"#utility.yul\":18263:18267   */\n      dup9\n        /* \"#utility.yul\":18256:18292   */\n      sstore\n        /* \"#utility.yul\":17691:18302   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17654:18541   */\n    tag_521:\n      pop\n        /* \"#utility.yul\":17244:18547   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17152:18547   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18553:18744   */\n    tag_262:\n        /* \"#utility.yul\":18593:18596   */\n      0x00\n        /* \"#utility.yul\":18612:18632   */\n      tag_532\n        /* \"#utility.yul\":18630:18631   */\n      dup3\n        /* \"#utility.yul\":18612:18632   */\n      tag_283\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":18607:18632   */\n      swap2\n      pop\n        /* \"#utility.yul\":18646:18666   */\n      tag_533\n        /* \"#utility.yul\":18664:18665   */\n      dup4\n        /* \"#utility.yul\":18646:18666   */\n      tag_283\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":18641:18666   */\n      swap3\n      pop\n        /* \"#utility.yul\":18689:18690   */\n      dup3\n        /* \"#utility.yul\":18686:18687   */\n      dup3\n        /* \"#utility.yul\":18682:18691   */\n      add\n        /* \"#utility.yul\":18675:18691   */\n      swap1\n      pop\n        /* \"#utility.yul\":18710:18713   */\n      dup1\n        /* \"#utility.yul\":18707:18708   */\n      dup3\n        /* \"#utility.yul\":18704:18714   */\n      gt\n        /* \"#utility.yul\":18701:18737   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":18717:18735   */\n      tag_535\n      tag_297\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":18701:18737   */\n    tag_534:\n        /* \"#utility.yul\":18553:18744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e13c0ee5c791fa29f8d4757dd7f107aaa282faada23e581b4c71a516761981aa64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50611ecd8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c80637a1ac61e116100a05780639a36f9321161006f5780639a36f932146102ba578063a9059cbb146102d8578063dd62ed3e14610308578063ecfca89914610338578063f2fde38b1461035657610114565b80637a1ac61e146102445780637b208769146102605780638da5cb5b1461027e57806395d89b411461029c57610114565b806323b872dd116100e757806323b872dd146101a057806330563bd7146101d0578063313ce567146101ec57806370a082311461020a578063715018a61461023a57610114565b806306fdde0314610118578063095ea7b31461013657806318160ddd1461016657806320c7c59614610184575b5f80fd5b610120610372565b60405161012d91906114b3565b60405180910390f35b610150600480360381019061014b9190611564565b610410565b60405161015d91906115bc565b60405180910390f35b61016e610432565b60405161017b91906115e4565b60405180910390f35b61019e600480360381019061019991906115fd565b610449565b005b6101ba60048036038101906101b59190611628565b6104a0565b6040516101c791906115bc565b60405180910390f35b6101ea60048036038101906101e59190611678565b6104ce565b005b6101f4610586565b60405161020191906116be565b60405180910390f35b610224600480360381019061021f9190611678565b61058e565b60405161023191906115e4565b60405180910390f35b6102426105e1565b005b61025e600480360381019061025991906116d7565b6105f4565b005b610268610867565b6040516102759190611736565b60405180910390f35b61028661088a565b6040516102939190611736565b60405180910390f35b6102a46108bf565b6040516102b191906114b3565b60405180910390f35b6102c261095d565b6040516102cf91906115e4565b60405180910390f35b6102f260048036038101906102ed9190611564565b610963565b6040516102ff91906115bc565b60405180910390f35b610322600480360381019061031d919061174f565b610985565b60405161032f91906115e4565b60405180910390f35b610340610a15565b60405161034d91906115e4565b60405180910390f35b610370600480360381019061036b9190611678565b610a1b565b005b60605f61037d610a9f565b905080600301805461038e906117ba565b80601f01602080910402602001604051908101604052809291908181526020018280546103ba906117ba565b80156104055780601f106103dc57610100808354040283529160200191610405565b820191905f5260205f20905b8154815290600101906020018083116103e857829003601f168201915b505050505091505090565b5f8061041a610ac6565b9050610427818585610acd565b600191505092915050565b5f8061043c610a9f565b9050806002015491505090565b610451610adf565b600254811115610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90611834565b60405180910390fd5b8060018190555050565b5f806104aa610ac6565b90506104b7858285610b66565b6104c2858585610bf8565b60019150509392505050565b6104d6610adf565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b9061189c565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f6012905090565b5f80610598610a9f565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b6105e9610adf565b6105f25f610c61565b565b5f6105fd610d32565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156106455750825b90505f60018367ffffffffffffffff1614801561067857505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610686575080155b156106bd576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561070a576001855f0160086101000a81548160ff0219169083151502179055505b61077e6040518060400160405280600681526020017f4361746e697000000000000000000000000000000000000000000000000000008152506040518060400160405280600681526020017f4341544e49500000000000000000000000000000000000000000000000000000815250610d59565b5f33905061078b81610d6f565b885f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600181905550612710600281905550610802336107e6610586565b600a6107f29190611a16565b8a6107fd9190611a60565b610d83565b50831561085d575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516108549190611af6565b60405180910390a15b5050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610894610e02565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f6108ca610a9f565b90508060040180546108db906117ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610907906117ba565b80156109525780601f1061092957610100808354040283529160200191610952565b820191905f5260205f20905b81548152906001019060200180831161093557829003601f168201915b505050505091505090565b60025481565b5f8061096d610ac6565b905061097a818585610bf8565b600191505092915050565b5f8061098f610a9f565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b60015481565b610a23610adf565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a93575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a8a9190611736565b60405180910390fd5b610a9c81610c61565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b610ada8383836001610e29565b505050565b610ae7610ac6565b73ffffffffffffffffffffffffffffffffffffffff16610b0561088a565b73ffffffffffffffffffffffffffffffffffffffff1614610b6457610b28610ac6565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b5b9190611736565b60405180910390fd5b565b5f610b718484610985565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bf25781811015610be3578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610bda93929190611b0f565b60405180910390fd5b610bf184848484035f610e29565b5b50505050565b5f60025460015483610c0a9190611a60565b610c149190611b71565b90505f8183610c239190611ba1565b9050610c4f855f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611006565b610c5a858583611006565b5050505050565b5f610c6a610e02565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610d616110f6565b610d6b8282611136565b5050565b610d776110f6565b610d8081611172565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610df3575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dea9190611736565b60405180910390fd5b610dfe5f83836111f6565b5050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f610e32610a9f565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610ea4575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e9b9190611736565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f14575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f0b9190611736565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115610fff578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610ff691906115e4565b60405180910390a35b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611076575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161106d9190611736565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110e6575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110dd9190611736565b60405180910390fd5b6110f18383836111f6565b505050565b6110fe611425565b611134576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61113e6110f6565b5f611147610a9f565b90508281600301908161115a9190611d95565b508181600401908161116c9190611d95565b50505050565b61117a6110f6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ea575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111e19190611736565b60405180910390fd5b6111f381610c61565b50565b5f6111ff610a9f565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112535781816002015f8282546112479190611e64565b92505081905550611325565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156112de578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016112d593929190611b0f565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361136e5781816002015f82825403925050819055506113ba565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161141791906115e4565b60405180910390a350505050565b5f61142e610d32565b5f0160089054906101000a900460ff16905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61148582611443565b61148f818561144d565b935061149f81856020860161145d565b6114a88161146b565b840191505092915050565b5f6020820190508181035f8301526114cb818461147b565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611500826114d7565b9050919050565b611510816114f6565b811461151a575f80fd5b50565b5f8135905061152b81611507565b92915050565b5f819050919050565b61154381611531565b811461154d575f80fd5b50565b5f8135905061155e8161153a565b92915050565b5f806040838503121561157a576115796114d3565b5b5f6115878582860161151d565b925050602061159885828601611550565b9150509250929050565b5f8115159050919050565b6115b6816115a2565b82525050565b5f6020820190506115cf5f8301846115ad565b92915050565b6115de81611531565b82525050565b5f6020820190506115f75f8301846115d5565b92915050565b5f60208284031215611612576116116114d3565b5b5f61161f84828501611550565b91505092915050565b5f805f6060848603121561163f5761163e6114d3565b5b5f61164c8682870161151d565b935050602061165d8682870161151d565b925050604061166e86828701611550565b9150509250925092565b5f6020828403121561168d5761168c6114d3565b5b5f61169a8482850161151d565b91505092915050565b5f60ff82169050919050565b6116b8816116a3565b82525050565b5f6020820190506116d15f8301846116af565b92915050565b5f805f606084860312156116ee576116ed6114d3565b5b5f6116fb8682870161151d565b935050602061170c86828701611550565b925050604061171d86828701611550565b9150509250925092565b611730816114f6565b82525050565b5f6020820190506117495f830184611727565b92915050565b5f8060408385031215611765576117646114d3565b5b5f6117728582860161151d565b92505060206117838582860161151d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117d157607f821691505b6020821081036117e4576117e361178d565b5b50919050565b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f61181e600c8361144d565b9150611829826117ea565b602082019050919050565b5f6020820190508181035f83015261184b81611812565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611886600f8361144d565b915061189182611852565b602082019050919050565b5f6020820190508181035f8301526118b38161187a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111561193c57808604811115611918576119176118ba565b5b60018516156119275780820291505b8081029050611935856118e7565b94506118fc565b94509492505050565b5f826119545760019050611a0f565b81611961575f9050611a0f565b81600181146119775760028114611981576119b0565b6001915050611a0f565b60ff841115611993576119926118ba565b5b8360020a9150848211156119aa576119a96118ba565b5b50611a0f565b5060208310610133831016604e8410600b84101617156119e55782820a9050838111156119e0576119df6118ba565b5b611a0f565b6119f284848460016118f3565b92509050818404811115611a0957611a086118ba565b5b81810290505b9392505050565b5f611a2082611531565b9150611a2b836116a3565b9250611a587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611945565b905092915050565b5f611a6a82611531565b9150611a7583611531565b9250828202611a8381611531565b91508282048414831517611a9a57611a996118ba565b5b5092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f611ae0611adb611ad684611aa1565b611abd565b611aaa565b9050919050565b611af081611ac6565b82525050565b5f602082019050611b095f830184611ae7565b92915050565b5f606082019050611b225f830186611727565b611b2f60208301856115d5565b611b3c60408301846115d5565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611b7b82611531565b9150611b8683611531565b925082611b9657611b95611b44565b5b828204905092915050565b5f611bab82611531565b9150611bb683611531565b9250828203905081811115611bce57611bcd6118ba565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611c5d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611c22565b611c678683611c22565b95508019841693508086168417925050509392505050565b5f611c99611c94611c8f84611531565b611abd565b611531565b9050919050565b5f819050919050565b611cb283611c7f565b611cc6611cbe82611ca0565b848454611c2e565b825550505050565b5f90565b611cda611cce565b611ce5818484611ca9565b505050565b5b81811015611d0857611cfd5f82611cd2565b600181019050611ceb565b5050565b601f821115611d4d57611d1e81611c01565b611d2784611c13565b81016020851015611d36578190505b611d4a611d4285611c13565b830182611cea565b50505b505050565b5f82821c905092915050565b5f611d6d5f1984600802611d52565b1980831691505092915050565b5f611d858383611d5e565b9150826002028217905092915050565b611d9e82611443565b67ffffffffffffffff811115611db757611db6611bd4565b5b611dc182546117ba565b611dcc828285611d0c565b5f60209050601f831160018114611dfd575f8415611deb578287015190505b611df58582611d7a565b865550611e5c565b601f198416611e0b86611c01565b5f5b82811015611e3257848901518255600182019150602085019450602081019050611e0d565b86831015611e4f5784890151611e4b601f891682611d5e565b8355505b6001600288020188555050505b505050505050565b5f611e6e82611531565b9150611e7983611531565b9250828201905080821115611e9157611e906118ba565b5b9291505056fea2646970667358221220e13c0ee5c791fa29f8d4757dd7f107aaa282faada23e581b4c71a516761981aa64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ECD DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A1AC61E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9A36F932 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9A36F932 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xECFCA899 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x356 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x7A1AC61E EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x7B208769 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x30563BD7 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x20C7C596 EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1678 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F4 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1678 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH2 0x5E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x268 PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1678 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x37D PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x38E SWAP1 PUSH2 0x17BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BA SWAP1 PUSH2 0x17BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x405 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x405 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x41A PUSH2 0xAC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x427 DUP2 DUP6 DUP6 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x43C PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x451 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4AA PUSH2 0xAC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B7 DUP6 DUP3 DUP6 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x4C2 DUP6 DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0xADF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP1 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x598 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E9 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x5F2 PUSH0 PUSH2 0xC61 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5FD PUSH2 0xD32 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x645 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x678 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x686 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x70A JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x77E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4361746E69700000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4341544E49500000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xD59 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH2 0x78B DUP2 PUSH2 0xD6F JUMP JUMPDEST DUP9 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2710 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x802 CALLER PUSH2 0x7E6 PUSH2 0x586 JUMP JUMPDEST PUSH1 0xA PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST DUP11 PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x85D JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x894 PUSH2 0xE02 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x8CA PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x8DB SWAP1 PUSH2 0x17BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x907 SWAP1 PUSH2 0x17BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x952 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x929 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x952 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x935 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x96D PUSH2 0xAC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x97A DUP2 DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x98F PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA23 PUSH2 0xADF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0xC61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xADA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAE7 PUSH2 0xAC6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB05 PUSH2 0x88A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB64 JUMPI PUSH2 0xB28 PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xB71 DUP5 DUP5 PUSH2 0x985 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xBF2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBE3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE29 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD DUP4 PUSH2 0xC0A SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0xC14 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xC23 SWAP2 SWAP1 PUSH2 0x1BA1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC4F DUP6 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x1006 JUMP JUMPDEST PUSH2 0xC5A DUP6 DUP6 DUP4 PUSH2 0x1006 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC6A PUSH2 0xE02 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD61 PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0xD6B DUP3 DUP3 PUSH2 0x1136 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD77 PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0x1172 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFE PUSH0 DUP4 DUP4 PUSH2 0x11F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xE32 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF14 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0B SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0xFFF JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1076 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F1 DUP4 DUP4 DUP4 PUSH2 0x11F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x10FE PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x113E PUSH2 0x10F6 JUMP JUMPDEST PUSH0 PUSH2 0x1147 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x115A SWAP2 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x116C SWAP2 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x117A PUSH2 0x10F6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E1 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F3 DUP2 PUSH2 0xC61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x11FF PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1253 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1247 SWAP2 SWAP1 PUSH2 0x1E64 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1325 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x12DE JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x136E JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13BA JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1417 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x142E PUSH2 0xD32 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1485 DUP3 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x148F DUP2 DUP6 PUSH2 0x144D JUMP JUMPDEST SWAP4 POP PUSH2 0x149F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST PUSH2 0x14A8 DUP2 PUSH2 0x146B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14CB DUP2 DUP5 PUSH2 0x147B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1500 DUP3 PUSH2 0x14D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1510 DUP2 PUSH2 0x14F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x151A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152B DUP2 PUSH2 0x1507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1543 DUP2 PUSH2 0x1531 JUMP JUMPDEST DUP2 EQ PUSH2 0x154D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x155E DUP2 PUSH2 0x153A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157A JUMPI PUSH2 0x1579 PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1587 DUP6 DUP3 DUP7 ADD PUSH2 0x151D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1598 DUP6 DUP3 DUP7 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B6 DUP2 PUSH2 0x15A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CF PUSH0 DUP4 ADD DUP5 PUSH2 0x15AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DE DUP2 PUSH2 0x1531 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1612 JUMPI PUSH2 0x1611 PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x161F DUP5 DUP3 DUP6 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163F JUMPI PUSH2 0x163E PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x164C DUP7 DUP3 DUP8 ADD PUSH2 0x151D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x165D DUP7 DUP3 DUP8 ADD PUSH2 0x151D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x166E DUP7 DUP3 DUP8 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168D JUMPI PUSH2 0x168C PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x169A DUP5 DUP3 DUP6 ADD PUSH2 0x151D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B8 DUP2 PUSH2 0x16A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x16AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16EE JUMPI PUSH2 0x16ED PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16FB DUP7 DUP3 DUP8 ADD PUSH2 0x151D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x170C DUP7 DUP3 DUP8 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x171D DUP7 DUP3 DUP8 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1730 DUP2 PUSH2 0x14F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1749 PUSH0 DUP4 ADD DUP5 PUSH2 0x1727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1765 JUMPI PUSH2 0x1764 PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1772 DUP6 DUP3 DUP7 ADD PUSH2 0x151D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1783 DUP6 DUP3 DUP7 ADD PUSH2 0x151D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17E4 JUMPI PUSH2 0x17E3 PUSH2 0x178D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181E PUSH1 0xC DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP PUSH2 0x1829 DUP3 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x184B DUP2 PUSH2 0x1812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1886 PUSH1 0xF DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 DUP3 PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B3 DUP2 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x193C JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1918 JUMPI PUSH2 0x1917 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1927 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1935 DUP6 PUSH2 0x18E7 JUMP JUMPDEST SWAP5 POP PUSH2 0x18FC JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1954 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1A0F JUMP JUMPDEST DUP2 PUSH2 0x1961 JUMPI PUSH0 SWAP1 POP PUSH2 0x1A0F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1977 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1981 JUMPI PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1993 JUMPI PUSH2 0x1992 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x19AA JUMPI PUSH2 0x19A9 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST POP PUSH2 0x1A0F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x19E5 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x19E0 JUMPI PUSH2 0x19DF PUSH2 0x18BA JUMP JUMPDEST JUMPDEST PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x19F2 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x18F3 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A20 DUP3 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2B DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A58 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1945 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6A DUP3 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A75 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A83 DUP2 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A9A JUMPI PUSH2 0x1A99 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE0 PUSH2 0x1ADB PUSH2 0x1AD6 DUP5 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1AAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF0 DUP2 PUSH2 0x1AC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B09 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B22 PUSH0 DUP4 ADD DUP7 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x1B2F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x1B3C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B7B DUP3 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B86 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B96 JUMPI PUSH2 0x1B95 PUSH2 0x1B44 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BAB DUP3 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB6 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1BCE JUMPI PUSH2 0x1BCD PUSH2 0x18BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1C5D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1C22 JUMP JUMPDEST PUSH2 0x1C67 DUP7 DUP4 PUSH2 0x1C22 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C99 PUSH2 0x1C94 PUSH2 0x1C8F DUP5 PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1531 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB2 DUP4 PUSH2 0x1C7F JUMP JUMPDEST PUSH2 0x1CC6 PUSH2 0x1CBE DUP3 PUSH2 0x1CA0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1C2E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1CDA PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x1CE5 DUP2 DUP5 DUP5 PUSH2 0x1CA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D08 JUMPI PUSH2 0x1CFD PUSH0 DUP3 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D4D JUMPI PUSH2 0x1D1E DUP2 PUSH2 0x1C01 JUMP JUMPDEST PUSH2 0x1D27 DUP5 PUSH2 0x1C13 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D36 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1D4A PUSH2 0x1D42 DUP6 PUSH2 0x1C13 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1CEA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1D52 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D85 DUP4 DUP4 PUSH2 0x1D5E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D9E DUP3 PUSH2 0x1443 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DB7 JUMPI PUSH2 0x1DB6 PUSH2 0x1BD4 JUMP JUMPDEST JUMPDEST PUSH2 0x1DC1 DUP3 SLOAD PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x1DCC DUP3 DUP3 DUP6 PUSH2 0x1D0C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DFD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1DEB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1DF5 DUP6 DUP3 PUSH2 0x1D7A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1E0B DUP7 PUSH2 0x1C01 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E32 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E0D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1E4F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1E4B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1D5E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6E DUP3 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E79 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E91 JUMPI PUSH2 0x1E90 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 EXTCODECOPY 0xE 0xE5 0xC7 SWAP2 STATICCALL 0x29 0xF8 0xD4 PUSH22 0x7DD7F107AAA282FAADA23E581B4C71A516761981AA64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "289:1776:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__ERC20_init_516": {
									"entryPoint": 3417,
									"id": 516,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_544": {
									"entryPoint": 4406,
									"id": 544,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 3439,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 4466,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_approve_1016": {
									"entryPoint": 3625,
									"id": 1016,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_948": {
									"entryPoint": 2765,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 4342,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 2783,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_500": {
									"entryPoint": 2719,
									"id": 500,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 3378,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 3586,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 5157,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_897": {
									"entryPoint": 3459,
									"id": 897,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1093": {
									"entryPoint": 2758,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1064": {
									"entryPoint": 2918,
									"id": 1064,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 3169,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1502": {
									"entryPoint": 3064,
									"id": 1502,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_772": {
									"entryPoint": 4102,
									"id": 772,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_864": {
									"entryPoint": 4598,
									"id": 864,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_669": {
									"entryPoint": 2437,
									"id": 669,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_693": {
									"entryPoint": 1040,
									"id": 693,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_621": {
									"entryPoint": 1422,
									"id": 621,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@charityFee_1367": {
									"entryPoint": 2581,
									"id": 1367,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@charityWallet_1365": {
									"entryPoint": 2151,
									"id": 1365,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_585": {
									"entryPoint": 1414,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@feeDivisor_1369": {
									"entryPoint": 2397,
									"id": 1369,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_1419": {
									"entryPoint": 1524,
									"id": 1419,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_560": {
									"entryPoint": 882,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 2186,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 1505,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCharityFee_1460": {
									"entryPoint": 1097,
									"id": 1460,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setCharityWallet_1441": {
									"entryPoint": 1230,
									"id": 1441,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_576": {
									"entryPoint": 2239,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_601": {
									"entryPoint": 1074,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_725": {
									"entryPoint": 1184,
									"id": 725,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 2587,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_645": {
									"entryPoint": 2403,
									"id": 645,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 6887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6927,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 6902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6387,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 6678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 6469,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 7436,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 6817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 6826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 7402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 6854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 7295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 7187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 7518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 7202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 7506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 7378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 6226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 7337,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 7374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18747:8",
										"nodeType": "YulBlock",
										"src": "0:18747:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3757:263:8",
													"nodeType": "YulBlock",
													"src": "3757:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:8",
																"nodeType": "YulBlock",
																"src": "3803:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:8"
																			},
																			"nativeSrc": "3805:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:8"
																		},
																		"nativeSrc": "3805:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:8"
																		},
																		"nativeSrc": "3774:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:8"
																},
																"nativeSrc": "3770:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:8"
															},
															"nativeSrc": "3767:119:8",
															"nodeType": "YulIf",
															"src": "3767:119:8"
														},
														{
															"nativeSrc": "3896:117:8",
															"nodeType": "YulBlock",
															"src": "3896:117:8",
															"statements": [
																{
																	"nativeSrc": "3911:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:8"
																				},
																				"nativeSrc": "3971:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3950:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:8"
																		},
																		"nativeSrc": "3950:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3691:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:8",
														"nodeType": "YulTypedName",
														"src": "3727:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:8",
														"nodeType": "YulTypedName",
														"src": "3738:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:8",
														"nodeType": "YulTypedName",
														"src": "3750:6:8",
														"type": ""
													}
												],
												"src": "3691:329:8"
											},
											{
												"body": {
													"nativeSrc": "4126:519:8",
													"nodeType": "YulBlock",
													"src": "4126:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:8",
																"nodeType": "YulBlock",
																"src": "4172:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:8"
																			},
																			"nativeSrc": "4174:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:8"
																		},
																		"nativeSrc": "4174:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:8"
																		},
																		"nativeSrc": "4143:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:8"
																},
																"nativeSrc": "4139:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:8"
															},
															"nativeSrc": "4136:119:8",
															"nodeType": "YulIf",
															"src": "4136:119:8"
														},
														{
															"nativeSrc": "4265:117:8",
															"nodeType": "YulBlock",
															"src": "4265:117:8",
															"statements": [
																{
																	"nativeSrc": "4280:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:8"
																				},
																				"nativeSrc": "4340:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:8"
																		},
																		"nativeSrc": "4319:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:8",
															"nodeType": "YulBlock",
															"src": "4392:118:8",
															"statements": [
																{
																	"nativeSrc": "4407:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:8"
																				},
																				"nativeSrc": "4468:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:8"
																		},
																		"nativeSrc": "4447:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:8",
															"nodeType": "YulBlock",
															"src": "4520:118:8",
															"statements": [
																{
																	"nativeSrc": "4535:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:8"
																				},
																				"nativeSrc": "4596:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:8"
																		},
																		"nativeSrc": "4575:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:8",
														"nodeType": "YulTypedName",
														"src": "4080:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:8",
														"nodeType": "YulTypedName",
														"src": "4091:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:8",
														"nodeType": "YulTypedName",
														"src": "4103:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:8",
														"nodeType": "YulTypedName",
														"src": "4111:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:8",
														"nodeType": "YulTypedName",
														"src": "4119:6:8",
														"type": ""
													}
												],
												"src": "4026:619:8"
											},
											{
												"body": {
													"nativeSrc": "4717:263:8",
													"nodeType": "YulBlock",
													"src": "4717:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4763:83:8",
																"nodeType": "YulBlock",
																"src": "4763:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4765:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4765:77:8"
																			},
																			"nativeSrc": "4765:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4765:79:8"
																		},
																		"nativeSrc": "4765:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4765:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4738:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4738:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4747:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4747:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4734:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4734:3:8"
																		},
																		"nativeSrc": "4734:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4734:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4759:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4759:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4730:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4730:3:8"
																},
																"nativeSrc": "4730:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4730:32:8"
															},
															"nativeSrc": "4727:119:8",
															"nodeType": "YulIf",
															"src": "4727:119:8"
														},
														{
															"nativeSrc": "4856:117:8",
															"nodeType": "YulBlock",
															"src": "4856:117:8",
															"statements": [
																{
																	"nativeSrc": "4871:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4871:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4885:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4885:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4875:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4875:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4900:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4900:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4935:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4935:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4946:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4946:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4931:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4931:3:8"
																				},
																				"nativeSrc": "4931:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4931:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4955:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4955:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4910:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4910:20:8"
																		},
																		"nativeSrc": "4910:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4910:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4900:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4900:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4651:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4687:9:8",
														"nodeType": "YulTypedName",
														"src": "4687:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4698:7:8",
														"nodeType": "YulTypedName",
														"src": "4698:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4710:6:8",
														"nodeType": "YulTypedName",
														"src": "4710:6:8",
														"type": ""
													}
												],
												"src": "4651:329:8"
											},
											{
												"body": {
													"nativeSrc": "5029:43:8",
													"nodeType": "YulBlock",
													"src": "5029:43:8",
													"statements": [
														{
															"nativeSrc": "5039:27:8",
															"nodeType": "YulAssignment",
															"src": "5039:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5054:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5054:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5061:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5061:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5050:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5050:3:8"
																},
																"nativeSrc": "5050:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5050:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5039:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5039:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4986:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5011:5:8",
														"nodeType": "YulTypedName",
														"src": "5011:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5021:7:8",
														"nodeType": "YulTypedName",
														"src": "5021:7:8",
														"type": ""
													}
												],
												"src": "4986:86:8"
											},
											{
												"body": {
													"nativeSrc": "5139:51:8",
													"nodeType": "YulBlock",
													"src": "5139:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5156:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5177:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5177:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5161:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "5161:15:8"
																		},
																		"nativeSrc": "5161:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5149:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5149:6:8"
																},
																"nativeSrc": "5149:35:8",
																"nodeType": "YulFunctionCall",
																"src": "5149:35:8"
															},
															"nativeSrc": "5149:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "5149:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5078:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5127:5:8",
														"nodeType": "YulTypedName",
														"src": "5127:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5134:3:8",
														"nodeType": "YulTypedName",
														"src": "5134:3:8",
														"type": ""
													}
												],
												"src": "5078:112:8"
											},
											{
												"body": {
													"nativeSrc": "5290:120:8",
													"nodeType": "YulBlock",
													"src": "5290:120:8",
													"statements": [
														{
															"nativeSrc": "5300:26:8",
															"nodeType": "YulAssignment",
															"src": "5300:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5312:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5312:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5323:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5323:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5308:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5308:3:8"
																},
																"nativeSrc": "5308:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5308:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5300:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5300:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5376:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5389:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5389:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5400:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5400:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5385:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5385:3:8"
																		},
																		"nativeSrc": "5385:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5385:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5336:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5336:39:8"
																},
																"nativeSrc": "5336:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5336:67:8"
															},
															"nativeSrc": "5336:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5336:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5196:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5262:9:8",
														"nodeType": "YulTypedName",
														"src": "5262:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5274:6:8",
														"nodeType": "YulTypedName",
														"src": "5274:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5285:4:8",
														"nodeType": "YulTypedName",
														"src": "5285:4:8",
														"type": ""
													}
												],
												"src": "5196:214:8"
											},
											{
												"body": {
													"nativeSrc": "5516:519:8",
													"nodeType": "YulBlock",
													"src": "5516:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:8",
																"nodeType": "YulBlock",
																"src": "5562:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:8"
																			},
																			"nativeSrc": "5564:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:8"
																		},
																		"nativeSrc": "5564:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:8"
																		},
																		"nativeSrc": "5533:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:8"
																},
																"nativeSrc": "5529:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:8"
															},
															"nativeSrc": "5526:119:8",
															"nodeType": "YulIf",
															"src": "5526:119:8"
														},
														{
															"nativeSrc": "5655:117:8",
															"nodeType": "YulBlock",
															"src": "5655:117:8",
															"statements": [
																{
																	"nativeSrc": "5670:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:8"
																				},
																				"nativeSrc": "5730:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:8"
																		},
																		"nativeSrc": "5709:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:8",
															"nodeType": "YulBlock",
															"src": "5782:118:8",
															"statements": [
																{
																	"nativeSrc": "5797:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:8"
																				},
																				"nativeSrc": "5858:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5837:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:8"
																		},
																		"nativeSrc": "5837:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5910:118:8",
															"nodeType": "YulBlock",
															"src": "5910:118:8",
															"statements": [
																{
																	"nativeSrc": "5925:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5925:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5939:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5939:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5929:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5929:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5955:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5955:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5990:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5990:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6001:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6001:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5986:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5986:3:8"
																				},
																				"nativeSrc": "5986:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5986:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6010:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6010:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5965:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5965:20:8"
																		},
																		"nativeSrc": "5965:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5965:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5955:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5955:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "5416:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5470:9:8",
														"nodeType": "YulTypedName",
														"src": "5470:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5481:7:8",
														"nodeType": "YulTypedName",
														"src": "5481:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5493:6:8",
														"nodeType": "YulTypedName",
														"src": "5493:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5501:6:8",
														"nodeType": "YulTypedName",
														"src": "5501:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5509:6:8",
														"nodeType": "YulTypedName",
														"src": "5509:6:8",
														"type": ""
													}
												],
												"src": "5416:619:8"
											},
											{
												"body": {
													"nativeSrc": "6106:53:8",
													"nodeType": "YulBlock",
													"src": "6106:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6123:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6123:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6146:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6146:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6128:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6128:17:8"
																		},
																		"nativeSrc": "6128:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6128:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6116:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6116:6:8"
																},
																"nativeSrc": "6116:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6116:37:8"
															},
															"nativeSrc": "6116:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6116:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6041:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6094:5:8",
														"nodeType": "YulTypedName",
														"src": "6094:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6101:3:8",
														"nodeType": "YulTypedName",
														"src": "6101:3:8",
														"type": ""
													}
												],
												"src": "6041:118:8"
											},
											{
												"body": {
													"nativeSrc": "6263:124:8",
													"nodeType": "YulBlock",
													"src": "6263:124:8",
													"statements": [
														{
															"nativeSrc": "6273:26:8",
															"nodeType": "YulAssignment",
															"src": "6273:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6285:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6285:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6296:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6281:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6281:3:8"
																},
																"nativeSrc": "6281:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6281:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6273:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6273:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6353:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6353:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6366:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6366:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6377:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6377:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6362:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6362:3:8"
																		},
																		"nativeSrc": "6362:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6362:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6309:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6309:43:8"
																},
																"nativeSrc": "6309:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6309:71:8"
															},
															"nativeSrc": "6309:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6309:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6165:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6235:9:8",
														"nodeType": "YulTypedName",
														"src": "6235:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6247:6:8",
														"nodeType": "YulTypedName",
														"src": "6247:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6258:4:8",
														"nodeType": "YulTypedName",
														"src": "6258:4:8",
														"type": ""
													}
												],
												"src": "6165:222:8"
											},
											{
												"body": {
													"nativeSrc": "6476:391:8",
													"nodeType": "YulBlock",
													"src": "6476:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6522:83:8",
																"nodeType": "YulBlock",
																"src": "6522:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6524:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6524:77:8"
																			},
																			"nativeSrc": "6524:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6524:79:8"
																		},
																		"nativeSrc": "6524:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6524:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6497:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6497:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6506:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6506:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6493:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6493:3:8"
																		},
																		"nativeSrc": "6493:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6493:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6518:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6518:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6489:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6489:3:8"
																},
																"nativeSrc": "6489:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6489:32:8"
															},
															"nativeSrc": "6486:119:8",
															"nodeType": "YulIf",
															"src": "6486:119:8"
														},
														{
															"nativeSrc": "6615:117:8",
															"nodeType": "YulBlock",
															"src": "6615:117:8",
															"statements": [
																{
																	"nativeSrc": "6630:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6630:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6644:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6644:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6634:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6634:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6659:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6659:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6694:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6694:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6705:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6705:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6690:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6690:3:8"
																				},
																				"nativeSrc": "6690:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6690:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6714:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6714:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6669:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6669:20:8"
																		},
																		"nativeSrc": "6669:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6669:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6659:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6659:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6742:118:8",
															"nodeType": "YulBlock",
															"src": "6742:118:8",
															"statements": [
																{
																	"nativeSrc": "6757:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6757:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6771:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6771:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6761:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6761:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6787:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6787:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6822:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6822:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6833:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6833:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6818:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6818:3:8"
																				},
																				"nativeSrc": "6818:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6818:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6842:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6842:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6797:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6797:20:8"
																		},
																		"nativeSrc": "6797:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6797:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6787:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6787:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6393:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6438:9:8",
														"nodeType": "YulTypedName",
														"src": "6438:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6449:7:8",
														"nodeType": "YulTypedName",
														"src": "6449:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6461:6:8",
														"nodeType": "YulTypedName",
														"src": "6461:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6469:6:8",
														"nodeType": "YulTypedName",
														"src": "6469:6:8",
														"type": ""
													}
												],
												"src": "6393:474:8"
											},
											{
												"body": {
													"nativeSrc": "6901:152:8",
													"nodeType": "YulBlock",
													"src": "6901:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6918:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6918:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6921:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6921:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6911:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6911:6:8"
																},
																"nativeSrc": "6911:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6911:88:8"
															},
															"nativeSrc": "6911:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6911:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7015:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7015:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7018:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7018:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7008:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7008:6:8"
																},
																"nativeSrc": "7008:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7008:15:8"
															},
															"nativeSrc": "7008:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7008:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7039:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7039:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7042:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7032:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:8"
																},
																"nativeSrc": "7032:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7032:15:8"
															},
															"nativeSrc": "7032:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7032:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6873:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6873:180:8"
											},
											{
												"body": {
													"nativeSrc": "7110:269:8",
													"nodeType": "YulBlock",
													"src": "7110:269:8",
													"statements": [
														{
															"nativeSrc": "7120:22:8",
															"nodeType": "YulAssignment",
															"src": "7120:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7134:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7134:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7140:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7140:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7130:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7130:3:8"
																},
																"nativeSrc": "7130:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7130:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7120:6:8"
																}
															]
														},
														{
															"nativeSrc": "7151:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7151:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7181:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7181:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7187:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7187:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7177:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7177:3:8"
																},
																"nativeSrc": "7177:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7177:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7155:18:8",
																	"nodeType": "YulTypedName",
																	"src": "7155:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7228:51:8",
																"nodeType": "YulBlock",
																"src": "7228:51:8",
																"statements": [
																	{
																		"nativeSrc": "7242:27:8",
																		"nodeType": "YulAssignment",
																		"src": "7242:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7256:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "7256:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7264:4:8",
																					"nodeType": "YulLiteral",
																					"src": "7264:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7252:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7252:3:8"
																			},
																			"nativeSrc": "7252:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7252:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7242:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7242:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7208:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "7208:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7201:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7201:6:8"
																},
																"nativeSrc": "7201:26:8",
																"nodeType": "YulFunctionCall",
																"src": "7201:26:8"
															},
															"nativeSrc": "7198:81:8",
															"nodeType": "YulIf",
															"src": "7198:81:8"
														},
														{
															"body": {
																"nativeSrc": "7331:42:8",
																"nodeType": "YulBlock",
																"src": "7331:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7345:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7345:16:8"
																			},
																			"nativeSrc": "7345:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7345:18:8"
																		},
																		"nativeSrc": "7345:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7345:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7295:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "7295:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7318:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7318:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7326:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7326:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7315:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7315:2:8"
																		},
																		"nativeSrc": "7315:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7315:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7292:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7292:2:8"
																},
																"nativeSrc": "7292:38:8",
																"nodeType": "YulFunctionCall",
																"src": "7292:38:8"
															},
															"nativeSrc": "7289:84:8",
															"nodeType": "YulIf",
															"src": "7289:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7059:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7094:4:8",
														"nodeType": "YulTypedName",
														"src": "7094:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7103:6:8",
														"nodeType": "YulTypedName",
														"src": "7103:6:8",
														"type": ""
													}
												],
												"src": "7059:320:8"
											},
											{
												"body": {
													"nativeSrc": "7491:56:8",
													"nodeType": "YulBlock",
													"src": "7491:56:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7513:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7513:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7521:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7521:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7509:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7509:3:8"
																		},
																		"nativeSrc": "7509:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7509:14:8"
																	},
																	{
																		"hexValue": "46656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "7525:14:8",
																		"nodeType": "YulLiteral",
																		"src": "7525:14:8",
																		"type": "",
																		"value": "Fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7502:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7502:6:8"
																},
																"nativeSrc": "7502:38:8",
																"nodeType": "YulFunctionCall",
																"src": "7502:38:8"
															},
															"nativeSrc": "7502:38:8",
															"nodeType": "YulExpressionStatement",
															"src": "7502:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
												"nativeSrc": "7385:162:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7483:6:8",
														"nodeType": "YulTypedName",
														"src": "7483:6:8",
														"type": ""
													}
												],
												"src": "7385:162:8"
											},
											{
												"body": {
													"nativeSrc": "7699:220:8",
													"nodeType": "YulBlock",
													"src": "7699:220:8",
													"statements": [
														{
															"nativeSrc": "7709:74:8",
															"nodeType": "YulAssignment",
															"src": "7709:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7775:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7775:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7780:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7780:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7716:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7716:58:8"
																},
																"nativeSrc": "7716:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7716:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7709:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7709:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7881:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7881:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																	"nativeSrc": "7792:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7792:88:8"
																},
																"nativeSrc": "7792:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7792:93:8"
															},
															"nativeSrc": "7792:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7792:93:8"
														},
														{
															"nativeSrc": "7894:19:8",
															"nodeType": "YulAssignment",
															"src": "7894:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7905:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7905:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7910:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7910:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7901:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7901:3:8"
																},
																"nativeSrc": "7901:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7901:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7894:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7894:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7553:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7687:3:8",
														"nodeType": "YulTypedName",
														"src": "7687:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7695:3:8",
														"nodeType": "YulTypedName",
														"src": "7695:3:8",
														"type": ""
													}
												],
												"src": "7553:366:8"
											},
											{
												"body": {
													"nativeSrc": "8096:248:8",
													"nodeType": "YulBlock",
													"src": "8096:248:8",
													"statements": [
														{
															"nativeSrc": "8106:26:8",
															"nodeType": "YulAssignment",
															"src": "8106:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8118:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8118:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8129:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8129:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8114:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8114:3:8"
																},
																"nativeSrc": "8114:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8114:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8106:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8106:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8153:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8153:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8164:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8164:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8149:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8149:3:8"
																		},
																		"nativeSrc": "8149:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8149:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8172:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8172:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8178:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8178:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8168:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8168:3:8"
																		},
																		"nativeSrc": "8168:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8168:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8142:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8142:6:8"
																},
																"nativeSrc": "8142:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8142:47:8"
															},
															"nativeSrc": "8142:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8142:47:8"
														},
														{
															"nativeSrc": "8198:139:8",
															"nodeType": "YulAssignment",
															"src": "8198:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8332:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8332:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8206:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8206:124:8"
																},
																"nativeSrc": "8206:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8206:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8198:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8198:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7925:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8076:9:8",
														"nodeType": "YulTypedName",
														"src": "8076:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8091:4:8",
														"nodeType": "YulTypedName",
														"src": "8091:4:8",
														"type": ""
													}
												],
												"src": "7925:419:8"
											},
											{
												"body": {
													"nativeSrc": "8456:59:8",
													"nodeType": "YulBlock",
													"src": "8456:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8478:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8478:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8486:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8486:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8474:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8474:3:8"
																		},
																		"nativeSrc": "8474:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8474:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "8490:17:8",
																		"nodeType": "YulLiteral",
																		"src": "8490:17:8",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8467:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8467:6:8"
																},
																"nativeSrc": "8467:41:8",
																"nodeType": "YulFunctionCall",
																"src": "8467:41:8"
															},
															"nativeSrc": "8467:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "8467:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "8350:165:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8448:6:8",
														"nodeType": "YulTypedName",
														"src": "8448:6:8",
														"type": ""
													}
												],
												"src": "8350:165:8"
											},
											{
												"body": {
													"nativeSrc": "8667:220:8",
													"nodeType": "YulBlock",
													"src": "8667:220:8",
													"statements": [
														{
															"nativeSrc": "8677:74:8",
															"nodeType": "YulAssignment",
															"src": "8677:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8743:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8743:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8748:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8748:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8684:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8684:58:8"
																},
																"nativeSrc": "8684:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8684:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8677:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8677:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8849:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8849:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "8760:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8760:88:8"
																},
																"nativeSrc": "8760:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8760:93:8"
															},
															"nativeSrc": "8760:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8760:93:8"
														},
														{
															"nativeSrc": "8862:19:8",
															"nodeType": "YulAssignment",
															"src": "8862:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8873:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8873:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8878:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8878:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8869:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8869:3:8"
																},
																"nativeSrc": "8869:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8869:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8862:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8862:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8521:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8655:3:8",
														"nodeType": "YulTypedName",
														"src": "8655:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8663:3:8",
														"nodeType": "YulTypedName",
														"src": "8663:3:8",
														"type": ""
													}
												],
												"src": "8521:366:8"
											},
											{
												"body": {
													"nativeSrc": "9064:248:8",
													"nodeType": "YulBlock",
													"src": "9064:248:8",
													"statements": [
														{
															"nativeSrc": "9074:26:8",
															"nodeType": "YulAssignment",
															"src": "9074:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9086:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9086:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9097:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9097:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9082:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9082:3:8"
																},
																"nativeSrc": "9082:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9082:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9074:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9074:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9121:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9121:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9132:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9132:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9117:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9117:3:8"
																		},
																		"nativeSrc": "9117:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9117:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9140:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9140:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9146:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9146:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9136:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9136:3:8"
																		},
																		"nativeSrc": "9136:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9136:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9110:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9110:6:8"
																},
																"nativeSrc": "9110:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9110:47:8"
															},
															"nativeSrc": "9110:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9110:47:8"
														},
														{
															"nativeSrc": "9166:139:8",
															"nodeType": "YulAssignment",
															"src": "9166:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9300:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9300:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9174:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9174:124:8"
																},
																"nativeSrc": "9174:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9174:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9166:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9166:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8893:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9044:9:8",
														"nodeType": "YulTypedName",
														"src": "9044:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9059:4:8",
														"nodeType": "YulTypedName",
														"src": "9059:4:8",
														"type": ""
													}
												],
												"src": "8893:419:8"
											},
											{
												"body": {
													"nativeSrc": "9346:152:8",
													"nodeType": "YulBlock",
													"src": "9346:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9363:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9363:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9366:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9366:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9356:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9356:6:8"
																},
																"nativeSrc": "9356:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9356:88:8"
															},
															"nativeSrc": "9356:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9356:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9460:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9460:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9463:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9463:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9453:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9453:6:8"
																},
																"nativeSrc": "9453:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9453:15:8"
															},
															"nativeSrc": "9453:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9453:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9484:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9484:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9487:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9487:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9477:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9477:6:8"
																},
																"nativeSrc": "9477:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9477:15:8"
															},
															"nativeSrc": "9477:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9477:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9318:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9318:180:8"
											},
											{
												"body": {
													"nativeSrc": "9555:51:8",
													"nodeType": "YulBlock",
													"src": "9555:51:8",
													"statements": [
														{
															"nativeSrc": "9565:34:8",
															"nodeType": "YulAssignment",
															"src": "9565:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9590:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9590:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9593:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9593:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9586:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9586:3:8"
																},
																"nativeSrc": "9586:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9586:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9565:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "9565:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9504:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9536:5:8",
														"nodeType": "YulTypedName",
														"src": "9536:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9546:8:8",
														"nodeType": "YulTypedName",
														"src": "9546:8:8",
														"type": ""
													}
												],
												"src": "9504:102:8"
											},
											{
												"body": {
													"nativeSrc": "9685:775:8",
													"nodeType": "YulBlock",
													"src": "9685:775:8",
													"statements": [
														{
															"nativeSrc": "9695:15:8",
															"nodeType": "YulAssignment",
															"src": "9695:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "9704:6:8",
																"nodeType": "YulIdentifier",
																"src": "9704:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9695:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9695:5:8"
																}
															]
														},
														{
															"nativeSrc": "9719:14:8",
															"nodeType": "YulAssignment",
															"src": "9719:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "9728:5:8",
																"nodeType": "YulIdentifier",
																"src": "9728:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9719:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9719:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9777:677:8",
																"nodeType": "YulBlock",
																"src": "9777:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9865:22:8",
																			"nodeType": "YulBlock",
																			"src": "9865:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9867:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "9867:16:8"
																						},
																						"nativeSrc": "9867:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9867:18:8"
																					},
																					"nativeSrc": "9867:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "9867:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9843:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9843:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9853:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9853:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9858:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "9858:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9849:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9849:3:8"
																					},
																					"nativeSrc": "9849:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9849:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9840:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "9840:2:8"
																			},
																			"nativeSrc": "9840:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9840:24:8"
																		},
																		"nativeSrc": "9837:50:8",
																		"nodeType": "YulIf",
																		"src": "9837:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "9932:419:8",
																			"nodeType": "YulBlock",
																			"src": "9932:419:8",
																			"statements": [
																				{
																					"nativeSrc": "10312:25:8",
																					"nodeType": "YulAssignment",
																					"src": "10312:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10325:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "10325:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10332:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "10332:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10321:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "10321:3:8"
																						},
																						"nativeSrc": "10321:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10321:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10312:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "10312:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9907:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "9907:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9917:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9917:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9903:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9903:3:8"
																			},
																			"nativeSrc": "9903:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9903:16:8"
																		},
																		"nativeSrc": "9900:451:8",
																		"nodeType": "YulIf",
																		"src": "9900:451:8"
																	},
																	{
																		"nativeSrc": "10364:23:8",
																		"nodeType": "YulAssignment",
																		"src": "10364:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10376:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "10376:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10382:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "10382:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10372:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "10372:3:8"
																			},
																			"nativeSrc": "10372:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10372:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10364:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10364:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10400:44:8",
																		"nodeType": "YulAssignment",
																		"src": "10400:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10435:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "10435:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10412:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "10412:22:8"
																			},
																			"nativeSrc": "10412:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10412:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10400:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "10400:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9753:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9753:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9763:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9763:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9750:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9750:2:8"
																},
																"nativeSrc": "9750:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9750:15:8"
															},
															"nativeSrc": "9742:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9766:2:8",
																"nodeType": "YulBlock",
																"src": "9766:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9746:3:8",
																"nodeType": "YulBlock",
																"src": "9746:3:8",
																"statements": []
															},
															"src": "9742:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9612:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9640:6:8",
														"nodeType": "YulTypedName",
														"src": "9640:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9648:5:8",
														"nodeType": "YulTypedName",
														"src": "9648:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9655:8:8",
														"nodeType": "YulTypedName",
														"src": "9655:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9665:3:8",
														"nodeType": "YulTypedName",
														"src": "9665:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9673:5:8",
														"nodeType": "YulTypedName",
														"src": "9673:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9680:4:8",
														"nodeType": "YulTypedName",
														"src": "9680:4:8",
														"type": ""
													}
												],
												"src": "9612:848:8"
											},
											{
												"body": {
													"nativeSrc": "10526:1013:8",
													"nodeType": "YulBlock",
													"src": "10526:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10721:20:8",
																"nodeType": "YulBlock",
																"src": "10721:20:8",
																"statements": [
																	{
																		"nativeSrc": "10723:10:8",
																		"nodeType": "YulAssignment",
																		"src": "10723:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10732:1:8",
																			"nodeType": "YulLiteral",
																			"src": "10732:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10723:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10723:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10734:5:8",
																		"nodeType": "YulLeave",
																		"src": "10734:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10711:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10711:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10704:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10704:6:8"
																},
																"nativeSrc": "10704:16:8",
																"nodeType": "YulFunctionCall",
																"src": "10704:16:8"
															},
															"nativeSrc": "10701:40:8",
															"nodeType": "YulIf",
															"src": "10701:40:8"
														},
														{
															"body": {
																"nativeSrc": "10766:20:8",
																"nodeType": "YulBlock",
																"src": "10766:20:8",
																"statements": [
																	{
																		"nativeSrc": "10768:10:8",
																		"nodeType": "YulAssignment",
																		"src": "10768:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10777:1:8",
																			"nodeType": "YulLiteral",
																			"src": "10777:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10768:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10768:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10779:5:8",
																		"nodeType": "YulLeave",
																		"src": "10779:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10760:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10760:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10753:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10753:6:8"
																},
																"nativeSrc": "10753:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10753:12:8"
															},
															"nativeSrc": "10750:36:8",
															"nodeType": "YulIf",
															"src": "10750:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10896:20:8",
																		"nodeType": "YulBlock",
																		"src": "10896:20:8",
																		"statements": [
																			{
																				"nativeSrc": "10898:10:8",
																				"nodeType": "YulAssignment",
																				"src": "10898:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10907:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10907:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10898:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "10898:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10909:5:8",
																				"nodeType": "YulLeave",
																				"src": "10909:5:8"
																			}
																		]
																	},
																	"nativeSrc": "10889:27:8",
																	"nodeType": "YulCase",
																	"src": "10889:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10894:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10894:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10940:176:8",
																		"nodeType": "YulBlock",
																		"src": "10940:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10975:22:8",
																					"nodeType": "YulBlock",
																					"src": "10975:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10977:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "10977:16:8"
																								},
																								"nativeSrc": "10977:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10977:18:8"
																							},
																							"nativeSrc": "10977:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "10977:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10960:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "10960:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10970:3:8",
																							"nodeType": "YulLiteral",
																							"src": "10970:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10957:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "10957:2:8"
																					},
																					"nativeSrc": "10957:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10957:17:8"
																				},
																				"nativeSrc": "10954:43:8",
																				"nodeType": "YulIf",
																				"src": "10954:43:8"
																			},
																			{
																				"nativeSrc": "11010:25:8",
																				"nodeType": "YulAssignment",
																				"src": "11010:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11023:1:8",
																							"nodeType": "YulLiteral",
																							"src": "11023:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "11026:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "11026:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "11019:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "11019:3:8"
																					},
																					"nativeSrc": "11019:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "11019:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11010:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "11010:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11066:22:8",
																					"nodeType": "YulBlock",
																					"src": "11066:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11068:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "11068:16:8"
																								},
																								"nativeSrc": "11068:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "11068:18:8"
																							},
																							"nativeSrc": "11068:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "11068:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "11054:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "11054:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "11061:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11061:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11051:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "11051:2:8"
																					},
																					"nativeSrc": "11051:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "11051:14:8"
																				},
																				"nativeSrc": "11048:40:8",
																				"nodeType": "YulIf",
																				"src": "11048:40:8"
																			},
																			{
																				"nativeSrc": "11101:5:8",
																				"nodeType": "YulLeave",
																				"src": "11101:5:8"
																			}
																		]
																	},
																	"nativeSrc": "10925:191:8",
																	"nodeType": "YulCase",
																	"src": "10925:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10930:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10930:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10846:4:8",
																"nodeType": "YulIdentifier",
																"src": "10846:4:8"
															},
															"nativeSrc": "10839:277:8",
															"nodeType": "YulSwitch",
															"src": "10839:277:8"
														},
														{
															"body": {
																"nativeSrc": "11248:123:8",
																"nodeType": "YulBlock",
																"src": "11248:123:8",
																"statements": [
																	{
																		"nativeSrc": "11262:28:8",
																		"nodeType": "YulAssignment",
																		"src": "11262:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11275:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "11275:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11281:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "11281:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11271:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "11271:3:8"
																			},
																			"nativeSrc": "11271:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11271:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11262:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "11262:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11321:22:8",
																			"nodeType": "YulBlock",
																			"src": "11321:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11323:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "11323:16:8"
																						},
																						"nativeSrc": "11323:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11323:18:8"
																					},
																					"nativeSrc": "11323:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "11323:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11309:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "11309:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11316:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11316:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11306:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "11306:2:8"
																			},
																			"nativeSrc": "11306:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11306:14:8"
																		},
																		"nativeSrc": "11303:40:8",
																		"nodeType": "YulIf",
																		"src": "11303:40:8"
																	},
																	{
																		"nativeSrc": "11356:5:8",
																		"nodeType": "YulLeave",
																		"src": "11356:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11151:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "11151:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11157:2:8",
																						"nodeType": "YulLiteral",
																						"src": "11157:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11148:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "11148:2:8"
																				},
																				"nativeSrc": "11148:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11148:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11165:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "11165:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11175:2:8",
																						"nodeType": "YulLiteral",
																						"src": "11175:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11162:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "11162:2:8"
																				},
																				"nativeSrc": "11162:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11162:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11144:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11144:3:8"
																		},
																		"nativeSrc": "11144:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11144:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11200:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "11200:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11206:3:8",
																						"nodeType": "YulLiteral",
																						"src": "11206:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11197:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "11197:2:8"
																				},
																				"nativeSrc": "11197:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11197:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11215:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "11215:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11225:2:8",
																						"nodeType": "YulLiteral",
																						"src": "11225:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11212:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "11212:2:8"
																				},
																				"nativeSrc": "11212:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11212:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11193:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11193:3:8"
																		},
																		"nativeSrc": "11193:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11193:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11128:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11128:2:8"
																},
																"nativeSrc": "11128:111:8",
																"nodeType": "YulFunctionCall",
																"src": "11128:111:8"
															},
															"nativeSrc": "11125:246:8",
															"nodeType": "YulIf",
															"src": "11125:246:8"
														},
														{
															"nativeSrc": "11381:57:8",
															"nodeType": "YulAssignment",
															"src": "11381:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11415:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11415:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11418:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11418:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11424:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "11424:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11434:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11434:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11396:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "11396:18:8"
																},
																"nativeSrc": "11396:42:8",
																"nodeType": "YulFunctionCall",
																"src": "11396:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11381:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11381:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "11388:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11388:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11477:22:8",
																"nodeType": "YulBlock",
																"src": "11477:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11479:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11479:16:8"
																			},
																			"nativeSrc": "11479:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11479:18:8"
																		},
																		"nativeSrc": "11479:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11479:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11454:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11454:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11465:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "11465:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11470:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11470:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11461:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11461:3:8"
																		},
																		"nativeSrc": "11461:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11461:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11451:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11451:2:8"
																},
																"nativeSrc": "11451:25:8",
																"nodeType": "YulFunctionCall",
																"src": "11451:25:8"
															},
															"nativeSrc": "11448:51:8",
															"nodeType": "YulIf",
															"src": "11448:51:8"
														},
														{
															"nativeSrc": "11508:25:8",
															"nodeType": "YulAssignment",
															"src": "11508:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11521:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11521:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11528:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11528:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11517:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11517:3:8"
																},
																"nativeSrc": "11517:16:8",
																"nodeType": "YulFunctionCall",
																"src": "11517:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11508:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11508:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10466:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10496:4:8",
														"nodeType": "YulTypedName",
														"src": "10496:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10502:8:8",
														"nodeType": "YulTypedName",
														"src": "10502:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10512:3:8",
														"nodeType": "YulTypedName",
														"src": "10512:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10520:5:8",
														"nodeType": "YulTypedName",
														"src": "10520:5:8",
														"type": ""
													}
												],
												"src": "10466:1073:8"
											},
											{
												"body": {
													"nativeSrc": "11609:217:8",
													"nodeType": "YulBlock",
													"src": "11609:217:8",
													"statements": [
														{
															"nativeSrc": "11619:31:8",
															"nodeType": "YulAssignment",
															"src": "11619:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11645:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11645:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11627:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11627:17:8"
																},
																"nativeSrc": "11627:23:8",
																"nodeType": "YulFunctionCall",
																"src": "11627:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11619:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11619:4:8"
																}
															]
														},
														{
															"nativeSrc": "11659:37:8",
															"nodeType": "YulAssignment",
															"src": "11659:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11687:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "11687:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "11671:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "11671:15:8"
																},
																"nativeSrc": "11671:25:8",
																"nodeType": "YulFunctionCall",
																"src": "11671:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "11659:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "11659:8:8"
																}
															]
														},
														{
															"nativeSrc": "11706:113:8",
															"nodeType": "YulAssignment",
															"src": "11706:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11736:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11736:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11742:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "11742:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11752:66:8",
																		"nodeType": "YulLiteral",
																		"src": "11752:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11715:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "11715:20:8"
																},
																"nativeSrc": "11715:104:8",
																"nodeType": "YulFunctionCall",
																"src": "11715:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11706:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11706:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "11545:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11584:4:8",
														"nodeType": "YulTypedName",
														"src": "11584:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11590:8:8",
														"nodeType": "YulTypedName",
														"src": "11590:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11603:5:8",
														"nodeType": "YulTypedName",
														"src": "11603:5:8",
														"type": ""
													}
												],
												"src": "11545:281:8"
											},
											{
												"body": {
													"nativeSrc": "11880:362:8",
													"nodeType": "YulBlock",
													"src": "11880:362:8",
													"statements": [
														{
															"nativeSrc": "11890:25:8",
															"nodeType": "YulAssignment",
															"src": "11890:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11913:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11913:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11895:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11895:17:8"
																},
																"nativeSrc": "11895:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11895:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11890:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11890:1:8"
																}
															]
														},
														{
															"nativeSrc": "11924:25:8",
															"nodeType": "YulAssignment",
															"src": "11924:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11947:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11947:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11929:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11929:17:8"
																},
																"nativeSrc": "11929:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11929:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11924:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11924:1:8"
																}
															]
														},
														{
															"nativeSrc": "11958:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11958:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11981:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11981:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11984:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11984:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11977:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11977:3:8"
																},
																"nativeSrc": "11977:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11977:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11962:11:8",
																	"nodeType": "YulTypedName",
																	"src": "11962:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11995:41:8",
															"nodeType": "YulAssignment",
															"src": "11995:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12024:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "12024:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12006:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12006:17:8"
																},
																"nativeSrc": "12006:30:8",
																"nodeType": "YulFunctionCall",
																"src": "12006:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11995:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "11995:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12213:22:8",
																"nodeType": "YulBlock",
																"src": "12213:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12215:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12215:16:8"
																			},
																			"nativeSrc": "12215:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12215:18:8"
																		},
																		"nativeSrc": "12215:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12215:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12146:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "12146:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12139:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "12139:6:8"
																				},
																				"nativeSrc": "12139:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12139:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12169:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "12169:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12176:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "12176:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12185:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "12185:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12172:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "12172:3:8"
																						},
																						"nativeSrc": "12172:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "12172:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12166:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "12166:2:8"
																				},
																				"nativeSrc": "12166:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12166:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12119:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "12119:2:8"
																		},
																		"nativeSrc": "12119:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12119:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12099:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12099:6:8"
																},
																"nativeSrc": "12099:113:8",
																"nodeType": "YulFunctionCall",
																"src": "12099:113:8"
															},
															"nativeSrc": "12096:139:8",
															"nodeType": "YulIf",
															"src": "12096:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11832:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11863:1:8",
														"nodeType": "YulTypedName",
														"src": "11863:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11866:1:8",
														"nodeType": "YulTypedName",
														"src": "11866:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11872:7:8",
														"nodeType": "YulTypedName",
														"src": "11872:7:8",
														"type": ""
													}
												],
												"src": "11832:410:8"
											},
											{
												"body": {
													"nativeSrc": "12301:32:8",
													"nodeType": "YulBlock",
													"src": "12301:32:8",
													"statements": [
														{
															"nativeSrc": "12311:16:8",
															"nodeType": "YulAssignment",
															"src": "12311:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "12322:5:8",
																"nodeType": "YulIdentifier",
																"src": "12322:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12311:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "12311:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "12248:85:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12283:5:8",
														"nodeType": "YulTypedName",
														"src": "12283:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12293:7:8",
														"nodeType": "YulTypedName",
														"src": "12293:7:8",
														"type": ""
													}
												],
												"src": "12248:85:8"
											},
											{
												"body": {
													"nativeSrc": "12383:57:8",
													"nodeType": "YulBlock",
													"src": "12383:57:8",
													"statements": [
														{
															"nativeSrc": "12393:41:8",
															"nodeType": "YulAssignment",
															"src": "12393:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12408:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12408:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12415:18:8",
																		"nodeType": "YulLiteral",
																		"src": "12415:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12404:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12404:3:8"
																},
																"nativeSrc": "12404:30:8",
																"nodeType": "YulFunctionCall",
																"src": "12404:30:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12393:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "12393:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "12339:101:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12365:5:8",
														"nodeType": "YulTypedName",
														"src": "12365:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12375:7:8",
														"nodeType": "YulTypedName",
														"src": "12375:7:8",
														"type": ""
													}
												],
												"src": "12339:101:8"
											},
											{
												"body": {
													"nativeSrc": "12478:28:8",
													"nodeType": "YulBlock",
													"src": "12478:28:8",
													"statements": [
														{
															"nativeSrc": "12488:12:8",
															"nodeType": "YulAssignment",
															"src": "12488:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "12495:5:8",
																"nodeType": "YulIdentifier",
																"src": "12495:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12488:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12488:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "12446:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12464:5:8",
														"nodeType": "YulTypedName",
														"src": "12464:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12474:3:8",
														"nodeType": "YulTypedName",
														"src": "12474:3:8",
														"type": ""
													}
												],
												"src": "12446:60:8"
											},
											{
												"body": {
													"nativeSrc": "12579:89:8",
													"nodeType": "YulBlock",
													"src": "12579:89:8",
													"statements": [
														{
															"nativeSrc": "12589:73:8",
															"nodeType": "YulAssignment",
															"src": "12589:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12654:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "12654:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "12628:25:8",
																					"nodeType": "YulIdentifier",
																					"src": "12628:25:8"
																				},
																				"nativeSrc": "12628:32:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12628:32:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "12619:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "12619:8:8"
																		},
																		"nativeSrc": "12619:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12619:42:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "12602:16:8",
																	"nodeType": "YulIdentifier",
																	"src": "12602:16:8"
																},
																"nativeSrc": "12602:60:8",
																"nodeType": "YulFunctionCall",
																"src": "12602:60:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12589:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "12589:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "12512:156:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12559:5:8",
														"nodeType": "YulTypedName",
														"src": "12559:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12569:9:8",
														"nodeType": "YulTypedName",
														"src": "12569:9:8",
														"type": ""
													}
												],
												"src": "12512:156:8"
											},
											{
												"body": {
													"nativeSrc": "12746:73:8",
													"nodeType": "YulBlock",
													"src": "12746:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12763:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12763:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12806:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "12806:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "12768:37:8",
																			"nodeType": "YulIdentifier",
																			"src": "12768:37:8"
																		},
																		"nativeSrc": "12768:44:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12768:44:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12756:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12756:6:8"
																},
																"nativeSrc": "12756:57:8",
																"nodeType": "YulFunctionCall",
																"src": "12756:57:8"
															},
															"nativeSrc": "12756:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "12756:57:8"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "12674:145:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12734:5:8",
														"nodeType": "YulTypedName",
														"src": "12734:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12741:3:8",
														"nodeType": "YulTypedName",
														"src": "12741:3:8",
														"type": ""
													}
												],
												"src": "12674:145:8"
											},
											{
												"body": {
													"nativeSrc": "12930:131:8",
													"nodeType": "YulBlock",
													"src": "12930:131:8",
													"statements": [
														{
															"nativeSrc": "12940:26:8",
															"nodeType": "YulAssignment",
															"src": "12940:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12952:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12952:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12963:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12963:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12948:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12948:3:8"
																},
																"nativeSrc": "12948:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12948:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12940:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12940:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13027:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13027:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13040:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13040:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13051:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13051:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13036:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13036:3:8"
																		},
																		"nativeSrc": "13036:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13036:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "12976:50:8",
																	"nodeType": "YulIdentifier",
																	"src": "12976:50:8"
																},
																"nativeSrc": "12976:78:8",
																"nodeType": "YulFunctionCall",
																"src": "12976:78:8"
															},
															"nativeSrc": "12976:78:8",
															"nodeType": "YulExpressionStatement",
															"src": "12976:78:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "12825:236:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12902:9:8",
														"nodeType": "YulTypedName",
														"src": "12902:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12914:6:8",
														"nodeType": "YulTypedName",
														"src": "12914:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12925:4:8",
														"nodeType": "YulTypedName",
														"src": "12925:4:8",
														"type": ""
													}
												],
												"src": "12825:236:8"
											},
											{
												"body": {
													"nativeSrc": "13221:288:8",
													"nodeType": "YulBlock",
													"src": "13221:288:8",
													"statements": [
														{
															"nativeSrc": "13231:26:8",
															"nodeType": "YulAssignment",
															"src": "13231:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13243:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13243:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13254:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13254:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13239:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13239:3:8"
																},
																"nativeSrc": "13239:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13239:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13231:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13231:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13311:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13311:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13324:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13324:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13335:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13335:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13320:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13320:3:8"
																		},
																		"nativeSrc": "13320:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13320:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13267:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13267:43:8"
																},
																"nativeSrc": "13267:71:8",
																"nodeType": "YulFunctionCall",
																"src": "13267:71:8"
															},
															"nativeSrc": "13267:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "13267:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13392:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13392:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13405:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13405:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13416:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13416:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13401:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13401:3:8"
																		},
																		"nativeSrc": "13401:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13401:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13348:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13348:43:8"
																},
																"nativeSrc": "13348:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13348:72:8"
															},
															"nativeSrc": "13348:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13348:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13474:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13474:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13487:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13487:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13498:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13498:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13483:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13483:3:8"
																		},
																		"nativeSrc": "13483:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13483:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13430:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13430:43:8"
																},
																"nativeSrc": "13430:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13430:72:8"
															},
															"nativeSrc": "13430:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13430:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13067:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13177:9:8",
														"nodeType": "YulTypedName",
														"src": "13177:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13189:6:8",
														"nodeType": "YulTypedName",
														"src": "13189:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13197:6:8",
														"nodeType": "YulTypedName",
														"src": "13197:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13205:6:8",
														"nodeType": "YulTypedName",
														"src": "13205:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13216:4:8",
														"nodeType": "YulTypedName",
														"src": "13216:4:8",
														"type": ""
													}
												],
												"src": "13067:442:8"
											},
											{
												"body": {
													"nativeSrc": "13543:152:8",
													"nodeType": "YulBlock",
													"src": "13543:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13560:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13560:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13563:77:8",
																		"nodeType": "YulLiteral",
																		"src": "13563:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13553:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13553:6:8"
																},
																"nativeSrc": "13553:88:8",
																"nodeType": "YulFunctionCall",
																"src": "13553:88:8"
															},
															"nativeSrc": "13553:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "13553:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13657:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13657:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13660:4:8",
																		"nodeType": "YulLiteral",
																		"src": "13660:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13650:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13650:6:8"
																},
																"nativeSrc": "13650:15:8",
																"nodeType": "YulFunctionCall",
																"src": "13650:15:8"
															},
															"nativeSrc": "13650:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "13650:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13681:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13681:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13684:4:8",
																		"nodeType": "YulLiteral",
																		"src": "13684:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13674:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13674:6:8"
																},
																"nativeSrc": "13674:15:8",
																"nodeType": "YulFunctionCall",
																"src": "13674:15:8"
															},
															"nativeSrc": "13674:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "13674:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13515:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "13515:180:8"
											},
											{
												"body": {
													"nativeSrc": "13743:143:8",
													"nodeType": "YulBlock",
													"src": "13743:143:8",
													"statements": [
														{
															"nativeSrc": "13753:25:8",
															"nodeType": "YulAssignment",
															"src": "13753:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13776:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13776:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13758:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13758:17:8"
																},
																"nativeSrc": "13758:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13758:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13753:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13753:1:8"
																}
															]
														},
														{
															"nativeSrc": "13787:25:8",
															"nodeType": "YulAssignment",
															"src": "13787:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13810:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13810:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13792:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13792:17:8"
																},
																"nativeSrc": "13792:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13792:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13787:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13787:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13834:22:8",
																"nodeType": "YulBlock",
																"src": "13834:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13836:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "13836:16:8"
																			},
																			"nativeSrc": "13836:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13836:18:8"
																		},
																		"nativeSrc": "13836:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13836:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13831:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13831:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13824:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13824:6:8"
																},
																"nativeSrc": "13824:9:8",
																"nodeType": "YulFunctionCall",
																"src": "13824:9:8"
															},
															"nativeSrc": "13821:35:8",
															"nodeType": "YulIf",
															"src": "13821:35:8"
														},
														{
															"nativeSrc": "13866:14:8",
															"nodeType": "YulAssignment",
															"src": "13866:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13875:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13875:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13878:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13878:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13871:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13871:3:8"
																},
																"nativeSrc": "13871:9:8",
																"nodeType": "YulFunctionCall",
																"src": "13871:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13866:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13866:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13701:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13732:1:8",
														"nodeType": "YulTypedName",
														"src": "13732:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13735:1:8",
														"nodeType": "YulTypedName",
														"src": "13735:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13741:1:8",
														"nodeType": "YulTypedName",
														"src": "13741:1:8",
														"type": ""
													}
												],
												"src": "13701:185:8"
											},
											{
												"body": {
													"nativeSrc": "13937:149:8",
													"nodeType": "YulBlock",
													"src": "13937:149:8",
													"statements": [
														{
															"nativeSrc": "13947:25:8",
															"nodeType": "YulAssignment",
															"src": "13947:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13970:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13970:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13952:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13952:17:8"
																},
																"nativeSrc": "13952:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13952:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13947:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13947:1:8"
																}
															]
														},
														{
															"nativeSrc": "13981:25:8",
															"nodeType": "YulAssignment",
															"src": "13981:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14004:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14004:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13986:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13986:17:8"
																},
																"nativeSrc": "13986:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13986:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13981:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13981:1:8"
																}
															]
														},
														{
															"nativeSrc": "14015:17:8",
															"nodeType": "YulAssignment",
															"src": "14015:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14027:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14027:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14030:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14030:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14023:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14023:3:8"
																},
																"nativeSrc": "14023:9:8",
																"nodeType": "YulFunctionCall",
																"src": "14023:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14015:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14015:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14057:22:8",
																"nodeType": "YulBlock",
																"src": "14057:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14059:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14059:16:8"
																			},
																			"nativeSrc": "14059:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14059:18:8"
																		},
																		"nativeSrc": "14059:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14059:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14048:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14048:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14054:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14054:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14045:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "14045:2:8"
																},
																"nativeSrc": "14045:11:8",
																"nodeType": "YulFunctionCall",
																"src": "14045:11:8"
															},
															"nativeSrc": "14042:37:8",
															"nodeType": "YulIf",
															"src": "14042:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13892:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13923:1:8",
														"nodeType": "YulTypedName",
														"src": "13923:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13926:1:8",
														"nodeType": "YulTypedName",
														"src": "13926:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13932:4:8",
														"nodeType": "YulTypedName",
														"src": "13932:4:8",
														"type": ""
													}
												],
												"src": "13892:194:8"
											},
											{
												"body": {
													"nativeSrc": "14120:152:8",
													"nodeType": "YulBlock",
													"src": "14120:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14137:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14137:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14140:77:8",
																		"nodeType": "YulLiteral",
																		"src": "14140:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14130:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14130:6:8"
																},
																"nativeSrc": "14130:88:8",
																"nodeType": "YulFunctionCall",
																"src": "14130:88:8"
															},
															"nativeSrc": "14130:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "14130:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14234:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14234:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14237:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14237:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14227:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14227:6:8"
																},
																"nativeSrc": "14227:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14227:15:8"
															},
															"nativeSrc": "14227:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14227:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14258:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14258:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14261:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14261:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14251:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14251:6:8"
																},
																"nativeSrc": "14251:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14251:15:8"
															},
															"nativeSrc": "14251:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14251:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14092:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14092:180:8"
											},
											{
												"body": {
													"nativeSrc": "14332:87:8",
													"nodeType": "YulBlock",
													"src": "14332:87:8",
													"statements": [
														{
															"nativeSrc": "14342:11:8",
															"nodeType": "YulAssignment",
															"src": "14342:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "14350:3:8",
																"nodeType": "YulIdentifier",
																"src": "14350:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14342:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14342:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14370:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14370:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "14373:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14373:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14363:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14363:6:8"
																},
																"nativeSrc": "14363:14:8",
																"nodeType": "YulFunctionCall",
																"src": "14363:14:8"
															},
															"nativeSrc": "14363:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "14363:14:8"
														},
														{
															"nativeSrc": "14386:26:8",
															"nodeType": "YulAssignment",
															"src": "14386:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14404:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14404:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14407:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14407:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "14394:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "14394:9:8"
																},
																"nativeSrc": "14394:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14394:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14386:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14386:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "14278:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14319:3:8",
														"nodeType": "YulTypedName",
														"src": "14319:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14327:4:8",
														"nodeType": "YulTypedName",
														"src": "14327:4:8",
														"type": ""
													}
												],
												"src": "14278:141:8"
											},
											{
												"body": {
													"nativeSrc": "14469:49:8",
													"nodeType": "YulBlock",
													"src": "14469:49:8",
													"statements": [
														{
															"nativeSrc": "14479:33:8",
															"nodeType": "YulAssignment",
															"src": "14479:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14497:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "14497:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14504:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14504:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14493:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14493:3:8"
																		},
																		"nativeSrc": "14493:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14493:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14509:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14509:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14489:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14489:3:8"
																},
																"nativeSrc": "14489:23:8",
																"nodeType": "YulFunctionCall",
																"src": "14489:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14479:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14479:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "14425:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14452:5:8",
														"nodeType": "YulTypedName",
														"src": "14452:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14462:6:8",
														"nodeType": "YulTypedName",
														"src": "14462:6:8",
														"type": ""
													}
												],
												"src": "14425:93:8"
											},
											{
												"body": {
													"nativeSrc": "14577:54:8",
													"nodeType": "YulBlock",
													"src": "14577:54:8",
													"statements": [
														{
															"nativeSrc": "14587:37:8",
															"nodeType": "YulAssignment",
															"src": "14587:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14612:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14612:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14618:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14618:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14608:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14608:3:8"
																},
																"nativeSrc": "14608:16:8",
																"nodeType": "YulFunctionCall",
																"src": "14608:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14587:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "14587:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "14524:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14552:4:8",
														"nodeType": "YulTypedName",
														"src": "14552:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14558:5:8",
														"nodeType": "YulTypedName",
														"src": "14558:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14568:8:8",
														"nodeType": "YulTypedName",
														"src": "14568:8:8",
														"type": ""
													}
												],
												"src": "14524:107:8"
											},
											{
												"body": {
													"nativeSrc": "14713:317:8",
													"nodeType": "YulBlock",
													"src": "14713:317:8",
													"statements": [
														{
															"nativeSrc": "14723:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14723:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "14744:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "14744:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14756:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14756:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14740:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14740:3:8"
																},
																"nativeSrc": "14740:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14740:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "14727:9:8",
																	"nodeType": "YulTypedName",
																	"src": "14727:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14767:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14767:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14798:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14798:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14809:66:8",
																		"nodeType": "YulLiteral",
																		"src": "14809:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14779:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "14779:18:8"
																},
																"nativeSrc": "14779:97:8",
																"nodeType": "YulFunctionCall",
																"src": "14779:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14771:4:8",
																	"nodeType": "YulTypedName",
																	"src": "14771:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14885:51:8",
															"nodeType": "YulAssignment",
															"src": "14885:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14916:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14916:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "14927:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "14927:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14897:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "14897:18:8"
																},
																"nativeSrc": "14897:39:8",
																"nodeType": "YulFunctionCall",
																"src": "14897:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "14885:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "14885:8:8"
																}
															]
														},
														{
															"nativeSrc": "14945:30:8",
															"nodeType": "YulAssignment",
															"src": "14945:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14958:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14958:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "14969:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14969:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14965:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14965:3:8"
																		},
																		"nativeSrc": "14965:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14965:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14954:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14954:3:8"
																},
																"nativeSrc": "14954:21:8",
																"nodeType": "YulFunctionCall",
																"src": "14954:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14945:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "14945:5:8"
																}
															]
														},
														{
															"nativeSrc": "14984:40:8",
															"nodeType": "YulAssignment",
															"src": "14984:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14997:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14997:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "15008:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "15008:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "15018:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15018:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15004:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15004:3:8"
																		},
																		"nativeSrc": "15004:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15004:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14994:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "14994:2:8"
																},
																"nativeSrc": "14994:30:8",
																"nodeType": "YulFunctionCall",
																"src": "14994:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14984:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "14637:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14674:5:8",
														"nodeType": "YulTypedName",
														"src": "14674:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "14681:10:8",
														"nodeType": "YulTypedName",
														"src": "14681:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14693:8:8",
														"nodeType": "YulTypedName",
														"src": "14693:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14706:6:8",
														"nodeType": "YulTypedName",
														"src": "14706:6:8",
														"type": ""
													}
												],
												"src": "14637:393:8"
											},
											{
												"body": {
													"nativeSrc": "15096:82:8",
													"nodeType": "YulBlock",
													"src": "15096:82:8",
													"statements": [
														{
															"nativeSrc": "15106:66:8",
															"nodeType": "YulAssignment",
															"src": "15106:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15164:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "15164:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "15146:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "15146:17:8"
																				},
																				"nativeSrc": "15146:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15146:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15137:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "15137:8:8"
																		},
																		"nativeSrc": "15137:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15137:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15119:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "15119:17:8"
																},
																"nativeSrc": "15119:53:8",
																"nodeType": "YulFunctionCall",
																"src": "15119:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15106:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "15106:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "15036:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15076:5:8",
														"nodeType": "YulTypedName",
														"src": "15076:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15086:9:8",
														"nodeType": "YulTypedName",
														"src": "15086:9:8",
														"type": ""
													}
												],
												"src": "15036:142:8"
											},
											{
												"body": {
													"nativeSrc": "15231:28:8",
													"nodeType": "YulBlock",
													"src": "15231:28:8",
													"statements": [
														{
															"nativeSrc": "15241:12:8",
															"nodeType": "YulAssignment",
															"src": "15241:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "15248:5:8",
																"nodeType": "YulIdentifier",
																"src": "15248:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15241:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15241:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "15184:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15217:5:8",
														"nodeType": "YulTypedName",
														"src": "15217:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15227:3:8",
														"nodeType": "YulTypedName",
														"src": "15227:3:8",
														"type": ""
													}
												],
												"src": "15184:75:8"
											},
											{
												"body": {
													"nativeSrc": "15341:193:8",
													"nodeType": "YulBlock",
													"src": "15341:193:8",
													"statements": [
														{
															"nativeSrc": "15351:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15351:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "15406:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "15406:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "15375:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "15375:30:8"
																},
																"nativeSrc": "15375:39:8",
																"nodeType": "YulFunctionCall",
																"src": "15375:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "15355:16:8",
																	"nodeType": "YulTypedName",
																	"src": "15355:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15430:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15430:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15470:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "15470:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15464:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "15464:5:8"
																				},
																				"nativeSrc": "15464:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15464:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "15477:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15477:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15509:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "15509:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15485:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "15485:23:8"
																				},
																				"nativeSrc": "15485:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15485:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "15436:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "15436:27:8"
																		},
																		"nativeSrc": "15436:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15436:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "15423:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15423:6:8"
																},
																"nativeSrc": "15423:105:8",
																"nodeType": "YulFunctionCall",
																"src": "15423:105:8"
															},
															"nativeSrc": "15423:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "15423:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "15265:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15318:4:8",
														"nodeType": "YulTypedName",
														"src": "15318:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15324:6:8",
														"nodeType": "YulTypedName",
														"src": "15324:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "15332:7:8",
														"nodeType": "YulTypedName",
														"src": "15332:7:8",
														"type": ""
													}
												],
												"src": "15265:269:8"
											},
											{
												"body": {
													"nativeSrc": "15589:24:8",
													"nodeType": "YulBlock",
													"src": "15589:24:8",
													"statements": [
														{
															"nativeSrc": "15599:8:8",
															"nodeType": "YulAssignment",
															"src": "15599:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "15606:1:8",
																"nodeType": "YulLiteral",
																"src": "15606:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15599:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15599:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "15540:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15585:3:8",
														"nodeType": "YulTypedName",
														"src": "15585:3:8",
														"type": ""
													}
												],
												"src": "15540:73:8"
											},
											{
												"body": {
													"nativeSrc": "15672:136:8",
													"nodeType": "YulBlock",
													"src": "15672:136:8",
													"statements": [
														{
															"nativeSrc": "15682:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15682:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15696:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "15696:30:8"
																},
																"nativeSrc": "15696:32:8",
																"nodeType": "YulFunctionCall",
																"src": "15696:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "15686:6:8",
																	"nodeType": "YulTypedName",
																	"src": "15686:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15781:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15781:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15787:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15787:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15795:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15795:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15737:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "15737:43:8"
																},
																"nativeSrc": "15737:65:8",
																"nodeType": "YulFunctionCall",
																"src": "15737:65:8"
															},
															"nativeSrc": "15737:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "15737:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "15619:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15658:4:8",
														"nodeType": "YulTypedName",
														"src": "15658:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15664:6:8",
														"nodeType": "YulTypedName",
														"src": "15664:6:8",
														"type": ""
													}
												],
												"src": "15619:189:8"
											},
											{
												"body": {
													"nativeSrc": "15864:136:8",
													"nodeType": "YulBlock",
													"src": "15864:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "15931:63:8",
																"nodeType": "YulBlock",
																"src": "15931:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15975:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "15975:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15982:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15982:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "15945:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "15945:29:8"
																			},
																			"nativeSrc": "15945:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15945:39:8"
																		},
																		"nativeSrc": "15945:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15945:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15884:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15884:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15891:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15891:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15881:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "15881:2:8"
																},
																"nativeSrc": "15881:14:8",
																"nodeType": "YulFunctionCall",
																"src": "15881:14:8"
															},
															"nativeSrc": "15874:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15896:26:8",
																"nodeType": "YulBlock",
																"src": "15896:26:8",
																"statements": [
																	{
																		"nativeSrc": "15898:22:8",
																		"nodeType": "YulAssignment",
																		"src": "15898:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15911:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "15911:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15918:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15918:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15907:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "15907:3:8"
																			},
																			"nativeSrc": "15907:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15907:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "15898:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "15898:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15878:2:8",
																"nodeType": "YulBlock",
																"src": "15878:2:8",
																"statements": []
															},
															"src": "15874:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15814:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15852:5:8",
														"nodeType": "YulTypedName",
														"src": "15852:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15859:3:8",
														"nodeType": "YulTypedName",
														"src": "15859:3:8",
														"type": ""
													}
												],
												"src": "15814:186:8"
											},
											{
												"body": {
													"nativeSrc": "16085:464:8",
													"nodeType": "YulBlock",
													"src": "16085:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "16111:431:8",
																"nodeType": "YulBlock",
																"src": "16111:431:8",
																"statements": [
																	{
																		"nativeSrc": "16125:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16125:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "16173:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "16173:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "16141:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "16141:31:8"
																			},
																			"nativeSrc": "16141:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16141:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "16129:8:8",
																				"nodeType": "YulTypedName",
																				"src": "16129:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16192:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16192:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "16215:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "16215:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "16243:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "16243:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "16225:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "16225:17:8"
																					},
																					"nativeSrc": "16225:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16225:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16211:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "16211:3:8"
																			},
																			"nativeSrc": "16211:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16211:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "16196:11:8",
																				"nodeType": "YulTypedName",
																				"src": "16196:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "16412:27:8",
																			"nodeType": "YulBlock",
																			"src": "16412:27:8",
																			"statements": [
																				{
																					"nativeSrc": "16414:23:8",
																					"nodeType": "YulAssignment",
																					"src": "16414:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "16429:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "16429:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "16414:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "16414:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "16396:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "16396:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16408:2:8",
																					"nodeType": "YulLiteral",
																					"src": "16408:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "16393:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "16393:2:8"
																			},
																			"nativeSrc": "16393:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16393:18:8"
																		},
																		"nativeSrc": "16390:49:8",
																		"nodeType": "YulIf",
																		"src": "16390:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "16481:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "16481:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "16498:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "16498:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "16526:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "16526:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "16508:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "16508:17:8"
																							},
																							"nativeSrc": "16508:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "16508:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16494:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "16494:3:8"
																					},
																					"nativeSrc": "16494:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16494:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "16452:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "16452:28:8"
																			},
																			"nativeSrc": "16452:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16452:80:8"
																		},
																		"nativeSrc": "16452:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16452:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "16102:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16102:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16107:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16107:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16099:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16099:2:8"
																},
																"nativeSrc": "16099:11:8",
																"nodeType": "YulFunctionCall",
																"src": "16099:11:8"
															},
															"nativeSrc": "16096:446:8",
															"nodeType": "YulIf",
															"src": "16096:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "16006:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "16061:5:8",
														"nodeType": "YulTypedName",
														"src": "16061:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16068:3:8",
														"nodeType": "YulTypedName",
														"src": "16068:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "16073:10:8",
														"nodeType": "YulTypedName",
														"src": "16073:10:8",
														"type": ""
													}
												],
												"src": "16006:543:8"
											},
											{
												"body": {
													"nativeSrc": "16618:54:8",
													"nodeType": "YulBlock",
													"src": "16618:54:8",
													"statements": [
														{
															"nativeSrc": "16628:37:8",
															"nodeType": "YulAssignment",
															"src": "16628:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16653:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16653:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16659:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "16659:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16649:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16649:3:8"
																},
																"nativeSrc": "16649:16:8",
																"nodeType": "YulFunctionCall",
																"src": "16649:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16628:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "16628:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "16555:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16593:4:8",
														"nodeType": "YulTypedName",
														"src": "16593:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16599:5:8",
														"nodeType": "YulTypedName",
														"src": "16599:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16609:8:8",
														"nodeType": "YulTypedName",
														"src": "16609:8:8",
														"type": ""
													}
												],
												"src": "16555:117:8"
											},
											{
												"body": {
													"nativeSrc": "16729:118:8",
													"nodeType": "YulBlock",
													"src": "16729:118:8",
													"statements": [
														{
															"nativeSrc": "16739:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16739:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16788:1:8",
																						"nodeType": "YulLiteral",
																						"src": "16788:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16791:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "16791:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16784:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16784:3:8"
																				},
																				"nativeSrc": "16784:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16784:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16803:1:8",
																						"nodeType": "YulLiteral",
																						"src": "16803:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16799:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16799:3:8"
																				},
																				"nativeSrc": "16799:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16799:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16755:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "16755:28:8"
																		},
																		"nativeSrc": "16755:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16755:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16751:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16751:3:8"
																},
																"nativeSrc": "16751:56:8",
																"nodeType": "YulFunctionCall",
																"src": "16751:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16743:4:8",
																	"nodeType": "YulTypedName",
																	"src": "16743:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16816:25:8",
															"nodeType": "YulAssignment",
															"src": "16816:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16830:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16830:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16836:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16836:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16826:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16826:3:8"
																},
																"nativeSrc": "16826:15:8",
																"nodeType": "YulFunctionCall",
																"src": "16826:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16816:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16816:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "16678:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16706:4:8",
														"nodeType": "YulTypedName",
														"src": "16706:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16712:5:8",
														"nodeType": "YulTypedName",
														"src": "16712:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16722:6:8",
														"nodeType": "YulTypedName",
														"src": "16722:6:8",
														"type": ""
													}
												],
												"src": "16678:169:8"
											},
											{
												"body": {
													"nativeSrc": "16933:214:8",
													"nodeType": "YulBlock",
													"src": "16933:214:8",
													"statements": [
														{
															"nativeSrc": "17066:37:8",
															"nodeType": "YulAssignment",
															"src": "17066:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17093:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17093:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "17099:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17099:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "17074:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "17074:18:8"
																},
																"nativeSrc": "17074:29:8",
																"nodeType": "YulFunctionCall",
																"src": "17074:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17066:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17066:4:8"
																}
															]
														},
														{
															"nativeSrc": "17112:29:8",
															"nodeType": "YulAssignment",
															"src": "17112:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17123:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17123:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17133:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17133:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "17136:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "17136:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "17129:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17129:3:8"
																		},
																		"nativeSrc": "17129:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17129:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17120:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "17120:2:8"
																},
																"nativeSrc": "17120:21:8",
																"nodeType": "YulFunctionCall",
																"src": "17120:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "17112:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17112:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16852:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16914:4:8",
														"nodeType": "YulTypedName",
														"src": "16914:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16920:3:8",
														"nodeType": "YulTypedName",
														"src": "16920:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "16928:4:8",
														"nodeType": "YulTypedName",
														"src": "16928:4:8",
														"type": ""
													}
												],
												"src": "16852:295:8"
											},
											{
												"body": {
													"nativeSrc": "17244:1303:8",
													"nodeType": "YulBlock",
													"src": "17244:1303:8",
													"statements": [
														{
															"nativeSrc": "17255:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17255:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "17302:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17302:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "17269:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "17269:32:8"
																},
																"nativeSrc": "17269:37:8",
																"nodeType": "YulFunctionCall",
																"src": "17269:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "17259:6:8",
																	"nodeType": "YulTypedName",
																	"src": "17259:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17391:22:8",
																"nodeType": "YulBlock",
																"src": "17391:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "17393:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "17393:16:8"
																			},
																			"nativeSrc": "17393:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17393:18:8"
																		},
																		"nativeSrc": "17393:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17393:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17363:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17363:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17371:18:8",
																		"nodeType": "YulLiteral",
																		"src": "17371:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17360:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "17360:2:8"
																},
																"nativeSrc": "17360:30:8",
																"nodeType": "YulFunctionCall",
																"src": "17360:30:8"
															},
															"nativeSrc": "17357:56:8",
															"nodeType": "YulIf",
															"src": "17357:56:8"
														},
														{
															"nativeSrc": "17423:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17423:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "17469:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17469:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "17463:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "17463:5:8"
																		},
																		"nativeSrc": "17463:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17463:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "17437:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "17437:25:8"
																},
																"nativeSrc": "17437:38:8",
																"nodeType": "YulFunctionCall",
																"src": "17437:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "17427:6:8",
																	"nodeType": "YulTypedName",
																	"src": "17427:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17568:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17568:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "17574:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17574:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "17582:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17582:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "17522:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "17522:45:8"
																},
																"nativeSrc": "17522:67:8",
																"nodeType": "YulFunctionCall",
																"src": "17522:67:8"
															},
															"nativeSrc": "17522:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "17522:67:8"
														},
														{
															"nativeSrc": "17599:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17599:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "17616:1:8",
																"nodeType": "YulLiteral",
																"src": "17616:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17603:9:8",
																	"nodeType": "YulTypedName",
																	"src": "17603:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17627:17:8",
															"nodeType": "YulAssignment",
															"src": "17627:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "17640:4:8",
																"nodeType": "YulLiteral",
																"src": "17640:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17627:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "17627:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17691:611:8",
																		"nodeType": "YulBlock",
																		"src": "17691:611:8",
																		"statements": [
																			{
																				"nativeSrc": "17705:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17705:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17724:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "17724:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17736:4:8",
																									"nodeType": "YulLiteral",
																									"src": "17736:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17732:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "17732:3:8"
																							},
																							"nativeSrc": "17732:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "17732:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17720:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "17720:3:8"
																					},
																					"nativeSrc": "17720:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17720:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17709:7:8",
																						"nodeType": "YulTypedName",
																						"src": "17709:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17756:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17756:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17802:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "17802:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17770:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "17770:31:8"
																					},
																					"nativeSrc": "17770:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17770:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17760:6:8",
																						"nodeType": "YulTypedName",
																						"src": "17760:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17820:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17820:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17829:1:8",
																					"nodeType": "YulLiteral",
																					"src": "17829:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17824:1:8",
																						"nodeType": "YulTypedName",
																						"src": "17824:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17888:163:8",
																					"nodeType": "YulBlock",
																					"src": "17888:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17913:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "17913:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "17931:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "17931:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "17936:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "17936:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "17927:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "17927:3:8"
																												},
																												"nativeSrc": "17927:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "17927:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "17921:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "17921:5:8"
																										},
																										"nativeSrc": "17921:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "17921:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17906:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "17906:6:8"
																								},
																								"nativeSrc": "17906:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17906:42:8"
																							},
																							"nativeSrc": "17906:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "17906:42:8"
																						},
																						{
																							"nativeSrc": "17965:24:8",
																							"nodeType": "YulAssignment",
																							"src": "17965:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17979:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "17979:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17987:1:8",
																										"nodeType": "YulLiteral",
																										"src": "17987:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17975:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "17975:3:8"
																								},
																								"nativeSrc": "17975:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17975:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "17965:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "17965:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "18006:31:8",
																							"nodeType": "YulAssignment",
																							"src": "18006:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "18023:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "18023:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18034:2:8",
																										"nodeType": "YulLiteral",
																										"src": "18034:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18019:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "18019:3:8"
																								},
																								"nativeSrc": "18019:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "18019:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "18006:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "18006:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17854:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "17854:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17857:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "17857:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17851:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "17851:2:8"
																					},
																					"nativeSrc": "17851:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17851:14:8"
																				},
																				"nativeSrc": "17843:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17866:21:8",
																					"nodeType": "YulBlock",
																					"src": "17866:21:8",
																					"statements": [
																						{
																							"nativeSrc": "17868:17:8",
																							"nodeType": "YulAssignment",
																							"src": "17868:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "17877:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "17877:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17880:4:8",
																										"nodeType": "YulLiteral",
																										"src": "17880:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17873:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "17873:3:8"
																								},
																								"nativeSrc": "17873:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17873:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "17868:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "17868:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17847:3:8",
																					"nodeType": "YulBlock",
																					"src": "17847:3:8",
																					"statements": []
																				},
																				"src": "17843:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "18087:156:8",
																					"nodeType": "YulBlock",
																					"src": "18087:156:8",
																					"statements": [
																						{
																							"nativeSrc": "18105:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "18105:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18132:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "18132:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18137:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "18137:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18128:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "18128:3:8"
																										},
																										"nativeSrc": "18128:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "18128:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18122:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "18122:5:8"
																								},
																								"nativeSrc": "18122:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "18122:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "18109:9:8",
																									"nodeType": "YulTypedName",
																									"src": "18109:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18172:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "18172:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "18199:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "18199:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "18214:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "18214:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "18222:4:8",
																														"nodeType": "YulLiteral",
																														"src": "18222:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "18210:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "18210:3:8"
																												},
																												"nativeSrc": "18210:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "18210:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "18180:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "18180:18:8"
																										},
																										"nativeSrc": "18180:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "18180:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18165:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "18165:6:8"
																								},
																								"nativeSrc": "18165:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "18165:64:8"
																							},
																							"nativeSrc": "18165:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "18165:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18070:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "18070:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "18079:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "18079:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18067:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "18067:2:8"
																					},
																					"nativeSrc": "18067:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "18067:19:8"
																				},
																				"nativeSrc": "18064:179:8",
																				"nodeType": "YulIf",
																				"src": "18064:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18263:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "18263:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "18277:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "18277:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "18285:1:8",
																											"nodeType": "YulLiteral",
																											"src": "18285:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "18273:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "18273:3:8"
																									},
																									"nativeSrc": "18273:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "18273:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "18289:1:8",
																									"nodeType": "YulLiteral",
																									"src": "18289:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "18269:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "18269:3:8"
																							},
																							"nativeSrc": "18269:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "18269:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18256:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "18256:6:8"
																					},
																					"nativeSrc": "18256:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "18256:36:8"
																				},
																				"nativeSrc": "18256:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "18256:36:8"
																			}
																		]
																	},
																	"nativeSrc": "17684:618:8",
																	"nodeType": "YulCase",
																	"src": "17684:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17689:1:8",
																		"nodeType": "YulLiteral",
																		"src": "17689:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "18319:222:8",
																		"nodeType": "YulBlock",
																		"src": "18319:222:8",
																		"statements": [
																			{
																				"nativeSrc": "18333:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18333:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18346:1:8",
																					"nodeType": "YulLiteral",
																					"src": "18346:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "18337:5:8",
																						"nodeType": "YulTypedName",
																						"src": "18337:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18370:67:8",
																					"nodeType": "YulBlock",
																					"src": "18370:67:8",
																					"statements": [
																						{
																							"nativeSrc": "18388:35:8",
																							"nodeType": "YulAssignment",
																							"src": "18388:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18407:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "18407:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18412:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "18412:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18403:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "18403:3:8"
																										},
																										"nativeSrc": "18403:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "18403:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18397:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "18397:5:8"
																								},
																								"nativeSrc": "18397:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "18397:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "18388:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "18388:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "18363:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "18363:6:8"
																				},
																				"nativeSrc": "18360:77:8",
																				"nodeType": "YulIf",
																				"src": "18360:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18457:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "18457:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "18516:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "18516:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "18523:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "18523:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "18463:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "18463:52:8"
																							},
																							"nativeSrc": "18463:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "18463:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18450:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "18450:6:8"
																					},
																					"nativeSrc": "18450:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "18450:81:8"
																				},
																				"nativeSrc": "18450:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "18450:81:8"
																			}
																		]
																	},
																	"nativeSrc": "18311:230:8",
																	"nodeType": "YulCase",
																	"src": "18311:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17664:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17664:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17672:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17672:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17661:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "17661:2:8"
																},
																"nativeSrc": "17661:14:8",
																"nodeType": "YulFunctionCall",
																"src": "17661:14:8"
															},
															"nativeSrc": "17654:887:8",
															"nodeType": "YulSwitch",
															"src": "17654:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "17152:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17233:4:8",
														"nodeType": "YulTypedName",
														"src": "17233:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "17239:3:8",
														"nodeType": "YulTypedName",
														"src": "17239:3:8",
														"type": ""
													}
												],
												"src": "17152:1395:8"
											},
											{
												"body": {
													"nativeSrc": "18597:147:8",
													"nodeType": "YulBlock",
													"src": "18597:147:8",
													"statements": [
														{
															"nativeSrc": "18607:25:8",
															"nodeType": "YulAssignment",
															"src": "18607:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18630:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18630:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18612:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "18612:17:8"
																},
																"nativeSrc": "18612:20:8",
																"nodeType": "YulFunctionCall",
																"src": "18612:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18607:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "18607:1:8"
																}
															]
														},
														{
															"nativeSrc": "18641:25:8",
															"nodeType": "YulAssignment",
															"src": "18641:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18664:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18664:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18646:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "18646:17:8"
																},
																"nativeSrc": "18646:20:8",
																"nodeType": "YulFunctionCall",
																"src": "18646:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18641:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "18641:1:8"
																}
															]
														},
														{
															"nativeSrc": "18675:16:8",
															"nodeType": "YulAssignment",
															"src": "18675:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18686:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18686:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18689:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18689:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18682:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18682:3:8"
																},
																"nativeSrc": "18682:9:8",
																"nodeType": "YulFunctionCall",
																"src": "18682:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "18675:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18675:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18715:22:8",
																"nodeType": "YulBlock",
																"src": "18715:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18717:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "18717:16:8"
																			},
																			"nativeSrc": "18717:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18717:18:8"
																		},
																		"nativeSrc": "18717:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "18717:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18707:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18707:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "18710:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18710:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18704:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "18704:2:8"
																},
																"nativeSrc": "18704:10:8",
																"nodeType": "YulFunctionCall",
																"src": "18704:10:8"
															},
															"nativeSrc": "18701:36:8",
															"nodeType": "YulIf",
															"src": "18701:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "18553:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18584:1:8",
														"nodeType": "YulTypedName",
														"src": "18584:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18587:1:8",
														"nodeType": "YulTypedName",
														"src": "18587:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "18593:3:8",
														"nodeType": "YulTypedName",
														"src": "18593:3:8",
														"type": ""
													}
												],
												"src": "18553:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fee too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610114575f3560e01c80637a1ac61e116100a05780639a36f9321161006f5780639a36f932146102ba578063a9059cbb146102d8578063dd62ed3e14610308578063ecfca89914610338578063f2fde38b1461035657610114565b80637a1ac61e146102445780637b208769146102605780638da5cb5b1461027e57806395d89b411461029c57610114565b806323b872dd116100e757806323b872dd146101a057806330563bd7146101d0578063313ce567146101ec57806370a082311461020a578063715018a61461023a57610114565b806306fdde0314610118578063095ea7b31461013657806318160ddd1461016657806320c7c59614610184575b5f80fd5b610120610372565b60405161012d91906114b3565b60405180910390f35b610150600480360381019061014b9190611564565b610410565b60405161015d91906115bc565b60405180910390f35b61016e610432565b60405161017b91906115e4565b60405180910390f35b61019e600480360381019061019991906115fd565b610449565b005b6101ba60048036038101906101b59190611628565b6104a0565b6040516101c791906115bc565b60405180910390f35b6101ea60048036038101906101e59190611678565b6104ce565b005b6101f4610586565b60405161020191906116be565b60405180910390f35b610224600480360381019061021f9190611678565b61058e565b60405161023191906115e4565b60405180910390f35b6102426105e1565b005b61025e600480360381019061025991906116d7565b6105f4565b005b610268610867565b6040516102759190611736565b60405180910390f35b61028661088a565b6040516102939190611736565b60405180910390f35b6102a46108bf565b6040516102b191906114b3565b60405180910390f35b6102c261095d565b6040516102cf91906115e4565b60405180910390f35b6102f260048036038101906102ed9190611564565b610963565b6040516102ff91906115bc565b60405180910390f35b610322600480360381019061031d919061174f565b610985565b60405161032f91906115e4565b60405180910390f35b610340610a15565b60405161034d91906115e4565b60405180910390f35b610370600480360381019061036b9190611678565b610a1b565b005b60605f61037d610a9f565b905080600301805461038e906117ba565b80601f01602080910402602001604051908101604052809291908181526020018280546103ba906117ba565b80156104055780601f106103dc57610100808354040283529160200191610405565b820191905f5260205f20905b8154815290600101906020018083116103e857829003601f168201915b505050505091505090565b5f8061041a610ac6565b9050610427818585610acd565b600191505092915050565b5f8061043c610a9f565b9050806002015491505090565b610451610adf565b600254811115610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90611834565b60405180910390fd5b8060018190555050565b5f806104aa610ac6565b90506104b7858285610b66565b6104c2858585610bf8565b60019150509392505050565b6104d6610adf565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b9061189c565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f6012905090565b5f80610598610a9f565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b6105e9610adf565b6105f25f610c61565b565b5f6105fd610d32565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156106455750825b90505f60018367ffffffffffffffff1614801561067857505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610686575080155b156106bd576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561070a576001855f0160086101000a81548160ff0219169083151502179055505b61077e6040518060400160405280600681526020017f4361746e697000000000000000000000000000000000000000000000000000008152506040518060400160405280600681526020017f4341544e49500000000000000000000000000000000000000000000000000000815250610d59565b5f33905061078b81610d6f565b885f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600181905550612710600281905550610802336107e6610586565b600a6107f29190611a16565b8a6107fd9190611a60565b610d83565b50831561085d575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516108549190611af6565b60405180910390a15b5050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610894610e02565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f6108ca610a9f565b90508060040180546108db906117ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610907906117ba565b80156109525780601f1061092957610100808354040283529160200191610952565b820191905f5260205f20905b81548152906001019060200180831161093557829003601f168201915b505050505091505090565b60025481565b5f8061096d610ac6565b905061097a818585610bf8565b600191505092915050565b5f8061098f610a9f565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b60015481565b610a23610adf565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a93575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a8a9190611736565b60405180910390fd5b610a9c81610c61565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b610ada8383836001610e29565b505050565b610ae7610ac6565b73ffffffffffffffffffffffffffffffffffffffff16610b0561088a565b73ffffffffffffffffffffffffffffffffffffffff1614610b6457610b28610ac6565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b5b9190611736565b60405180910390fd5b565b5f610b718484610985565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bf25781811015610be3578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610bda93929190611b0f565b60405180910390fd5b610bf184848484035f610e29565b5b50505050565b5f60025460015483610c0a9190611a60565b610c149190611b71565b90505f8183610c239190611ba1565b9050610c4f855f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611006565b610c5a858583611006565b5050505050565b5f610c6a610e02565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610d616110f6565b610d6b8282611136565b5050565b610d776110f6565b610d8081611172565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610df3575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dea9190611736565b60405180910390fd5b610dfe5f83836111f6565b5050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f610e32610a9f565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610ea4575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e9b9190611736565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f14575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f0b9190611736565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115610fff578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610ff691906115e4565b60405180910390a35b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611076575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161106d9190611736565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110e6575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110dd9190611736565b60405180910390fd5b6110f18383836111f6565b505050565b6110fe611425565b611134576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61113e6110f6565b5f611147610a9f565b90508281600301908161115a9190611d95565b508181600401908161116c9190611d95565b50505050565b61117a6110f6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ea575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111e19190611736565b60405180910390fd5b6111f381610c61565b50565b5f6111ff610a9f565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112535781816002015f8282546112479190611e64565b92505081905550611325565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156112de578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016112d593929190611b0f565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361136e5781816002015f82825403925050819055506113ba565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161141791906115e4565b60405180910390a350505050565b5f61142e610d32565b5f0160089054906101000a900460ff16905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61148582611443565b61148f818561144d565b935061149f81856020860161145d565b6114a88161146b565b840191505092915050565b5f6020820190508181035f8301526114cb818461147b565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611500826114d7565b9050919050565b611510816114f6565b811461151a575f80fd5b50565b5f8135905061152b81611507565b92915050565b5f819050919050565b61154381611531565b811461154d575f80fd5b50565b5f8135905061155e8161153a565b92915050565b5f806040838503121561157a576115796114d3565b5b5f6115878582860161151d565b925050602061159885828601611550565b9150509250929050565b5f8115159050919050565b6115b6816115a2565b82525050565b5f6020820190506115cf5f8301846115ad565b92915050565b6115de81611531565b82525050565b5f6020820190506115f75f8301846115d5565b92915050565b5f60208284031215611612576116116114d3565b5b5f61161f84828501611550565b91505092915050565b5f805f6060848603121561163f5761163e6114d3565b5b5f61164c8682870161151d565b935050602061165d8682870161151d565b925050604061166e86828701611550565b9150509250925092565b5f6020828403121561168d5761168c6114d3565b5b5f61169a8482850161151d565b91505092915050565b5f60ff82169050919050565b6116b8816116a3565b82525050565b5f6020820190506116d15f8301846116af565b92915050565b5f805f606084860312156116ee576116ed6114d3565b5b5f6116fb8682870161151d565b935050602061170c86828701611550565b925050604061171d86828701611550565b9150509250925092565b611730816114f6565b82525050565b5f6020820190506117495f830184611727565b92915050565b5f8060408385031215611765576117646114d3565b5b5f6117728582860161151d565b92505060206117838582860161151d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117d157607f821691505b6020821081036117e4576117e361178d565b5b50919050565b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f61181e600c8361144d565b9150611829826117ea565b602082019050919050565b5f6020820190508181035f83015261184b81611812565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611886600f8361144d565b915061189182611852565b602082019050919050565b5f6020820190508181035f8301526118b38161187a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111561193c57808604811115611918576119176118ba565b5b60018516156119275780820291505b8081029050611935856118e7565b94506118fc565b94509492505050565b5f826119545760019050611a0f565b81611961575f9050611a0f565b81600181146119775760028114611981576119b0565b6001915050611a0f565b60ff841115611993576119926118ba565b5b8360020a9150848211156119aa576119a96118ba565b5b50611a0f565b5060208310610133831016604e8410600b84101617156119e55782820a9050838111156119e0576119df6118ba565b5b611a0f565b6119f284848460016118f3565b92509050818404811115611a0957611a086118ba565b5b81810290505b9392505050565b5f611a2082611531565b9150611a2b836116a3565b9250611a587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611945565b905092915050565b5f611a6a82611531565b9150611a7583611531565b9250828202611a8381611531565b91508282048414831517611a9a57611a996118ba565b5b5092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f611ae0611adb611ad684611aa1565b611abd565b611aaa565b9050919050565b611af081611ac6565b82525050565b5f602082019050611b095f830184611ae7565b92915050565b5f606082019050611b225f830186611727565b611b2f60208301856115d5565b611b3c60408301846115d5565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611b7b82611531565b9150611b8683611531565b925082611b9657611b95611b44565b5b828204905092915050565b5f611bab82611531565b9150611bb683611531565b9250828203905081811115611bce57611bcd6118ba565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611c5d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611c22565b611c678683611c22565b95508019841693508086168417925050509392505050565b5f611c99611c94611c8f84611531565b611abd565b611531565b9050919050565b5f819050919050565b611cb283611c7f565b611cc6611cbe82611ca0565b848454611c2e565b825550505050565b5f90565b611cda611cce565b611ce5818484611ca9565b505050565b5b81811015611d0857611cfd5f82611cd2565b600181019050611ceb565b5050565b601f821115611d4d57611d1e81611c01565b611d2784611c13565b81016020851015611d36578190505b611d4a611d4285611c13565b830182611cea565b50505b505050565b5f82821c905092915050565b5f611d6d5f1984600802611d52565b1980831691505092915050565b5f611d858383611d5e565b9150826002028217905092915050565b611d9e82611443565b67ffffffffffffffff811115611db757611db6611bd4565b5b611dc182546117ba565b611dcc828285611d0c565b5f60209050601f831160018114611dfd575f8415611deb578287015190505b611df58582611d7a565b865550611e5c565b601f198416611e0b86611c01565b5f5b82811015611e3257848901518255600182019150602085019450602081019050611e0d565b86831015611e4f5784890151611e4b601f891682611d5e565b8355505b6001600288020188555050505b505050505050565b5f611e6e82611531565b9150611e7983611531565b9250828201905080821115611e9157611e906118ba565b5b9291505056fea2646970667358221220e13c0ee5c791fa29f8d4757dd7f107aaa282faada23e581b4c71a516761981aa64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A1AC61E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9A36F932 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9A36F932 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xECFCA899 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x356 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x7A1AC61E EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x7B208769 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x30563BD7 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x20C7C596 EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1678 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F4 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1678 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH2 0x5E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x268 PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1678 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x37D PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x38E SWAP1 PUSH2 0x17BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BA SWAP1 PUSH2 0x17BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x405 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x405 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x41A PUSH2 0xAC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x427 DUP2 DUP6 DUP6 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x43C PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x451 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4AA PUSH2 0xAC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B7 DUP6 DUP3 DUP6 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x4C2 DUP6 DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0xADF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP1 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x598 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E9 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x5F2 PUSH0 PUSH2 0xC61 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5FD PUSH2 0xD32 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x645 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x678 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x686 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x70A JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x77E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4361746E69700000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4341544E49500000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xD59 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH2 0x78B DUP2 PUSH2 0xD6F JUMP JUMPDEST DUP9 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2710 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x802 CALLER PUSH2 0x7E6 PUSH2 0x586 JUMP JUMPDEST PUSH1 0xA PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST DUP11 PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x85D JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x894 PUSH2 0xE02 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x8CA PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x8DB SWAP1 PUSH2 0x17BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x907 SWAP1 PUSH2 0x17BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x952 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x929 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x952 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x935 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x96D PUSH2 0xAC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x97A DUP2 DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x98F PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA23 PUSH2 0xADF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0xC61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xADA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAE7 PUSH2 0xAC6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB05 PUSH2 0x88A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB64 JUMPI PUSH2 0xB28 PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xB71 DUP5 DUP5 PUSH2 0x985 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xBF2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBE3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE29 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD DUP4 PUSH2 0xC0A SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0xC14 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xC23 SWAP2 SWAP1 PUSH2 0x1BA1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC4F DUP6 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x1006 JUMP JUMPDEST PUSH2 0xC5A DUP6 DUP6 DUP4 PUSH2 0x1006 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC6A PUSH2 0xE02 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD61 PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0xD6B DUP3 DUP3 PUSH2 0x1136 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD77 PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0x1172 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFE PUSH0 DUP4 DUP4 PUSH2 0x11F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xE32 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF14 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0B SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0xFFF JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1076 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F1 DUP4 DUP4 DUP4 PUSH2 0x11F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x10FE PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x113E PUSH2 0x10F6 JUMP JUMPDEST PUSH0 PUSH2 0x1147 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x115A SWAP2 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x116C SWAP2 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x117A PUSH2 0x10F6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E1 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F3 DUP2 PUSH2 0xC61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x11FF PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1253 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1247 SWAP2 SWAP1 PUSH2 0x1E64 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1325 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x12DE JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x136E JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13BA JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1417 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x142E PUSH2 0xD32 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1485 DUP3 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x148F DUP2 DUP6 PUSH2 0x144D JUMP JUMPDEST SWAP4 POP PUSH2 0x149F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST PUSH2 0x14A8 DUP2 PUSH2 0x146B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14CB DUP2 DUP5 PUSH2 0x147B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1500 DUP3 PUSH2 0x14D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1510 DUP2 PUSH2 0x14F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x151A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152B DUP2 PUSH2 0x1507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1543 DUP2 PUSH2 0x1531 JUMP JUMPDEST DUP2 EQ PUSH2 0x154D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x155E DUP2 PUSH2 0x153A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157A JUMPI PUSH2 0x1579 PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1587 DUP6 DUP3 DUP7 ADD PUSH2 0x151D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1598 DUP6 DUP3 DUP7 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B6 DUP2 PUSH2 0x15A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CF PUSH0 DUP4 ADD DUP5 PUSH2 0x15AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DE DUP2 PUSH2 0x1531 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1612 JUMPI PUSH2 0x1611 PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x161F DUP5 DUP3 DUP6 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163F JUMPI PUSH2 0x163E PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x164C DUP7 DUP3 DUP8 ADD PUSH2 0x151D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x165D DUP7 DUP3 DUP8 ADD PUSH2 0x151D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x166E DUP7 DUP3 DUP8 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168D JUMPI PUSH2 0x168C PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x169A DUP5 DUP3 DUP6 ADD PUSH2 0x151D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B8 DUP2 PUSH2 0x16A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x16AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16EE JUMPI PUSH2 0x16ED PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16FB DUP7 DUP3 DUP8 ADD PUSH2 0x151D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x170C DUP7 DUP3 DUP8 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x171D DUP7 DUP3 DUP8 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1730 DUP2 PUSH2 0x14F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1749 PUSH0 DUP4 ADD DUP5 PUSH2 0x1727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1765 JUMPI PUSH2 0x1764 PUSH2 0x14D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1772 DUP6 DUP3 DUP7 ADD PUSH2 0x151D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1783 DUP6 DUP3 DUP7 ADD PUSH2 0x151D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17E4 JUMPI PUSH2 0x17E3 PUSH2 0x178D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181E PUSH1 0xC DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP PUSH2 0x1829 DUP3 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x184B DUP2 PUSH2 0x1812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1886 PUSH1 0xF DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 DUP3 PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B3 DUP2 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x193C JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1918 JUMPI PUSH2 0x1917 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1927 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1935 DUP6 PUSH2 0x18E7 JUMP JUMPDEST SWAP5 POP PUSH2 0x18FC JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1954 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1A0F JUMP JUMPDEST DUP2 PUSH2 0x1961 JUMPI PUSH0 SWAP1 POP PUSH2 0x1A0F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1977 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1981 JUMPI PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1993 JUMPI PUSH2 0x1992 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x19AA JUMPI PUSH2 0x19A9 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST POP PUSH2 0x1A0F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x19E5 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x19E0 JUMPI PUSH2 0x19DF PUSH2 0x18BA JUMP JUMPDEST JUMPDEST PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x19F2 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x18F3 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A20 DUP3 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2B DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A58 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1945 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6A DUP3 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A75 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A83 DUP2 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A9A JUMPI PUSH2 0x1A99 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE0 PUSH2 0x1ADB PUSH2 0x1AD6 DUP5 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1AAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF0 DUP2 PUSH2 0x1AC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B09 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B22 PUSH0 DUP4 ADD DUP7 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x1B2F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x1B3C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B7B DUP3 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B86 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B96 JUMPI PUSH2 0x1B95 PUSH2 0x1B44 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BAB DUP3 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB6 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1BCE JUMPI PUSH2 0x1BCD PUSH2 0x18BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1C5D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1C22 JUMP JUMPDEST PUSH2 0x1C67 DUP7 DUP4 PUSH2 0x1C22 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C99 PUSH2 0x1C94 PUSH2 0x1C8F DUP5 PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1531 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB2 DUP4 PUSH2 0x1C7F JUMP JUMPDEST PUSH2 0x1CC6 PUSH2 0x1CBE DUP3 PUSH2 0x1CA0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1C2E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1CDA PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x1CE5 DUP2 DUP5 DUP5 PUSH2 0x1CA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D08 JUMPI PUSH2 0x1CFD PUSH0 DUP3 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D4D JUMPI PUSH2 0x1D1E DUP2 PUSH2 0x1C01 JUMP JUMPDEST PUSH2 0x1D27 DUP5 PUSH2 0x1C13 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D36 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1D4A PUSH2 0x1D42 DUP6 PUSH2 0x1C13 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1CEA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1D52 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D85 DUP4 DUP4 PUSH2 0x1D5E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D9E DUP3 PUSH2 0x1443 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DB7 JUMPI PUSH2 0x1DB6 PUSH2 0x1BD4 JUMP JUMPDEST JUMPDEST PUSH2 0x1DC1 DUP3 SLOAD PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x1DCC DUP3 DUP3 DUP6 PUSH2 0x1D0C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DFD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1DEB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1DF5 DUP6 DUP3 PUSH2 0x1D7A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1E0B DUP7 PUSH2 0x1C01 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E32 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E0D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1E4F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1E4B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1D5E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6E DUP3 PUSH2 0x1531 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E79 DUP4 PUSH2 0x1531 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E91 JUMPI PUSH2 0x1E90 PUSH2 0x18BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 EXTCODECOPY 0xE 0xE5 0xC7 SWAP2 STATICCALL 0x29 0xF8 0xD4 PUSH22 0x7DD7F107AAA282FAADA23E581B4C71A516761981AA64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "289:1776:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3896:152;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1317:164:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5988:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1129:182:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3754:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4106:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;655:468:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;371:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2973:148:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;559:25:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4472:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4708:195;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;450:25:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2716:144:2;2761:13;2786:22;2811:18;:16;:18::i;:::-;2786:43;;2846:1;:7;;2839:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144;:::o;5210:186::-;5283:4;5299:13;5315:12;:10;:12::i;:::-;5299:28;;5337:31;5346:5;5353:7;5362:5;5337:8;:31::i;:::-;5385:4;5378:11;;;5210:186;;;;:::o;3896:152::-;3948:7;3967:22;3992:18;:16;:18::i;:::-;3967:43;;4027:1;:14;;;4020:21;;;3896:152;:::o;1317:164:7:-;2334:13:0;:11;:13::i;:::-;1413:10:7::1;;1398:11;:25;;1390:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1463:11;1450:10;:24;;;;1317:164:::0;:::o;5988:244:2:-;6075:4;6091:15;6109:12;:10;:12::i;:::-;6091:30;;6131:37;6147:4;6153:7;6162:5;6131:15;:37::i;:::-;6178:26;6188:4;6194:2;6198:5;6178:9;:26::i;:::-;6221:4;6214:11;;;5988:244;;;;;:::o;1129:182:7:-;2334:13:0;:11;:13::i;:::-;1242:1:7::1;1216:28;;:14;:28;;::::0;1208:56:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1290:14;1274:13;::::0;:30:::1;;;;;;;;;;;;;;;;;;1129:182:::0;:::o;3754:82:2:-;3803:5;3827:2;3820:9;;3754:82;:::o;4106:171::-;4171:7;4190:22;4215:18;:16;:18::i;:::-;4190:43;;4250:1;:11;;:20;4262:7;4250:20;;;;;;;;;;;;;;;;4243:27;;;4106:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;655:468:7:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;773:32:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:32::i;:::-;814:13;830:10;814:26;;849:21;864:5;849:14;:21::i;:::-;897:14;881:13;::::0;:30:::1;;;;;;;;;;;;;;;;;;934:11;921:10;:24;;;;968:5;955:10;:18;;;;1062:54;1068:10;1104;:8;:10::i;:::-;1098:2;:16;;;;:::i;:::-;1080:14;:35;;;;:::i;:::-;1062:5;:54::i;:::-;763:360;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;655:468:7;;;:::o;371:28::-;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2973:148:2:-;3020:13;3045:22;3070:18;:16;:18::i;:::-;3045:43;;3105:1;:9;;3098:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:148;:::o;559:25:7:-;;;;:::o;4472:178:2:-;4541:4;4557:13;4573:12;:10;:12::i;:::-;4557:28;;4595:27;4605:5;4612:2;4616:5;4595:9;:27::i;:::-;4639:4;4632:11;;;4472:178;;;;:::o;4708:195::-;4788:7;4807:22;4832:18;:16;:18::i;:::-;4807:43;;4867:1;:13;;:20;4881:5;4867:20;;;;;;;;;;;;;;;:29;4888:7;4867:29;;;;;;;;;;;;;;;;4860:36;;;4708:195;;;;:::o;450:25:7:-;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1947:153:2:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;10025:128:2:-;10109:37;10118:5;10125:7;10134:5;10141:4;10109:8;:37::i;:::-;10025:128;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;11769:477:2:-;11868:24;11895:25;11905:5;11912:7;11895:9;:25::i;:::-;11868:52;;11954:17;11934:16;:37;11930:310;;12010:5;11991:16;:24;11987:130;;;12069:7;12078:16;12096:5;12042:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11987:130;12158:57;12167:5;12174:7;12202:5;12183:16;:24;12209:5;12158:8;:57::i;:::-;11930:310;11858:388;11769:477;;;:::o;1487:576:7:-;1659:17;1703:10;;1689;;1680:6;:19;;;;:::i;:::-;1679:34;;;;:::i;:::-;1659:54;;1784:22;1818:9;1809:6;:18;;;;:::i;:::-;1784:43;;1888:49;1904:6;1912:13;;;;;;;;;;1927:9;1888:15;:49::i;:::-;2006:50;2022:6;2030:9;2041:14;2006:15;:50::i;:::-;1575:488;;1487:576;;;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2282:147:2:-;6931:20:1;:18;:20::i;:::-;2384:38:2::1;2407:5;2414:7;2384:22;:38::i;:::-;2282:147:::0;;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;8741:216:2:-;8838:1;8819:21;;:7;:21;;;8815:91;;8892:1;8863:32;;;;;;;;;;;:::i;:::-;;;;;;;;8815:91;8915:35;8931:1;8935:7;8944:5;8915:7;:35::i;:::-;8741:216;;:::o;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;11000:487:2:-;11108:22;11133:18;:16;:18::i;:::-;11108:43;;11182:1;11165:19;;:5;:19;;;11161:89;;11236:1;11207:32;;;;;;;;;;;:::i;:::-;;;;;;;;11161:89;11282:1;11263:21;;:7;:21;;;11259:90;;11335:1;11307:31;;;;;;;;;;;:::i;:::-;;;;;;;;11259:90;11390:5;11358:1;:13;;:20;11372:5;11358:20;;;;;;;;;;;;;;;:29;11379:7;11358:29;;;;;;;;;;;;;;;:37;;;;11409:9;11405:76;;;11455:7;11439:31;;11448:5;11439:31;;;11464:5;11439:31;;;;;;:::i;:::-;;;;;;;;11405:76;11098:389;11000:487;;;;:::o;6605:308::-;6712:1;6696:18;;:4;:18;;;6692:86;;6764:1;6737:30;;;;;;;;;;;:::i;:::-;;;;;;;;6692:86;6805:1;6791:16;;:2;:16;;;6787:86;;6859:1;6830:32;;;;;;;;;;;:::i;:::-;;;;;;;;6787:86;6882:24;6890:4;6896:2;6900:5;6882:7;:24::i;:::-;6605:308;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2435:216:2:-;6931:20:1;:18;:20::i;:::-;2547:22:2::1;2572:18;:16;:18::i;:::-;2547:43;;2610:5;2600:1;:7;;:15;;;;;;:::i;:::-;;2637:7;2625:1;:9;;:19;;;;;;:::i;:::-;;2537:114;2435:216:::0;;:::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;7228:1170:2:-;7313:22;7338:18;:16;:18::i;:::-;7313:43;;7386:1;7370:18;;:4;:18;;;7366:546;;7524:5;7506:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7366:546;;;7560:19;7582:1;:11;;:17;7594:4;7582:17;;;;;;;;;;;;;;;;7560:39;;7631:5;7617:11;:19;7613:115;;;7688:4;7694:11;7707:5;7663:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7613:115;7882:5;7868:11;:19;7848:1;:11;;:17;7860:4;7848:17;;;;;;;;;;;;;;;:39;;;;7546:366;7366:546;7940:1;7926:16;;:2;:16;;;7922:429;;8107:5;8089:1;:14;;;:23;;;;;;;;;;;7922:429;;;8321:5;8302:1;:11;;:15;8314:2;8302:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7922:429;8381:2;8366:25;;8375:4;8366:25;;;8385:5;8366:25;;;;;;:::i;:::-;;;;;;;;7303:1095;7228:1170;;;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:329::-;4710:6;4759:2;4747:9;4738:7;4734:23;4730:32;4727:119;;;4765:79;;:::i;:::-;4727:119;4885:1;4910:53;4955:7;4946:6;4935:9;4931:22;4910:53;:::i;:::-;4900:63;;4856:117;4651:329;;;;:::o;4986:86::-;5021:7;5061:4;5054:5;5050:16;5039:27;;4986:86;;;:::o;5078:112::-;5161:22;5177:5;5161:22;:::i;:::-;5156:3;5149:35;5078:112;;:::o;5196:214::-;5285:4;5323:2;5312:9;5308:18;5300:26;;5336:67;5400:1;5389:9;5385:17;5376:6;5336:67;:::i;:::-;5196:214;;;;:::o;5416:619::-;5493:6;5501;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5939:2;5965:53;6010:7;6001:6;5990:9;5986:22;5965:53;:::i;:::-;5955:63;;5910:118;5416:619;;;;;:::o;6041:118::-;6128:24;6146:5;6128:24;:::i;:::-;6123:3;6116:37;6041:118;;:::o;6165:222::-;6258:4;6296:2;6285:9;6281:18;6273:26;;6309:71;6377:1;6366:9;6362:17;6353:6;6309:71;:::i;:::-;6165:222;;;;:::o;6393:474::-;6461:6;6469;6518:2;6506:9;6497:7;6493:23;6489:32;6486:119;;;6524:79;;:::i;:::-;6486:119;6644:1;6669:53;6714:7;6705:6;6694:9;6690:22;6669:53;:::i;:::-;6659:63;;6615:117;6771:2;6797:53;6842:7;6833:6;6822:9;6818:22;6797:53;:::i;:::-;6787:63;;6742:118;6393:474;;;;;:::o;6873:180::-;6921:77;6918:1;6911:88;7018:4;7015:1;7008:15;7042:4;7039:1;7032:15;7059:320;7103:6;7140:1;7134:4;7130:12;7120:22;;7187:1;7181:4;7177:12;7208:18;7198:81;;7264:4;7256:6;7252:17;7242:27;;7198:81;7326:2;7318:6;7315:14;7295:18;7292:38;7289:84;;7345:18;;:::i;:::-;7289:84;7110:269;7059:320;;;:::o;7385:162::-;7525:14;7521:1;7513:6;7509:14;7502:38;7385:162;:::o;7553:366::-;7695:3;7716:67;7780:2;7775:3;7716:67;:::i;:::-;7709:74;;7792:93;7881:3;7792:93;:::i;:::-;7910:2;7905:3;7901:12;7894:19;;7553:366;;;:::o;7925:419::-;8091:4;8129:2;8118:9;8114:18;8106:26;;8178:9;8172:4;8168:20;8164:1;8153:9;8149:17;8142:47;8206:131;8332:4;8206:131;:::i;:::-;8198:139;;7925:419;;;:::o;8350:165::-;8490:17;8486:1;8478:6;8474:14;8467:41;8350:165;:::o;8521:366::-;8663:3;8684:67;8748:2;8743:3;8684:67;:::i;:::-;8677:74;;8760:93;8849:3;8760:93;:::i;:::-;8878:2;8873:3;8869:12;8862:19;;8521:366;;;:::o;8893:419::-;9059:4;9097:2;9086:9;9082:18;9074:26;;9146:9;9140:4;9136:20;9132:1;9121:9;9117:17;9110:47;9174:131;9300:4;9174:131;:::i;:::-;9166:139;;8893:419;;;:::o;9318:180::-;9366:77;9363:1;9356:88;9463:4;9460:1;9453:15;9487:4;9484:1;9477:15;9504:102;9546:8;9593:5;9590:1;9586:13;9565:34;;9504:102;;;:::o;9612:848::-;9673:5;9680:4;9704:6;9695:15;;9728:5;9719:14;;9742:712;9763:1;9753:8;9750:15;9742:712;;;9858:4;9853:3;9849:14;9843:4;9840:24;9837:50;;;9867:18;;:::i;:::-;9837:50;9917:1;9907:8;9903:16;9900:451;;;10332:4;10325:5;10321:16;10312:25;;9900:451;10382:4;10376;10372:15;10364:23;;10412:32;10435:8;10412:32;:::i;:::-;10400:44;;9742:712;;;9612:848;;;;;;;:::o;10466:1073::-;10520:5;10711:8;10701:40;;10732:1;10723:10;;10734:5;;10701:40;10760:4;10750:36;;10777:1;10768:10;;10779:5;;10750:36;10846:4;10894:1;10889:27;;;;10930:1;10925:191;;;;10839:277;;10889:27;10907:1;10898:10;;10909:5;;;10925:191;10970:3;10960:8;10957:17;10954:43;;;10977:18;;:::i;:::-;10954:43;11026:8;11023:1;11019:16;11010:25;;11061:3;11054:5;11051:14;11048:40;;;11068:18;;:::i;:::-;11048:40;11101:5;;;10839:277;;11225:2;11215:8;11212:16;11206:3;11200:4;11197:13;11193:36;11175:2;11165:8;11162:16;11157:2;11151:4;11148:12;11144:35;11128:111;11125:246;;;11281:8;11275:4;11271:19;11262:28;;11316:3;11309:5;11306:14;11303:40;;;11323:18;;:::i;:::-;11303:40;11356:5;;11125:246;11396:42;11434:3;11424:8;11418:4;11415:1;11396:42;:::i;:::-;11381:57;;;;11470:4;11465:3;11461:14;11454:5;11451:25;11448:51;;;11479:18;;:::i;:::-;11448:51;11528:4;11521:5;11517:16;11508:25;;10466:1073;;;;;;:::o;11545:281::-;11603:5;11627:23;11645:4;11627:23;:::i;:::-;11619:31;;11671:25;11687:8;11671:25;:::i;:::-;11659:37;;11715:104;11752:66;11742:8;11736:4;11715:104;:::i;:::-;11706:113;;11545:281;;;;:::o;11832:410::-;11872:7;11895:20;11913:1;11895:20;:::i;:::-;11890:25;;11929:20;11947:1;11929:20;:::i;:::-;11924:25;;11984:1;11981;11977:9;12006:30;12024:11;12006:30;:::i;:::-;11995:41;;12185:1;12176:7;12172:15;12169:1;12166:22;12146:1;12139:9;12119:83;12096:139;;12215:18;;:::i;:::-;12096:139;11880:362;11832:410;;;;:::o;12248:85::-;12293:7;12322:5;12311:16;;12248:85;;;:::o;12339:101::-;12375:7;12415:18;12408:5;12404:30;12393:41;;12339:101;;;:::o;12446:60::-;12474:3;12495:5;12488:12;;12446:60;;;:::o;12512:156::-;12569:9;12602:60;12619:42;12628:32;12654:5;12628:32;:::i;:::-;12619:42;:::i;:::-;12602:60;:::i;:::-;12589:73;;12512:156;;;:::o;12674:145::-;12768:44;12806:5;12768:44;:::i;:::-;12763:3;12756:57;12674:145;;:::o;12825:236::-;12925:4;12963:2;12952:9;12948:18;12940:26;;12976:78;13051:1;13040:9;13036:17;13027:6;12976:78;:::i;:::-;12825:236;;;;:::o;13067:442::-;13216:4;13254:2;13243:9;13239:18;13231:26;;13267:71;13335:1;13324:9;13320:17;13311:6;13267:71;:::i;:::-;13348:72;13416:2;13405:9;13401:18;13392:6;13348:72;:::i;:::-;13430;13498:2;13487:9;13483:18;13474:6;13430:72;:::i;:::-;13067:442;;;;;;:::o;13515:180::-;13563:77;13560:1;13553:88;13660:4;13657:1;13650:15;13684:4;13681:1;13674:15;13701:185;13741:1;13758:20;13776:1;13758:20;:::i;:::-;13753:25;;13792:20;13810:1;13792:20;:::i;:::-;13787:25;;13831:1;13821:35;;13836:18;;:::i;:::-;13821:35;13878:1;13875;13871:9;13866:14;;13701:185;;;;:::o;13892:194::-;13932:4;13952:20;13970:1;13952:20;:::i;:::-;13947:25;;13986:20;14004:1;13986:20;:::i;:::-;13981:25;;14030:1;14027;14023:9;14015:17;;14054:1;14048:4;14045:11;14042:37;;;14059:18;;:::i;:::-;14042:37;13892:194;;;;:::o;14092:180::-;14140:77;14137:1;14130:88;14237:4;14234:1;14227:15;14261:4;14258:1;14251:15;14278:141;14327:4;14350:3;14342:11;;14373:3;14370:1;14363:14;14407:4;14404:1;14394:18;14386:26;;14278:141;;;:::o;14425:93::-;14462:6;14509:2;14504;14497:5;14493:14;14489:23;14479:33;;14425:93;;;:::o;14524:107::-;14568:8;14618:5;14612:4;14608:16;14587:37;;14524:107;;;;:::o;14637:393::-;14706:6;14756:1;14744:10;14740:18;14779:97;14809:66;14798:9;14779:97;:::i;:::-;14897:39;14927:8;14916:9;14897:39;:::i;:::-;14885:51;;14969:4;14965:9;14958:5;14954:21;14945:30;;15018:4;15008:8;15004:19;14997:5;14994:30;14984:40;;14713:317;;14637:393;;;;;:::o;15036:142::-;15086:9;15119:53;15137:34;15146:24;15164:5;15146:24;:::i;:::-;15137:34;:::i;:::-;15119:53;:::i;:::-;15106:66;;15036:142;;;:::o;15184:75::-;15227:3;15248:5;15241:12;;15184:75;;;:::o;15265:269::-;15375:39;15406:7;15375:39;:::i;:::-;15436:91;15485:41;15509:16;15485:41;:::i;:::-;15477:6;15470:4;15464:11;15436:91;:::i;:::-;15430:4;15423:105;15341:193;15265:269;;;:::o;15540:73::-;15585:3;15540:73;:::o;15619:189::-;15696:32;;:::i;:::-;15737:65;15795:6;15787;15781:4;15737:65;:::i;:::-;15672:136;15619:189;;:::o;15814:186::-;15874:120;15891:3;15884:5;15881:14;15874:120;;;15945:39;15982:1;15975:5;15945:39;:::i;:::-;15918:1;15911:5;15907:13;15898:22;;15874:120;;;15814:186;;:::o;16006:543::-;16107:2;16102:3;16099:11;16096:446;;;16141:38;16173:5;16141:38;:::i;:::-;16225:29;16243:10;16225:29;:::i;:::-;16215:8;16211:44;16408:2;16396:10;16393:18;16390:49;;;16429:8;16414:23;;16390:49;16452:80;16508:22;16526:3;16508:22;:::i;:::-;16498:8;16494:37;16481:11;16452:80;:::i;:::-;16111:431;;16096:446;16006:543;;;:::o;16555:117::-;16609:8;16659:5;16653:4;16649:16;16628:37;;16555:117;;;;:::o;16678:169::-;16722:6;16755:51;16803:1;16799:6;16791:5;16788:1;16784:13;16755:51;:::i;:::-;16751:56;16836:4;16830;16826:15;16816:25;;16729:118;16678:169;;;;:::o;16852:295::-;16928:4;17074:29;17099:3;17093:4;17074:29;:::i;:::-;17066:37;;17136:3;17133:1;17129:11;17123:4;17120:21;17112:29;;16852:295;;;;:::o;17152:1395::-;17269:37;17302:3;17269:37;:::i;:::-;17371:18;17363:6;17360:30;17357:56;;;17393:18;;:::i;:::-;17357:56;17437:38;17469:4;17463:11;17437:38;:::i;:::-;17522:67;17582:6;17574;17568:4;17522:67;:::i;:::-;17616:1;17640:4;17627:17;;17672:2;17664:6;17661:14;17689:1;17684:618;;;;18346:1;18363:6;18360:77;;;18412:9;18407:3;18403:19;18397:26;18388:35;;18360:77;18463:67;18523:6;18516:5;18463:67;:::i;:::-;18457:4;18450:81;18319:222;17654:887;;17684:618;17736:4;17732:9;17724:6;17720:22;17770:37;17802:4;17770:37;:::i;:::-;17829:1;17843:208;17857:7;17854:1;17851:14;17843:208;;;17936:9;17931:3;17927:19;17921:26;17913:6;17906:42;17987:1;17979:6;17975:14;17965:24;;18034:2;18023:9;18019:18;18006:31;;17880:4;17877:1;17873:12;17868:17;;17843:208;;;18079:6;18070:7;18067:19;18064:179;;;18137:9;18132:3;18128:19;18122:26;18180:48;18222:4;18214:6;18210:17;18199:9;18180:48;:::i;:::-;18172:6;18165:64;18087:156;18064:179;18289:1;18285;18277:6;18273:14;18269:22;18263:4;18256:36;17691:611;;;17654:887;;17244:1303;;;17152:1395;;:::o;18553:191::-;18593:3;18612:20;18630:1;18612:20;:::i;:::-;18607:25;;18646:20;18664:1;18646:20;:::i;:::-;18641:25;;18689:1;18686;18682:9;18675:16;;18710:3;18707:1;18704:10;18701:36;;;18717:18;;:::i;:::-;18701:36;18553:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1577000",
								"executionCost": "1650",
								"totalCost": "1578650"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2970",
								"charityFee()": "2513",
								"charityWallet()": "2550",
								"decimals()": "405",
								"feeDivisor()": "2447",
								"initialize(address,uint256,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2634",
								"renounceOwnership()": "infinite",
								"setCharityFee(uint256)": "infinite",
								"setCharityWallet(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2553",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 289,
									"end": 2065,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 2065,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e13c0ee5c791fa29f8d4757dd7f107aaa282faada23e581b4c71a516761981aa64736f6c634300081a0033",
									".code": [
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "7A1AC61E"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "9A36F932"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "9A36F932"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "ECFCA899"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "7A1AC61E"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "7B208769"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "30563BD7"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "20C7C596"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 2065,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1317,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1129,
											"end": 1311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1129,
											"end": 1311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 655,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 655,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 371,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 371,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 371,
											"end": 399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 399,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 371,
											"end": 399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 371,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 371,
											"end": 399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 399,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 559,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 559,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 559,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 559,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 559,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 584,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 559,
											"end": 584,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 559,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 559,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 584,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 450,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 450,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 450,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 450,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 450,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 450,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 450,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 450,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2786,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2811,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5315,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5315,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5337,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5337,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5389,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3992,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3992,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1413,
											"end": 1423,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1409,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1423,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1423,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1390,
											"end": 1440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1390,
											"end": 1440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1463,
											"end": 1474,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1450,
											"end": 1474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1474,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1474,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6075,
											"end": 6079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6109,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6109,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6153,
											"end": 6160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6162,
											"end": 6167,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6131,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6194,
											"end": 6196,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6198,
											"end": 6203,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6178,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1216,
											"end": 1244,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1230,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1216,
											"end": 1244,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1244,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1208,
											"end": 1264,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1208,
											"end": 1264,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1304,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4215,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4215,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4361746E69700000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4341544E49500000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 773,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 773,
											"end": 805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 773,
											"end": 805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 814,
											"end": 827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 840,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 814,
											"end": 840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 814,
											"end": 840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 849,
											"end": 870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 864,
											"end": 869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 849,
											"end": 863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 849,
											"end": 870,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 849,
											"end": 870,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 849,
											"end": 870,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 897,
											"end": 911,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 881,
											"end": 894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 881,
											"end": 911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 934,
											"end": 945,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 921,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 921,
											"end": 945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 921,
											"end": 945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 921,
											"end": 945,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 921,
											"end": 945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 968,
											"end": 973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 955,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 955,
											"end": 973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 955,
											"end": 973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 955,
											"end": 973,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 955,
											"end": 973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1068,
											"end": 1078,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1104,
											"end": 1114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1104,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1104,
											"end": 1114,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1104,
											"end": 1114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1104,
											"end": 1114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1098,
											"end": 1114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1098,
											"end": 1114,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1098,
											"end": 1114,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1098,
											"end": 1114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1094,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1080,
											"end": 1115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1080,
											"end": 1115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1080,
											"end": 1115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1062,
											"end": 1116,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1116,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1062,
											"end": 1116,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 763,
											"end": 1123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 655,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 371,
											"end": 399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 371,
											"end": 399,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 371,
											"end": 399,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 371,
											"end": 399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3070,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3070,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 559,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 559,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 584,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 559,
											"end": 584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4573,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4573,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4605,
											"end": 4610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4595,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4832,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4832,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4895,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 450,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 450,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 450,
											"end": 475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 450,
											"end": 475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 2,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10025,
											"end": 10153,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 10025,
											"end": 10153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10109,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10118,
											"end": 10123,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10125,
											"end": 10132,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10134,
											"end": 10139,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10141,
											"end": 10145,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10109,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10109,
											"end": 10146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10109,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10109,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10025,
											"end": 10153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10025,
											"end": 10153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10025,
											"end": 10153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10025,
											"end": 10153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11769,
											"end": 12246,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11769,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11868,
											"end": 11892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11895,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 11905,
											"end": 11910,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11912,
											"end": 11919,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11895,
											"end": 11904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 11895,
											"end": 11920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11895,
											"end": 11920,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 11895,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11868,
											"end": 11920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11868,
											"end": 11920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11954,
											"end": 11971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11934,
											"end": 11950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11934,
											"end": 11971,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11930,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 11930,
											"end": 12240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12010,
											"end": 12015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11991,
											"end": 12007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11991,
											"end": 12015,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11987,
											"end": 12117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11987,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11987,
											"end": 12117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12069,
											"end": 12076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12078,
											"end": 12094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12096,
											"end": 12101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 12042,
											"end": 12102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12042,
											"end": 12102,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11987,
											"end": 12117,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11987,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12158,
											"end": 12215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 12167,
											"end": 12172,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12181,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12207,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12183,
											"end": 12199,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12183,
											"end": 12207,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12158,
											"end": 12166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 12158,
											"end": 12215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12158,
											"end": 12215,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 12158,
											"end": 12215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11930,
											"end": 12240,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 11930,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11858,
											"end": 12246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11769,
											"end": 12246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11769,
											"end": 12246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11769,
											"end": 12246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11769,
											"end": 12246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 2063,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1487,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1659,
											"end": 1676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1713,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1703,
											"end": 1713,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1689,
											"end": 1699,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1689,
											"end": 1699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1680,
											"end": 1699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1680,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1680,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1679,
											"end": 1713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1679,
											"end": 1713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1713,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1679,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1659,
											"end": 1713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1659,
											"end": 1713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1784,
											"end": 1806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1827,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1809,
											"end": 1827,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1827,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1809,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1827,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1809,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1784,
											"end": 1827,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1784,
											"end": 1827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 1936,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1888,
											"end": 1937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1937,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1888,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2055,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2006,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2056,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2006,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 2063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 2063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 2063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 2063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 2063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 2063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2407,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2384,
											"end": 2422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8741,
											"end": 8957,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8741,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8819,
											"end": 8840,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8819,
											"end": 8840,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8819,
											"end": 8826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8819,
											"end": 8840,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8819,
											"end": 8840,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8819,
											"end": 8840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8815,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 8815,
											"end": 8906,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8892,
											"end": 8893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 8863,
											"end": 8895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8815,
											"end": 8906,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 8815,
											"end": 8906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8915,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 8931,
											"end": 8932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8935,
											"end": 8942,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8944,
											"end": 8949,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8915,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8915,
											"end": 8950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8915,
											"end": 8950,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 8915,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 8957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 8957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 8957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11487,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 11000,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11108,
											"end": 11130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 11133,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11133,
											"end": 11151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11108,
											"end": 11151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11108,
											"end": 11151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11182,
											"end": 11183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11165,
											"end": 11170,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11161,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 11161,
											"end": 11250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 11207,
											"end": 11239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11207,
											"end": 11239,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11161,
											"end": 11250,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 11161,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11282,
											"end": 11283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11284,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11263,
											"end": 11284,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11263,
											"end": 11270,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11263,
											"end": 11284,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11263,
											"end": 11284,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11263,
											"end": 11284,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11259,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 11259,
											"end": 11349,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11335,
											"end": 11336,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 11307,
											"end": 11338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11259,
											"end": 11349,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 11259,
											"end": 11349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11390,
											"end": 11395,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11371,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11358,
											"end": 11371,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11377,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11358,
											"end": 11378,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11379,
											"end": 11386,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11358,
											"end": 11387,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11395,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11358,
											"end": 11395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11409,
											"end": 11418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11405,
											"end": 11481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11405,
											"end": 11481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 11405,
											"end": 11481,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11455,
											"end": 11462,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11448,
											"end": 11453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11464,
											"end": 11469,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 11439,
											"end": 11470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11470,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11405,
											"end": 11481,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 11405,
											"end": 11481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11098,
											"end": 11487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11000,
											"end": 11487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11000,
											"end": 11487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11000,
											"end": 11487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11000,
											"end": 11487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11000,
											"end": 11487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6605,
											"end": 6913,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6605,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 6713,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6714,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6696,
											"end": 6700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6696,
											"end": 6714,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6696,
											"end": 6714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6692,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6692,
											"end": 6778,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 6737,
											"end": 6767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6767,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6692,
											"end": 6778,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6692,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6807,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6791,
											"end": 6807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6807,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6791,
											"end": 6807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6787,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6787,
											"end": 6873,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6859,
											"end": 6860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 6830,
											"end": 6862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6862,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6787,
											"end": 6873,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6787,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6890,
											"end": 6894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6896,
											"end": 6898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6882,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6882,
											"end": 6906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6882,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6605,
											"end": 6913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6605,
											"end": 6913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6605,
											"end": 6913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6605,
											"end": 6913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2572,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2572,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2600,
											"end": 2615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2625,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 8398,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7228,
											"end": 8398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7313,
											"end": 7335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7338,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7338,
											"end": 7356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7313,
											"end": 7356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7313,
											"end": 7356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7370,
											"end": 7374,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7366,
											"end": 7912,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7520,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7506,
											"end": 7520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 7506,
											"end": 7529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7506,
											"end": 7529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7366,
											"end": 7912,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7912,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7366,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7560,
											"end": 7579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7594,
											"end": 7598,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7560,
											"end": 7599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7560,
											"end": 7599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7631,
											"end": 7636,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7617,
											"end": 7628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7617,
											"end": 7636,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7613,
											"end": 7728,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7613,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 7613,
											"end": 7728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7688,
											"end": 7692,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7694,
											"end": 7705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7712,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7663,
											"end": 7713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7613,
											"end": 7728,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 7613,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7879,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7848,
											"end": 7859,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7860,
											"end": 7864,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7848,
											"end": 7865,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7887,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7546,
											"end": 7912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7912,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7366,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7942,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7926,
											"end": 7942,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 7928,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 7942,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7926,
											"end": 7942,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7926,
											"end": 7942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7922,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7922,
											"end": 8351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8107,
											"end": 8112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8103,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8089,
											"end": 8103,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7922,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 7922,
											"end": 8351,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7922,
											"end": 8351,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7922,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8321,
											"end": 8326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8302,
											"end": 8313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8314,
											"end": 8316,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8302,
											"end": 8326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8326,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8326,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7922,
											"end": 8351,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 7922,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8381,
											"end": 8383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8375,
											"end": 8379,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8385,
											"end": 8390,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 8366,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7303,
											"end": 8398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 8398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 8398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 8398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 8398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4710,
											"end": 4716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4747,
											"end": 4756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4738,
											"end": 4745,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4734,
											"end": 4757,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4730,
											"end": 4762,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4765,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 4955,
											"end": 4962,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4935,
											"end": 4944,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 4953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4910,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5065,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5054,
											"end": 5059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5066,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 5177,
											"end": 5182,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5161,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5149,
											"end": 5184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5078,
											"end": 5190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5285,
											"end": 5289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5325,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5312,
											"end": 5321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 5400,
											"end": 5401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5385,
											"end": 5402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 5336,
											"end": 5403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 6035,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5416,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5493,
											"end": 5499,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 6010,
											"end": 6017,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6001,
											"end": 6007,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 5965,
											"end": 6018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5955,
											"end": 6018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5955,
											"end": 6018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5910,
											"end": 6028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 6035,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 6035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 6035,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 6035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 6035,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 6035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6159,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 6041,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6128,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 6146,
											"end": 6151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6128,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 6128,
											"end": 6152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6128,
											"end": 6152,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 6128,
											"end": 6152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6123,
											"end": 6126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6153,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6387,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6165,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6258,
											"end": 6262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6296,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6285,
											"end": 6294,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6281,
											"end": 6299,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6273,
											"end": 6299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6273,
											"end": 6299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 6377,
											"end": 6378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6366,
											"end": 6375,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6362,
											"end": 6379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6353,
											"end": 6359,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 6309,
											"end": 6380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6380,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 6309,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6387,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6387,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6867,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6393,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6467,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6518,
											"end": 6520,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6506,
											"end": 6515,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6497,
											"end": 6504,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6493,
											"end": 6516,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6489,
											"end": 6521,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 6524,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 6524,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6603,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 6524,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 6486,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6644,
											"end": 6645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 6714,
											"end": 6721,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6694,
											"end": 6703,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6669,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6659,
											"end": 6722,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6659,
											"end": 6722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6773,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6822,
											"end": 6831,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6818,
											"end": 6840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6797,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6787,
											"end": 6850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6787,
											"end": 6850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6742,
											"end": 6860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6867,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6867,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6921,
											"end": 6998,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6999,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7008,
											"end": 7023,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7042,
											"end": 7046,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7379,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7059,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7103,
											"end": 7109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7140,
											"end": 7141,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7134,
											"end": 7138,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7130,
											"end": 7142,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7187,
											"end": 7188,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7181,
											"end": 7185,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7177,
											"end": 7189,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7198,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 7198,
											"end": 7279,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7264,
											"end": 7268,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7252,
											"end": 7269,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7242,
											"end": 7269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7242,
											"end": 7269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7198,
											"end": 7279,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 7198,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7326,
											"end": 7328,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7318,
											"end": 7324,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7315,
											"end": 7329,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7330,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 7289,
											"end": 7373,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 7345,
											"end": 7363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7373,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 7289,
											"end": 7373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7110,
											"end": 7379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7547,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 7385,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7525,
											"end": 7539,
											"name": "PUSH",
											"source": 8,
											"value": "46656520746F6F20686967680000000000000000000000000000000000000000"
										},
										{
											"begin": 7521,
											"end": 7522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7519,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7502,
											"end": 7540,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7385,
											"end": 7547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7919,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 7553,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7695,
											"end": 7698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 7780,
											"end": 7782,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 7775,
											"end": 7778,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7716,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 7716,
											"end": 7783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7716,
											"end": 7783,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 7716,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7709,
											"end": 7783,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7709,
											"end": 7783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7792,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 7881,
											"end": 7884,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7792,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 7792,
											"end": 7885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7792,
											"end": 7885,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 7792,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7910,
											"end": 7912,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7905,
											"end": 7908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7901,
											"end": 7913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7894,
											"end": 7913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7894,
											"end": 7913,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7919,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 8344,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 7925,
											"end": 8344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8129,
											"end": 8131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8127,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8114,
											"end": 8132,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8172,
											"end": 8176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8168,
											"end": 8188,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8165,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8162,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8149,
											"end": 8166,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8142,
											"end": 8189,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8206,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 8332,
											"end": 8336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8206,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 8206,
											"end": 8337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8206,
											"end": 8337,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 8206,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8198,
											"end": 8337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8198,
											"end": 8337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 8344,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 8344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 8344,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 8344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8515,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 8350,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 8507,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 8486,
											"end": 8487,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8484,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8467,
											"end": 8508,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8521,
											"end": 8887,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 8521,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8663,
											"end": 8666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 8748,
											"end": 8750,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 8743,
											"end": 8746,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 8684,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8751,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 8684,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8677,
											"end": 8751,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8677,
											"end": 8751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8760,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 8849,
											"end": 8852,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8760,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 8760,
											"end": 8853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8760,
											"end": 8853,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 8760,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8878,
											"end": 8880,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8873,
											"end": 8876,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 8881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 8881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8521,
											"end": 8887,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8521,
											"end": 8887,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8521,
											"end": 8887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8521,
											"end": 8887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8893,
											"end": 9312,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 8893,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9059,
											"end": 9063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9099,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9086,
											"end": 9095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9074,
											"end": 9100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9074,
											"end": 9100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9146,
											"end": 9155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9136,
											"end": 9156,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9132,
											"end": 9133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9121,
											"end": 9130,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9117,
											"end": 9134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9110,
											"end": 9157,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9174,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 9300,
											"end": 9304,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9174,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 9174,
											"end": 9305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9174,
											"end": 9305,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 9174,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9166,
											"end": 9305,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9166,
											"end": 9305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8893,
											"end": 9312,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8893,
											"end": 9312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8893,
											"end": 9312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8893,
											"end": 9312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9318,
											"end": 9498,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 9318,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9366,
											"end": 9443,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9356,
											"end": 9444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9463,
											"end": 9467,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 9460,
											"end": 9461,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9453,
											"end": 9468,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9487,
											"end": 9491,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9484,
											"end": 9485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9477,
											"end": 9492,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9504,
											"end": 9606,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 9504,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9546,
											"end": 9554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9593,
											"end": 9598,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9590,
											"end": 9591,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9586,
											"end": 9599,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9504,
											"end": 9606,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9504,
											"end": 9606,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9504,
											"end": 9606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9504,
											"end": 9606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 10460,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 9612,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9673,
											"end": 9678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9680,
											"end": 9684,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9704,
											"end": 9710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9710,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9728,
											"end": 9733,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9719,
											"end": 9733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9719,
											"end": 9733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9742,
											"end": 10454,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 9742,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9763,
											"end": 9764,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9753,
											"end": 9761,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9750,
											"end": 9765,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9742,
											"end": 10454,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9742,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 9742,
											"end": 10454,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9858,
											"end": 9862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9853,
											"end": 9856,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9849,
											"end": 9863,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9843,
											"end": 9847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9864,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9837,
											"end": 9887,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9837,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 9837,
											"end": 9887,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9867,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 9867,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 9867,
											"end": 9885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9867,
											"end": 9885,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 9867,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9837,
											"end": 9887,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 9837,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9917,
											"end": 9918,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9907,
											"end": 9915,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9903,
											"end": 9919,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 10351,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 9900,
											"end": 10351,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10332,
											"end": 10336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10325,
											"end": 10330,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10337,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 10351,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 9900,
											"end": 10351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10382,
											"end": 10386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10376,
											"end": 10380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10372,
											"end": 10387,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10412,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 10435,
											"end": 10443,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10412,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 10412,
											"end": 10444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10412,
											"end": 10444,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 10412,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10400,
											"end": 10444,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10400,
											"end": 10444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9742,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 9742,
											"end": 10454,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9742,
											"end": 10454,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 9742,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 10460,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 10460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 10460,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 10460,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 10460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 10460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 10460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 10460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 11539,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 10466,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10520,
											"end": 10525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10711,
											"end": 10719,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10701,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 10701,
											"end": 10741,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10723,
											"end": 10733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10723,
											"end": 10733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10734,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 10734,
											"end": 10739,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10701,
											"end": 10741,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 10701,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10760,
											"end": 10764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10750,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 10750,
											"end": 10786,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10777,
											"end": 10778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10768,
											"end": 10778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10768,
											"end": 10778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10779,
											"end": 10784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 10779,
											"end": 10784,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10750,
											"end": 10786,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 10750,
											"end": 10786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10846,
											"end": 10850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10894,
											"end": 10895,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10889,
											"end": 10916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10889,
											"end": 10916,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10889,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 10889,
											"end": 10916,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 10931,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10925,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10925,
											"end": 11116,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10925,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 10925,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 10839,
											"end": 11116,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10889,
											"end": 10916,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 10889,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10907,
											"end": 10908,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10898,
											"end": 10908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10898,
											"end": 10908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10909,
											"end": 10914,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10909,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 10909,
											"end": 10914,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10925,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 10925,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10970,
											"end": 10973,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 10960,
											"end": 10968,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10974,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10997,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 10954,
											"end": 10997,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10977,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 10977,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 10977,
											"end": 10995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10977,
											"end": 10995,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 10977,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10997,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 10954,
											"end": 10997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11026,
											"end": 11034,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11023,
											"end": 11024,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 11019,
											"end": 11035,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11061,
											"end": 11064,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11054,
											"end": 11059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11051,
											"end": 11065,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11048,
											"end": 11088,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11048,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 11048,
											"end": 11088,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 11068,
											"end": 11086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11048,
											"end": 11088,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 11048,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11101,
											"end": 11106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11101,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 11101,
											"end": 11106,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 10839,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11225,
											"end": 11227,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11215,
											"end": 11223,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11212,
											"end": 11228,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11206,
											"end": 11209,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 11200,
											"end": 11204,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11197,
											"end": 11210,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11193,
											"end": 11229,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11175,
											"end": 11177,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 11165,
											"end": 11173,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11162,
											"end": 11178,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11157,
											"end": 11159,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 11151,
											"end": 11155,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11148,
											"end": 11160,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11179,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11128,
											"end": 11239,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11371,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 11125,
											"end": 11371,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11281,
											"end": 11289,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11275,
											"end": 11279,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11271,
											"end": 11290,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11262,
											"end": 11290,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11262,
											"end": 11290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11316,
											"end": 11319,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11309,
											"end": 11314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11320,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11303,
											"end": 11343,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11303,
											"end": 11343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 11303,
											"end": 11343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 11323,
											"end": 11341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11303,
											"end": 11343,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 11303,
											"end": 11343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 11356,
											"end": 11361,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11371,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 11125,
											"end": 11371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11396,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 11434,
											"end": 11437,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11424,
											"end": 11432,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11418,
											"end": 11422,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11415,
											"end": 11416,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 11396,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 11396,
											"end": 11438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11396,
											"end": 11438,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 11396,
											"end": 11438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11381,
											"end": 11438,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11381,
											"end": 11438,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11381,
											"end": 11438,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11381,
											"end": 11438,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11465,
											"end": 11468,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11461,
											"end": 11475,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11454,
											"end": 11459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11451,
											"end": 11476,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 11479,
											"end": 11497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11528,
											"end": 11532,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11521,
											"end": 11526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11517,
											"end": 11533,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11508,
											"end": 11533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11508,
											"end": 11533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 11539,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 10466,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 11539,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 11539,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 11539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 11539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 11539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 11539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11826,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 11545,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11603,
											"end": 11608,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11627,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 11645,
											"end": 11649,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11627,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 11627,
											"end": 11650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11627,
											"end": 11650,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 11627,
											"end": 11650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11619,
											"end": 11650,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11619,
											"end": 11650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11671,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 11687,
											"end": 11695,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11671,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 11671,
											"end": 11696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11671,
											"end": 11696,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 11671,
											"end": 11696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11696,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11715,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11742,
											"end": 11750,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11736,
											"end": 11740,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11715,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 11715,
											"end": 11819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11715,
											"end": 11819,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 11715,
											"end": 11819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11706,
											"end": 11819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11706,
											"end": 11819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11826,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11832,
											"end": 12242,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 11832,
											"end": 12242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11872,
											"end": 11879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11895,
											"end": 11915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 11913,
											"end": 11914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11895,
											"end": 11915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 11895,
											"end": 11915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11895,
											"end": 11915,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 11895,
											"end": 11915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11890,
											"end": 11915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11890,
											"end": 11915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11929,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 11947,
											"end": 11948,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11929,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 11929,
											"end": 11949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11929,
											"end": 11949,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 11929,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11924,
											"end": 11949,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11924,
											"end": 11949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 11985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11981,
											"end": 11982,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 11986,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12006,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 12024,
											"end": 12035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12006,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 12006,
											"end": 12036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12006,
											"end": 12036,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 12006,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11995,
											"end": 12036,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11995,
											"end": 12036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12176,
											"end": 12183,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12172,
											"end": 12187,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12169,
											"end": 12170,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12166,
											"end": 12188,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12146,
											"end": 12147,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12139,
											"end": 12148,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12119,
											"end": 12202,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 12096,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 12096,
											"end": 12235,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 12215,
											"end": 12233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12096,
											"end": 12235,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 12096,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11880,
											"end": 12242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11832,
											"end": 12242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11832,
											"end": 12242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11832,
											"end": 12242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11832,
											"end": 12242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11832,
											"end": 12242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12248,
											"end": 12333,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 12248,
											"end": 12333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12293,
											"end": 12300,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12322,
											"end": 12327,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12311,
											"end": 12327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12311,
											"end": 12327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12248,
											"end": 12333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12248,
											"end": 12333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12248,
											"end": 12333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12248,
											"end": 12333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12440,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 12339,
											"end": 12440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12375,
											"end": 12382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12433,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12408,
											"end": 12413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12404,
											"end": 12434,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12393,
											"end": 12434,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12393,
											"end": 12434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12446,
											"end": 12506,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 12446,
											"end": 12506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12474,
											"end": 12477,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12495,
											"end": 12500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12446,
											"end": 12506,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12446,
											"end": 12506,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12446,
											"end": 12506,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12446,
											"end": 12506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12512,
											"end": 12668,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 12512,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12569,
											"end": 12578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12602,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 12619,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 12628,
											"end": 12660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 12654,
											"end": 12659,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12628,
											"end": 12660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 12628,
											"end": 12660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12628,
											"end": 12660,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 12628,
											"end": 12660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12619,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 12619,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12619,
											"end": 12661,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 12619,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12602,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 12602,
											"end": 12662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12602,
											"end": 12662,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 12602,
											"end": 12662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12589,
											"end": 12662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12589,
											"end": 12662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12512,
											"end": 12668,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12512,
											"end": 12668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12512,
											"end": 12668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12512,
											"end": 12668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12674,
											"end": 12819,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 12674,
											"end": 12819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12768,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 12806,
											"end": 12811,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12768,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 12768,
											"end": 12812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12768,
											"end": 12812,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 12768,
											"end": 12812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12763,
											"end": 12766,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12756,
											"end": 12813,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12674,
											"end": 12819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12674,
											"end": 12819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12674,
											"end": 12819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12825,
											"end": 13061,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 12825,
											"end": 13061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12925,
											"end": 12929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 12965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12952,
											"end": 12961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12948,
											"end": 12966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12940,
											"end": 12966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12940,
											"end": 12966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12976,
											"end": 13054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 13051,
											"end": 13052,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13040,
											"end": 13049,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13036,
											"end": 13053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13027,
											"end": 13033,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12976,
											"end": 13054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 12976,
											"end": 13054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12976,
											"end": 13054,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 12976,
											"end": 13054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12825,
											"end": 13061,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12825,
											"end": 13061,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12825,
											"end": 13061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12825,
											"end": 13061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12825,
											"end": 13061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13067,
											"end": 13509,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 13067,
											"end": 13509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13216,
											"end": 13220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13254,
											"end": 13256,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13243,
											"end": 13252,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13239,
											"end": 13257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13231,
											"end": 13257,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13231,
											"end": 13257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13267,
											"end": 13338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 13335,
											"end": 13336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13324,
											"end": 13333,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13320,
											"end": 13337,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13311,
											"end": 13317,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13267,
											"end": 13338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 13267,
											"end": 13338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13267,
											"end": 13338,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 13267,
											"end": 13338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13348,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 13416,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13405,
											"end": 13414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13401,
											"end": 13419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13392,
											"end": 13398,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13348,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 13348,
											"end": 13420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13348,
											"end": 13420,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 13348,
											"end": 13420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13430,
											"end": 13502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 13498,
											"end": 13500,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13487,
											"end": 13496,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13483,
											"end": 13501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13474,
											"end": 13480,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13430,
											"end": 13502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 13430,
											"end": 13502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13430,
											"end": 13502,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 13430,
											"end": 13502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13067,
											"end": 13509,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13067,
											"end": 13509,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13067,
											"end": 13509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13067,
											"end": 13509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13067,
											"end": 13509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13067,
											"end": 13509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13067,
											"end": 13509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13515,
											"end": 13695,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 13515,
											"end": 13695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13563,
											"end": 13640,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13560,
											"end": 13561,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13553,
											"end": 13641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13660,
											"end": 13664,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 13657,
											"end": 13658,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13650,
											"end": 13665,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13684,
											"end": 13688,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13681,
											"end": 13682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 13886,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 13701,
											"end": 13886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13741,
											"end": 13742,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13758,
											"end": 13778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 13776,
											"end": 13777,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13758,
											"end": 13778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 13758,
											"end": 13778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13758,
											"end": 13778,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 13758,
											"end": 13778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13753,
											"end": 13778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13753,
											"end": 13778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13792,
											"end": 13812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 13810,
											"end": 13811,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13792,
											"end": 13812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 13792,
											"end": 13812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13792,
											"end": 13812,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 13792,
											"end": 13812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13787,
											"end": 13812,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13787,
											"end": 13812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13831,
											"end": 13832,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13821,
											"end": 13856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 13821,
											"end": 13856,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13836,
											"end": 13854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 13836,
											"end": 13854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 13836,
											"end": 13854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13836,
											"end": 13854,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 13836,
											"end": 13854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13821,
											"end": 13856,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 13821,
											"end": 13856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 13879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13875,
											"end": 13876,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13866,
											"end": 13880,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13866,
											"end": 13880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 13886,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 13886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 13886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 13886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 13886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13892,
											"end": 14086,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 13892,
											"end": 14086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13932,
											"end": 13936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13952,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 13970,
											"end": 13971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13952,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 13952,
											"end": 13972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13952,
											"end": 13972,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 13952,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13947,
											"end": 13972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13947,
											"end": 13972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13986,
											"end": 14006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 14004,
											"end": 14005,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13986,
											"end": 14006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 13986,
											"end": 14006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13986,
											"end": 14006,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 13986,
											"end": 14006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13981,
											"end": 14006,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13981,
											"end": 14006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14030,
											"end": 14031,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14027,
											"end": 14028,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14023,
											"end": 14032,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14015,
											"end": 14032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14015,
											"end": 14032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14054,
											"end": 14055,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14048,
											"end": 14052,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14045,
											"end": 14056,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14079,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 14042,
											"end": 14079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14059,
											"end": 14077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 14059,
											"end": 14077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 14059,
											"end": 14077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14059,
											"end": 14077,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 14059,
											"end": 14077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14079,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 14042,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13892,
											"end": 14086,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13892,
											"end": 14086,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13892,
											"end": 14086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13892,
											"end": 14086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13892,
											"end": 14086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14092,
											"end": 14272,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 14092,
											"end": 14272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14140,
											"end": 14217,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14137,
											"end": 14138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14130,
											"end": 14218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14237,
											"end": 14241,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14227,
											"end": 14242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14261,
											"end": 14265,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14258,
											"end": 14259,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14251,
											"end": 14266,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14278,
											"end": 14419,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 14278,
											"end": 14419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14327,
											"end": 14331,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14350,
											"end": 14353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14342,
											"end": 14353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14342,
											"end": 14353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14373,
											"end": 14376,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14370,
											"end": 14371,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14407,
											"end": 14411,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14404,
											"end": 14405,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14394,
											"end": 14412,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 14386,
											"end": 14412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14386,
											"end": 14412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14278,
											"end": 14419,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14278,
											"end": 14419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14278,
											"end": 14419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14278,
											"end": 14419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14425,
											"end": 14518,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 14425,
											"end": 14518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14462,
											"end": 14468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14509,
											"end": 14511,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14504,
											"end": 14506,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14497,
											"end": 14502,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14493,
											"end": 14507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14489,
											"end": 14512,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14479,
											"end": 14512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14479,
											"end": 14512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14425,
											"end": 14518,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14425,
											"end": 14518,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14425,
											"end": 14518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14425,
											"end": 14518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14524,
											"end": 14631,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 14524,
											"end": 14631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14568,
											"end": 14576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14618,
											"end": 14623,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14612,
											"end": 14616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14608,
											"end": 14624,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 14587,
											"end": 14624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14587,
											"end": 14624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14524,
											"end": 14631,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14524,
											"end": 14631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14524,
											"end": 14631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14524,
											"end": 14631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14524,
											"end": 14631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15030,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 14637,
											"end": 15030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14756,
											"end": 14757,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 14744,
											"end": 14754,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14740,
											"end": 14758,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 14809,
											"end": 14875,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14798,
											"end": 14807,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 14779,
											"end": 14876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 14876,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 14779,
											"end": 14876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14897,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 14927,
											"end": 14935,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14916,
											"end": 14925,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14897,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 14897,
											"end": 14936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14897,
											"end": 14936,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 14897,
											"end": 14936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14885,
											"end": 14936,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 14885,
											"end": 14936,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14969,
											"end": 14973,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14965,
											"end": 14974,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 14963,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14954,
											"end": 14975,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14945,
											"end": 14975,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14945,
											"end": 14975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15018,
											"end": 15022,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15008,
											"end": 15016,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15004,
											"end": 15023,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14997,
											"end": 15002,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14994,
											"end": 15024,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 14984,
											"end": 15024,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14984,
											"end": 15024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14713,
											"end": 15030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14713,
											"end": 15030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15030,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15030,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15036,
											"end": 15178,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 15036,
											"end": 15178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15086,
											"end": 15095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15119,
											"end": 15172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 15137,
											"end": 15171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 15146,
											"end": 15170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 15164,
											"end": 15169,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15146,
											"end": 15170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 15146,
											"end": 15170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15146,
											"end": 15170,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 15146,
											"end": 15170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15137,
											"end": 15171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 15137,
											"end": 15171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15137,
											"end": 15171,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 15137,
											"end": 15171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15119,
											"end": 15172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 15119,
											"end": 15172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15119,
											"end": 15172,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 15119,
											"end": 15172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15106,
											"end": 15172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15106,
											"end": 15172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15036,
											"end": 15178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15036,
											"end": 15178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15036,
											"end": 15178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15036,
											"end": 15178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15184,
											"end": 15259,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 15184,
											"end": 15259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15227,
											"end": 15230,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15248,
											"end": 15253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15241,
											"end": 15253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15241,
											"end": 15253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15184,
											"end": 15259,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15184,
											"end": 15259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15184,
											"end": 15259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15184,
											"end": 15259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15265,
											"end": 15534,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 15265,
											"end": 15534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15375,
											"end": 15414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 15406,
											"end": 15413,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15375,
											"end": 15414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 15375,
											"end": 15414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15375,
											"end": 15414,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 15375,
											"end": 15414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15436,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 15485,
											"end": 15526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 15509,
											"end": 15525,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15485,
											"end": 15526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 15485,
											"end": 15526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15485,
											"end": 15526,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 15485,
											"end": 15526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15477,
											"end": 15483,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15470,
											"end": 15474,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15464,
											"end": 15475,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15436,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 15436,
											"end": 15527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15436,
											"end": 15527,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 15436,
											"end": 15527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15430,
											"end": 15434,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15423,
											"end": 15528,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 15341,
											"end": 15534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15265,
											"end": 15534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15265,
											"end": 15534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15265,
											"end": 15534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15265,
											"end": 15534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15540,
											"end": 15613,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 15540,
											"end": 15613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15585,
											"end": 15588,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15540,
											"end": 15613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15540,
											"end": 15613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15619,
											"end": 15808,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 15619,
											"end": 15808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15696,
											"end": 15728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 15696,
											"end": 15728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 15696,
											"end": 15728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15696,
											"end": 15728,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 15696,
											"end": 15728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15737,
											"end": 15802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 15795,
											"end": 15801,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15787,
											"end": 15793,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15781,
											"end": 15785,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15737,
											"end": 15802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 15737,
											"end": 15802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15737,
											"end": 15802,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 15737,
											"end": 15802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15672,
											"end": 15808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15619,
											"end": 15808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15619,
											"end": 15808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15619,
											"end": 15808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15814,
											"end": 16000,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 15814,
											"end": 16000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15874,
											"end": 15994,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 15874,
											"end": 15994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15891,
											"end": 15894,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15884,
											"end": 15889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15881,
											"end": 15895,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 15874,
											"end": 15994,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15874,
											"end": 15994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 15874,
											"end": 15994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15945,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 15982,
											"end": 15983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15975,
											"end": 15980,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15945,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 15945,
											"end": 15984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15945,
											"end": 15984,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 15945,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15918,
											"end": 15919,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 15911,
											"end": 15916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15907,
											"end": 15920,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15898,
											"end": 15920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15898,
											"end": 15920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15874,
											"end": 15994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 15874,
											"end": 15994,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15874,
											"end": 15994,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 15874,
											"end": 15994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15814,
											"end": 16000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15814,
											"end": 16000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15814,
											"end": 16000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16549,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 16006,
											"end": 16549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16107,
											"end": 16109,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16102,
											"end": 16105,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16099,
											"end": 16110,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16096,
											"end": 16542,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16096,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 16096,
											"end": 16542,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16141,
											"end": 16179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 16173,
											"end": 16178,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16141,
											"end": 16179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 16141,
											"end": 16179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16141,
											"end": 16179,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 16141,
											"end": 16179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16225,
											"end": 16254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 16243,
											"end": 16253,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16225,
											"end": 16254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 16225,
											"end": 16254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16225,
											"end": 16254,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 16225,
											"end": 16254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16215,
											"end": 16223,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16211,
											"end": 16255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16408,
											"end": 16410,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16396,
											"end": 16406,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16393,
											"end": 16411,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16390,
											"end": 16439,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16390,
											"end": 16439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 16390,
											"end": 16439,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16429,
											"end": 16437,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16414,
											"end": 16437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16414,
											"end": 16437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16390,
											"end": 16439,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 16390,
											"end": 16439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16452,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 16508,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 16526,
											"end": 16529,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16508,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 16508,
											"end": 16530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16508,
											"end": 16530,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 16508,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16498,
											"end": 16506,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16494,
											"end": 16531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16481,
											"end": 16492,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16452,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 16452,
											"end": 16532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16452,
											"end": 16532,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 16452,
											"end": 16532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16111,
											"end": 16542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16111,
											"end": 16542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16096,
											"end": 16542,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 16096,
											"end": 16542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16555,
											"end": 16672,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 16555,
											"end": 16672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16609,
											"end": 16617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16659,
											"end": 16664,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 16657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16649,
											"end": 16665,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 16628,
											"end": 16665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16628,
											"end": 16665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16555,
											"end": 16672,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16555,
											"end": 16672,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16555,
											"end": 16672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16555,
											"end": 16672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16555,
											"end": 16672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16678,
											"end": 16847,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 16678,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16722,
											"end": 16728,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16755,
											"end": 16806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 16803,
											"end": 16804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16799,
											"end": 16805,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 16791,
											"end": 16796,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16788,
											"end": 16789,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 16784,
											"end": 16797,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 16806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 16755,
											"end": 16806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 16806,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 16755,
											"end": 16806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16751,
											"end": 16807,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 16836,
											"end": 16840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16830,
											"end": 16834,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16826,
											"end": 16841,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16816,
											"end": 16841,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16816,
											"end": 16841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16729,
											"end": 16847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16678,
											"end": 16847,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16678,
											"end": 16847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16678,
											"end": 16847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16678,
											"end": 16847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16678,
											"end": 16847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16852,
											"end": 17147,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 16852,
											"end": 17147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16928,
											"end": 16932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17074,
											"end": 17103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 17099,
											"end": 17102,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17093,
											"end": 17097,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17074,
											"end": 17103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 17074,
											"end": 17103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17074,
											"end": 17103,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 17074,
											"end": 17103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17066,
											"end": 17103,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17066,
											"end": 17103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17136,
											"end": 17139,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17133,
											"end": 17134,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 17129,
											"end": 17140,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17120,
											"end": 17141,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 17112,
											"end": 17141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17112,
											"end": 17141,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16852,
											"end": 17147,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16852,
											"end": 17147,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16852,
											"end": 17147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16852,
											"end": 17147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16852,
											"end": 17147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17152,
											"end": 18547,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 17152,
											"end": 18547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17269,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 17302,
											"end": 17305,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17269,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 17269,
											"end": 17306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17269,
											"end": 17306,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 17269,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17371,
											"end": 17389,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17363,
											"end": 17369,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17360,
											"end": 17390,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17357,
											"end": 17413,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17357,
											"end": 17413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 17357,
											"end": 17413,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17393,
											"end": 17411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 17393,
											"end": 17411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 17393,
											"end": 17411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17393,
											"end": 17411,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 17393,
											"end": 17411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17357,
											"end": 17413,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 17357,
											"end": 17413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 17469,
											"end": 17473,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17463,
											"end": 17474,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 17437,
											"end": 17475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17522,
											"end": 17589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 17582,
											"end": 17588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17574,
											"end": 17580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17568,
											"end": 17572,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17522,
											"end": 17589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 17522,
											"end": 17589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17522,
											"end": 17589,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 17522,
											"end": 17589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17616,
											"end": 17617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17640,
											"end": 17644,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17627,
											"end": 17644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17627,
											"end": 17644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17672,
											"end": 17674,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17664,
											"end": 17670,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17661,
											"end": 17675,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17689,
											"end": 17690,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17684,
											"end": 18302,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17684,
											"end": 18302,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17684,
											"end": 18302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 17684,
											"end": 18302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18346,
											"end": 18347,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18363,
											"end": 18369,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18360,
											"end": 18437,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18360,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 18360,
											"end": 18437,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18412,
											"end": 18421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18407,
											"end": 18410,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 18403,
											"end": 18422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18397,
											"end": 18423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18388,
											"end": 18423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18388,
											"end": 18423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18360,
											"end": 18437,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 18360,
											"end": 18437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18463,
											"end": 18530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 18523,
											"end": 18529,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18516,
											"end": 18521,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18463,
											"end": 18530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 18463,
											"end": 18530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18463,
											"end": 18530,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 18463,
											"end": 18530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18457,
											"end": 18461,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18450,
											"end": 18531,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 18319,
											"end": 18541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 18541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 17654,
											"end": 18541,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17684,
											"end": 18302,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 17684,
											"end": 18302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17736,
											"end": 17740,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17732,
											"end": 17741,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17724,
											"end": 17730,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17720,
											"end": 17742,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17770,
											"end": 17807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 17802,
											"end": 17806,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17770,
											"end": 17807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 17770,
											"end": 17807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17770,
											"end": 17807,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 17770,
											"end": 17807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17829,
											"end": 17830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17843,
											"end": 18051,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 17843,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17857,
											"end": 17864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17854,
											"end": 17855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17851,
											"end": 17865,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 18051,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 17843,
											"end": 18051,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17936,
											"end": 17945,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17931,
											"end": 17934,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 17927,
											"end": 17946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17921,
											"end": 17947,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17913,
											"end": 17919,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17906,
											"end": 17948,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 17987,
											"end": 17988,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17979,
											"end": 17985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17975,
											"end": 17989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17965,
											"end": 17989,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17965,
											"end": 17989,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18034,
											"end": 18036,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18023,
											"end": 18032,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18019,
											"end": 18037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18006,
											"end": 18037,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 18006,
											"end": 18037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17880,
											"end": 17884,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17877,
											"end": 17878,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17873,
											"end": 17885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17868,
											"end": 17885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17868,
											"end": 17885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 17843,
											"end": 18051,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 18051,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 17843,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18079,
											"end": 18085,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18070,
											"end": 18077,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18067,
											"end": 18086,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18064,
											"end": 18243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18064,
											"end": 18243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 18064,
											"end": 18243,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18137,
											"end": 18146,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18132,
											"end": 18135,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 18128,
											"end": 18147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18122,
											"end": 18148,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18180,
											"end": 18228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 18222,
											"end": 18226,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 18210,
											"end": 18227,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18199,
											"end": 18208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18180,
											"end": 18228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 18180,
											"end": 18228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18180,
											"end": 18228,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 18180,
											"end": 18228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18172,
											"end": 18178,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18165,
											"end": 18229,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 18087,
											"end": 18243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18064,
											"end": 18243,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 18064,
											"end": 18243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18289,
											"end": 18290,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18285,
											"end": 18286,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 18277,
											"end": 18283,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 18273,
											"end": 18287,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18269,
											"end": 18291,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18263,
											"end": 18267,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 18256,
											"end": 18292,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 17691,
											"end": 18302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17691,
											"end": 18302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17691,
											"end": 18302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 18541,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 17654,
											"end": 18541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 18541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 18547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 18547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 18547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17152,
											"end": 18547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17152,
											"end": 18547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17152,
											"end": 18547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18553,
											"end": 18744,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 18553,
											"end": 18744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18593,
											"end": 18596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18612,
											"end": 18632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 18630,
											"end": 18631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18612,
											"end": 18632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 18612,
											"end": 18632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18612,
											"end": 18632,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 18612,
											"end": 18632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18607,
											"end": 18632,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18607,
											"end": 18632,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18646,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 18664,
											"end": 18665,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18646,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 18646,
											"end": 18666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18646,
											"end": 18666,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 18646,
											"end": 18666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18641,
											"end": 18666,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18641,
											"end": 18666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18689,
											"end": 18690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 18687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18682,
											"end": 18691,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18675,
											"end": 18691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18675,
											"end": 18691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18710,
											"end": 18713,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18707,
											"end": 18708,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18704,
											"end": 18714,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18701,
											"end": 18737,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18701,
											"end": 18737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 18701,
											"end": 18737,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18717,
											"end": 18735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 18717,
											"end": 18735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 18717,
											"end": 18735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18717,
											"end": 18735,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 18717,
											"end": 18735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18701,
											"end": 18737,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 18701,
											"end": 18737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18553,
											"end": 18744,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18553,
											"end": 18744,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18553,
											"end": 18744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18553,
											"end": 18744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18553,
											"end": 18744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/CatNip.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"charityFee()": "ecfca899",
							"charityWallet()": "7b208769",
							"decimals()": "313ce567",
							"feeDivisor()": "9a36f932",
							"initialize(address,uint256,uint256)": "7a1ac61e",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setCharityFee(uint256)": "20c7c596",
							"setCharityWallet(address)": "30563bd7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"charityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"charityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_charityWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_charityFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_charityFee\",\"type\":\"uint256\"}],\"name\":\"setCharityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_charityWallet\",\"type\":\"address\"}],\"name\":\"setCharityWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CatNip.sol\":\"CatnipToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7495638cf1899296f31b86ac9e6d2fa8b5f75f346bb9b6c3850b4bde1209a882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8540eb125e40e2d732d76aecc33e4953bda770aae942647f6a80d5c719675df2\",\"dweb:/ipfs/QmeMQnjuEwc9Ru1mZci7QpkewvaeB98SCe462aNrhjUcHS\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/CatNip.sol\":{\"keccak256\":\"0x283d1bccfc2943c54d6f9aa25e716eab210925d506883072480eaa3e387397f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7455c89d9bf89d159df98a9e0876aef0d6175057e84255f94b7a8c5f8c28c4\",\"dweb:/ipfs/QmQMkwpp5fUf4fXrsSrsHEbi5uNReUdePtHQj31R5Nrq9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1365,
								"contract": "contracts/CatNip.sol:CatnipToken",
								"label": "charityWallet",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1367,
								"contract": "contracts/CatNip.sol:CatnipToken",
								"label": "charityFee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1369,
								"contract": "contracts/CatNip.sol:CatnipToken",
								"label": "feeDivisor",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1111
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1112,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1111,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1111,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1111,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1093,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1111
						],
						"ERC20Upgradeable": [
							1065
						],
						"IERC20": [
							1326
						],
						"IERC20Errors": [
							1153
						],
						"IERC20Metadata": [
							1352
						],
						"Initializable": [
							448
						]
					},
					"id": 1066,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 1327,
							"src": "131:70:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1326,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 1353,
							"src": "202:97:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1352,
										"src": "210:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 1112,
							"src": "300:70:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1111,
										"src": "308:18:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 1249,
							"src": "371:83:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 457,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1153,
										"src": "379:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 449,
							"src": "455:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 459,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "463:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 462,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1319:13:2"
									},
									"id": 463,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:2"
								},
								{
									"baseName": {
										"id": 464,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1111,
										"src": "1334:18:2"
									},
									"id": 465,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:2"
								},
								{
									"baseName": {
										"id": 466,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1326,
										"src": "1354:6:2"
									},
									"id": 467,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:2"
								},
								{
									"baseName": {
										"id": 468,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1352,
										"src": "1362:14:2"
									},
									"id": 469,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:2"
								},
								{
									"baseName": {
										"id": 470,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1153,
										"src": "1378:12:2"
									},
									"id": 471,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:2"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 461,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1065,
							"linearizedBaseContracts": [
								1065,
								1153,
								1352,
								1326,
								1111,
								448
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:2",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 489,
									"members": [
										{
											"constant": false,
											"id": 476,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 489,
											"src": "1495:45:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 475,
												"keyName": "account",
												"keyNameLocation": "1511:7:2",
												"keyType": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 482,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 489,
											"src": "1551:75:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 481,
												"keyName": "account",
												"keyNameLocation": "1567:7:2",
												"keyType": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 480,
													"keyName": "spender",
													"keyNameLocation": "1594:7:2",
													"keyType": {
														"id": 478,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 479,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 484,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 489,
											"src": "1637:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 483,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 486,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 489,
											"src": "1668:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 485,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 488,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 489,
											"src": "1690:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 487,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:2",
									"nodeType": "StructDefinition",
									"scope": 1065,
									"src": "1465:246:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 492,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 1065,
									"src": "1826:114:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 490,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 491,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2021:79:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:2",
													"nodeType": "YulBlock",
													"src": "2040:54:2",
													"statements": [
														{
															"nativeSrc": "2054:30:2",
															"nodeType": "YulAssignment",
															"src": "2054:30:2",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:2",
																"nodeType": "YulIdentifier",
																"src": "2064:20:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 496,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:2",
														"valueSize": 1
													}
												],
												"id": 498,
												"nodeType": "InlineAssembly",
												"src": "2031:63:2"
											}
										]
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:2"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1997:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 495,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 494,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 489,
														"src": "1997:12:2"
													},
													"referencedDeclaration": 489,
													"src": "1997:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:2"
									},
									"scope": 1065,
									"src": "1947:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2374:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "2407:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 512,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "2414:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 510,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "2384:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "2384:38:2"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "2106:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 508,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 507,
												"name": "onlyInitializing",
												"nameLocations": [
													"2357:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2357:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2357:16:2"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2291:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2318:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "2304:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2304:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2339:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "2325:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:44:2"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:2"
									},
									"scope": 1065,
									"src": "2282:147:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "2537:114:2",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2568:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "2547:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 526,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 525,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2547:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "2547:12:2"
															},
															"referencedDeclaration": 489,
															"src": "2547:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 528,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2572:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2547:43:2"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 531,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "2600:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2602:5:2",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 486,
														"src": "2600:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 534,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "2610:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2600:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "2600:15:2"
											},
											{
												"expression": {
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 537,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "2625:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2627:7:2",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 488,
														"src": "2625:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 540,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "2637:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2625:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "2625:19:2"
											}
										]
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 523,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 522,
												"name": "onlyInitializing",
												"nameLocations": [
													"2520:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2520:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2520:16:2"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2444:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2481:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2467:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2502:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2488:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2488:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:44:2"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:2"
									},
									"scope": 1065,
									"src": "2435:216:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1339
									],
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2776:84:2",
										"statements": [
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2807:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "2786:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 551,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 550,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2786:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "2786:12:2"
															},
															"referencedDeclaration": 489,
															"src": "2786:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 553,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2811:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 556,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "2846:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2848:5:2",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 486,
													"src": "2846:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 549,
												"id": 558,
												"nodeType": "Return",
												"src": "2839:14:2"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "2657:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2725:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:2"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2761:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 547,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2761:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:15:2"
									},
									"scope": 1065,
									"src": "2716:144:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1345
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "3035:86:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3066:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "3045:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 567,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 566,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3045:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "3045:12:2"
															},
															"referencedDeclaration": 489,
															"src": "3045:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 569,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "3070:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3045:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 572,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "3105:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3107:7:2",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 488,
													"src": "3105:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 565,
												"id": 574,
												"nodeType": "Return",
												"src": "3098:16:2"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "2866:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2982:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3020:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3020:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:15:2"
									},
									"scope": 1065,
									"src": "2973:148:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1351
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "3810:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3827:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "3820:9:2"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "3127:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3763:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:2:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3803:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 579,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3803:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:7:2"
									},
									"scope": 1065,
									"src": "3754:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "3957:91:2",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3988:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "3967:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 592,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 591,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3967:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "3967:12:2"
															},
															"referencedDeclaration": 489,
															"src": "3967:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 596,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 594,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "3992:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3967:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 597,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "4027:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4029:12:2",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 484,
													"src": "4027:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 590,
												"id": 599,
												"nodeType": "Return",
												"src": "4020:21:2"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3842:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3905:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:2:2"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "3948:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:2"
									},
									"scope": 1065,
									"src": "3896:152:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1283
									],
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "4180:97:2",
										"statements": [
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4211:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 620,
														"src": "4190:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 610,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 609,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4190:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "4190:12:2"
															},
															"referencedDeclaration": 489,
															"src": "4190:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 614,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 612,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "4215:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4190:43:2"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 615,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4250:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4252:9:2",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 476,
														"src": "4250:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 618,
													"indexExpression": {
														"id": 617,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "4262:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4250:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 608,
												"id": 619,
												"nodeType": "Return",
												"src": "4243:27:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4054:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4115:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4133:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4125:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:17:2"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4171:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:9:2"
									},
									"scope": 1065,
									"src": "4106:171:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "4547:103:2",
										"statements": [
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4565:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 644,
														"src": "4557:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 631,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4557:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 633,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "4573:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4573:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4557:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "4605:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "4612:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4616:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 636,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "4595:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "4595:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4639:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 630,
												"id": 643,
												"nodeType": "Return",
												"src": "4632:11:2"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "4283:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4481:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4498:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4490:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4510:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4502:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:27:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4541:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4541:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:6:2"
									},
									"scope": 1065,
									"src": "4472:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1303
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "4797:106:2",
										"statements": [
											{
												"assignments": [
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4828:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "4807:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 656,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 655,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4807:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "4807:12:2"
															},
															"referencedDeclaration": 489,
															"src": "4807:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 660,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 658,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "4832:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4807:43:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 661,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "4867:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4869:11:2",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "4867:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 664,
														"indexExpression": {
															"id": 663,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "4881:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4867:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 666,
													"indexExpression": {
														"id": 665,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4888:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4867:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 654,
												"id": 667,
												"nodeType": "Return",
												"src": "4860:36:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "4656:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4717:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "4727:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4750:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "4742:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:32:2"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "4788:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4787:9:2"
									},
									"scope": 1065,
									"src": "4708:195:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1313
									],
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "5289:107:2",
										"statements": [
											{
												"assignments": [
													680
												],
												"declarations": [
													{
														"constant": false,
														"id": 680,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5307:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 692,
														"src": "5299:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 679,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5299:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 681,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "5315:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5315:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "5346:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 686,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5353:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 687,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5362:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 684,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1016
														],
														"referencedDeclaration": 948,
														"src": "5337:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "5337:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5385:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 678,
												"id": 691,
												"nodeType": "Return",
												"src": "5378:11:2"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "4909:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5219:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5235:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5227:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5252:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5244:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:32:2"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5283:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5283:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:6:2"
									},
									"scope": 1065,
									"src": "5210:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1325
									],
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "6081:151:2",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6099:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "6091:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 705,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6091:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 709,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 707,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "6109:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6091:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 711,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "6147:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "6153:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "6162:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 710,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "6131:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "6131:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "6188:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "6194:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "6198:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 716,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "6178:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "6178:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6221:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 704,
												"id": 723,
												"nodeType": "Return",
												"src": "6214:11:2"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "5402:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5997:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6018:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6010:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6032:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6024:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6044:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6036:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:41:2"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 702,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6074:6:2"
									},
									"scope": 1065,
									"src": "5988:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "6682:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 735,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "6696:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6712:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 736,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6704:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6704:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6696:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 749,
												"nodeType": "IfStatement",
												"src": "6692:86:2",
												"trueBody": {
													"id": 748,
													"nodeType": "Block",
													"src": "6716:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6764:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6756:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 742,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6756:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6756:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 741,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "6737:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6737:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 747,
															"nodeType": "RevertStatement",
															"src": "6730:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 750,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "6791:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6805:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6797:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 751,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6797:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6797:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6791:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 764,
												"nodeType": "IfStatement",
												"src": "6787:86:2",
												"trueBody": {
													"id": 763,
													"nodeType": "Block",
													"src": "6809:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6859:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6851:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 757,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6851:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6851:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 756,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "6830:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6830:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 762,
															"nodeType": "RevertStatement",
															"src": "6823:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "6890:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "6896:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "6900:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 765,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "6882:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6882:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "6882:24:2"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "6238:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6614:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6632:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6624:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6646:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6638:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6658:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6650:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:41:2"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6682:0:2"
									},
									"scope": 1065,
									"src": "6605:308:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "7303:1095:2",
										"statements": [
											{
												"assignments": [
													784
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7334:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 863,
														"src": "7313:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 783,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 782,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7313:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "7313:12:2"
															},
															"referencedDeclaration": 489,
															"src": "7313:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 785,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "7338:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7338:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7313:43:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "7370:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7386:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7378:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7378:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7370:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 830,
													"nodeType": "Block",
													"src": "7546:366:2",
													"statements": [
														{
															"assignments": [
																802
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 802,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7568:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 830,
																	"src": "7560:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 801,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 807,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 803,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "7582:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7584:9:2",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 476,
																	"src": "7582:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 806,
																"indexExpression": {
																	"id": 805,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "7594:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7582:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7560:39:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 808,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "7617:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 809,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "7631:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7617:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 818,
															"nodeType": "IfStatement",
															"src": "7613:115:2",
															"trueBody": {
																"id": 817,
																"nodeType": "Block",
																"src": "7638:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 812,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "7688:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 813,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 802,
																					"src": "7694:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 814,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "7707:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 811,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "7663:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7663:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 816,
																		"nodeType": "RevertStatement",
																		"src": "7656:57:2"
																	}
																]
															}
														},
														{
															"id": 829,
															"nodeType": "UncheckedBlock",
															"src": "7741:161:2",
															"statements": [
																{
																	"expression": {
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 819,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 784,
																					"src": "7848:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 822,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7850:9:2",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 476,
																				"src": "7848:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 821,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 775,
																				"src": "7860:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7848:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 824,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 802,
																				"src": "7868:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 825,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "7882:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7868:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7848:39:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 828,
																	"nodeType": "ExpressionStatement",
																	"src": "7848:39:2"
																}
															]
														}
													]
												},
												"id": 831,
												"nodeType": "IfStatement",
												"src": "7366:546:2",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "7390:150:2",
													"statements": [
														{
															"expression": {
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 794,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "7506:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7508:12:2",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 484,
																	"src": "7506:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "7524:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7506:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 799,
															"nodeType": "ExpressionStatement",
															"src": "7506:23:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "7926:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7940:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7932:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 833,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7932:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7932:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7926:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "8143:208:2",
													"statements": [
														{
															"id": 854,
															"nodeType": "UncheckedBlock",
															"src": "8157:184:2",
															"statements": [
																{
																	"expression": {
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 846,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 784,
																					"src": "8302:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 849,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8304:9:2",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 476,
																				"src": "8302:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 850,
																			"indexExpression": {
																				"id": 848,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 777,
																				"src": "8314:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8302:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 851,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 779,
																			"src": "8321:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8302:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 853,
																	"nodeType": "ExpressionStatement",
																	"src": "8302:24:2"
																}
															]
														}
													]
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "7922:429:2",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "7944:193:2",
													"statements": [
														{
															"id": 844,
															"nodeType": "UncheckedBlock",
															"src": "7958:169:2",
															"statements": [
																{
																	"expression": {
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 838,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 784,
																				"src": "8089:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8091:12:2",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 484,
																			"src": "8089:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 841,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 779,
																			"src": "8107:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8089:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 843,
																	"nodeType": "ExpressionStatement",
																	"src": "8089:23:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 858,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "8375:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "8381:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "8385:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 857,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "8366:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8366:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "EmitStatement",
												"src": "8361:30:2"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "6919:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7237:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7253:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "7245:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7245:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7267:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "7259:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7259:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7279:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "7271:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7271:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7244:41:2"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7303:0:2"
									},
									"scope": 1065,
									"src": "7228:1170:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "8805:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 872,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "8819:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8838:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8830:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 873,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8830:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8830:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8819:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "8815:91:2",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "8842:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8892:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8884:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 879,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8884:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8884:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 878,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "8863:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8863:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 884,
															"nodeType": "RevertStatement",
															"src": "8856:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8931:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8923:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8923:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8923:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "8935:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "8944:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 887,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "8915:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8915:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "8915:35:2"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "8404:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8750:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8764:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "8756:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8781:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "8773:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8755:32:2"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8805:0:2"
									},
									"scope": 1065,
									"src": "8741:216:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "9339:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 905,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "9353:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9372:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9364:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 906,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9364:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9364:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9353:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 919,
												"nodeType": "IfStatement",
												"src": "9349:89:2",
												"trueBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "9376:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9424:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9416:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 912,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9416:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9416:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 911,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "9397:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9397:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 917,
															"nodeType": "RevertStatement",
															"src": "9390:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 921,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9455:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9472:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9464:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 922,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9464:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9464:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "9476:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 920,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "9447:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9447:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "9447:35:2"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "8963:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9284:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9298:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "9290:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9290:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9315:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "9307:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9307:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9289:32:2"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9339:0:2"
									},
									"scope": 1065,
									"src": "9275:214:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "10099:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "10118:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10125:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10141:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1016
														],
														"referencedDeclaration": 1016,
														"src": "10109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10109:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "10109:37:2"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "9495:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10034:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10051:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "10043:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10066:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "10058:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10058:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10083:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "10075:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10042:47:2"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10099:0:2"
									},
									"scope": 1065,
									"src": "10025:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "11098:389:2",
										"statements": [
											{
												"assignments": [
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11129:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1015,
														"src": "11108:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 961,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 960,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11108:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "11108:12:2"
															},
															"referencedDeclaration": 489,
															"src": "11108:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 963,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "11133:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11133:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11108:43:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 966,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "11165:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11182:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11174:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 967,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11174:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11174:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11165:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "IfStatement",
												"src": "11161:89:2",
												"trueBody": {
													"id": 979,
													"nodeType": "Block",
													"src": "11186:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11236:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11228:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 973,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11228:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11228:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 972,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "11207:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11207:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 978,
															"nodeType": "RevertStatement",
															"src": "11200:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 981,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "11263:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11282:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11274:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 982,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11274:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11274:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11263:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 995,
												"nodeType": "IfStatement",
												"src": "11259:90:2",
												"trueBody": {
													"id": 994,
													"nodeType": "Block",
													"src": "11286:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11335:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11327:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 988,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11327:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11327:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 987,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "11307:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11307:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 993,
															"nodeType": "RevertStatement",
															"src": "11300:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 996,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "11358:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11360:11:2",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 482,
																"src": "11358:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1001,
															"indexExpression": {
																"id": 998,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "11372:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11358:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1002,
														"indexExpression": {
															"id": 999,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "11379:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11358:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1003,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "11390:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11358:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "11358:37:2"
											},
											{
												"condition": {
													"id": 1006,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 957,
													"src": "11409:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1014,
												"nodeType": "IfStatement",
												"src": "11405:76:2",
												"trueBody": {
													"id": 1013,
													"nodeType": "Block",
													"src": "11420:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1008,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "11448:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1009,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "11455:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1010,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "11464:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1007,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "11439:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11439:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1012,
															"nodeType": "EmitStatement",
															"src": "11434:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "10159:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11009:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11026:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11018:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11018:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11041:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11033:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11058:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11050:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11070:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11065:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11065:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11017:63:2"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11098:0:2"
									},
									"scope": 1065,
									"src": "11000:487:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "11858:388:2",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11876:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "11868:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11868:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1032,
												"initialValue": {
													"arguments": [
														{
															"id": 1029,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "11905:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "11912:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1028,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "11895:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11895:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11868:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1033,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "11934:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11959:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1035,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11959:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1034,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11954:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11954:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11968:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11954:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11934:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "11930:310:2",
												"trueBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "11973:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1040,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "11991:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1041,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "12010:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11991:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1050,
															"nodeType": "IfStatement",
															"src": "11987:130:2",
															"trueBody": {
																"id": 1049,
																"nodeType": "Block",
																"src": "12017:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1044,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1021,
																					"src": "12069:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1045,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1027,
																					"src": "12078:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1046,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "12096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1043,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1142,
																				"src": "12042:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12042:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1048,
																		"nodeType": "RevertStatement",
																		"src": "12035:67:2"
																	}
																]
															}
														},
														{
															"id": 1060,
															"nodeType": "UncheckedBlock",
															"src": "12130:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1052,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1019,
																				"src": "12167:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1053,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1021,
																				"src": "12174:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1054,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1027,
																					"src": "12183:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1055,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "12202:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12183:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1057,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12209:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1051,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				948,
																				1016
																			],
																			"referencedDeclaration": 1016,
																			"src": "12158:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12158:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1059,
																	"nodeType": "ExpressionStatement",
																	"src": "12158:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "11493:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11778:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11802:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "11794:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11794:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11817:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "11809:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11809:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11834:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "11826:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11826:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11793:47:2"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11858:0:2"
									},
									"scope": 1065,
									"src": "11769:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1066,
							"src": "1281:10967:2",
							"usedErrors": [
								211,
								214,
								1123,
								1128,
								1133,
								1142,
								1147,
								1152
							],
							"usedEvents": [
								219,
								1260,
								1269
							]
						}
					],
					"src": "105:12144:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1111
						],
						"Initializable": [
							448
						]
					},
					"id": 1112,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1067,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1069,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1112,
							"sourceUnit": 449,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1068,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1071,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:3"
									},
									"id": 1072,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1070,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1111,
							"linearizedBaseContracts": [
								1111,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1075,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1074,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 1111,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1081,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1080,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 1111,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1089,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1088,
												"id": 1091,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 1111,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1098,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1097,
												"id": 1100,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1095,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 1111,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1106,
												"id": 1108,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 1111,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1112,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1248
						],
						"IERC20Errors": [
							1153
						],
						"IERC721Errors": [
							1201
						]
					},
					"id": 1249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1113,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1114,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1153,
							"linearizedBaseContracts": [
								1153
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1123,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1128,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1133,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1142,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1147,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1152,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 1249,
							"src": "280:1764:4",
							"usedErrors": [
								1123,
								1128,
								1133,
								1142,
								1147,
								1152
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1154,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1201,
							"linearizedBaseContracts": [
								1201
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1159,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1164,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1173,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1178,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1183,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1190,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1195,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1200,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 1249,
							"src": "2190:2092:4",
							"usedErrors": [
								1159,
								1164,
								1173,
								1178,
								1183,
								1190,
								1195,
								1200
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1202,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1248,
							"linearizedBaseContracts": [
								1248
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1213,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1218,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1223,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1230,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1235,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1240,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1247,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 1249,
							"src": "4430:2107:4",
							"usedErrors": [
								1213,
								1218,
								1223,
								1230,
								1235,
								1240,
								1247
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1326
						]
					},
					"id": 1327,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1251,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1326,
							"linearizedBaseContracts": [
								1326
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1260,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1269,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1326,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1326,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1326,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1326,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1326,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1326,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1327,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1260,
								1269
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1326
						],
						"IERC20Metadata": [
							1352
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1328,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1327,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1329,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1326,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1332,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1326,
										"src": "306:6:6"
									},
									"id": 1333,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1331,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								1326
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1352,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1352,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1348,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1352,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1353,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1260,
								1269
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"contracts/CatNip.sol": {
				"ast": {
					"absolutePath": "contracts/CatNip.sol",
					"exportedSymbols": {
						"CatnipToken": [
							1503
						],
						"ContextUpgradeable": [
							1111
						],
						"ERC20Upgradeable": [
							1065
						],
						"IERC20": [
							1326
						],
						"IERC20Errors": [
							1153
						],
						"IERC20Metadata": [
							1352
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 1504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 1355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 1066,
							"src": "57:78:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 195,
							"src": "136:75:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1504,
							"sourceUnit": 449,
							"src": "212:75:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1358,
										"name": "Initializable",
										"nameLocations": [
											"313:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "313:13:7"
									},
									"id": 1359,
									"nodeType": "InheritanceSpecifier",
									"src": "313:13:7"
								},
								{
									"baseName": {
										"id": 1360,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"328:16:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1065,
										"src": "328:16:7"
									},
									"id": 1361,
									"nodeType": "InheritanceSpecifier",
									"src": "328:16:7"
								},
								{
									"baseName": {
										"id": 1362,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"346:18:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "346:18:7"
									},
									"id": 1363,
									"nodeType": "InheritanceSpecifier",
									"src": "346:18:7"
								}
							],
							"canonicalName": "CatnipToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1503,
							"linearizedBaseContracts": [
								1503,
								194,
								1065,
								1153,
								1352,
								1326,
								1111,
								448
							],
							"name": "CatnipToken",
							"nameLocation": "298:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7b208769",
									"id": 1365,
									"mutability": "mutable",
									"name": "charityWallet",
									"nameLocation": "386:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "371:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1364,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "371:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ecfca899",
									"id": 1367,
									"mutability": "mutable",
									"name": "charityFee",
									"nameLocation": "465:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "450:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1366,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "450:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9a36f932",
									"id": 1369,
									"mutability": "mutable",
									"name": "feeDivisor",
									"nameLocation": "574:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1503,
									"src": "559:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1368,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "559:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "763:360:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4361746e6970",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "786:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41277338c47d40468ff5c4b7712fab80b40314137feca50edd7964972d663011",
																"typeString": "literal_string \"Catnip\""
															},
															"value": "Catnip"
														},
														{
															"hexValue": "4341544e4950",
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "796:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee25c48190255b9a8a01dcf7f9bc3a7eae5b3a613229fdb6c85f26938c3db8e4",
																"typeString": "literal_string \"CATNIP\""
															},
															"value": "CATNIP"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_41277338c47d40468ff5c4b7712fab80b40314137feca50edd7964972d663011",
																"typeString": "literal_string \"Catnip\""
															},
															{
																"typeIdentifier": "t_stringliteral_ee25c48190255b9a8a01dcf7f9bc3a7eae5b3a613229fdb6c85f26938c3db8e4",
																"typeString": "literal_string \"CATNIP\""
															}
														],
														"id": 1380,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "773:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "773:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "773:32:7"
											},
											{
												"assignments": [
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "822:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1418,
														"src": "814:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1385,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "814:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1389,
												"initialValue": {
													"expression": {
														"id": 1387,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "830:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "834:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "830:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "814:26:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1391,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "864:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1390,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "849:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "849:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "849:21:7"
											},
											{
												"expression": {
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1394,
														"name": "charityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "881:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1395,
														"name": "_charityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "897:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "881:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "881:30:7"
											},
											{
												"expression": {
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1398,
														"name": "charityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "921:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1399,
														"name": "_charityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "934:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "921:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1401,
												"nodeType": "ExpressionStatement",
												"src": "921:24:7"
											},
											{
												"expression": {
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1402,
														"name": "feeDivisor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "955:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030",
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "968:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "955:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "955:18:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1407,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1068:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1072:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1068:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1409,
																"name": "_initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "1080:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1098:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1411,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 585,
																				"src": "1104:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1104:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "1098:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1414,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1097:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1080:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1406,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "1062:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1062:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "1062:54:7"
											}
										]
									},
									"functionSelector": "7a1ac61e",
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1377,
												"name": "initializer",
												"nameLocations": [
													"751:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "751:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "751:11:7"
										}
									],
									"name": "initialize",
									"nameLocation": "664:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "_charityWallet",
												"nameLocation": "683:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "675:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "_initialSupply",
												"nameLocation": "707:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "699:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "_charityFee",
												"nameLocation": "731:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "723:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:69:7"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:7"
									},
									"scope": 1503,
									"src": "655:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "1198:113:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1427,
																"name": "_charityWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "1216:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1242:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1234:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1428,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1234:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1234:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1216:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1246:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1208:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1208:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "1208:56:7"
											},
											{
												"expression": {
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1436,
														"name": "charityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "1274:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1437,
														"name": "_charityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "1290:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1274:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "1274:30:7"
											}
										]
									},
									"functionSelector": "30563bd7",
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1424,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1423,
												"name": "onlyOwner",
												"nameLocations": [
													"1188:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1188:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1188:9:7"
										}
									],
									"name": "setCharityWallet",
									"nameLocation": "1138:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "_charityWallet",
												"nameLocation": "1163:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "1155:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:24:7"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1198:0:7"
									},
									"scope": 1503,
									"src": "1129:182:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "1380:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1449,
																"name": "_charityFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "1398:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1450,
																"name": "feeDivisor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "1413:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1398:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46656520746f6f2068696768",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1425:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															},
															"value": "Fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															}
														],
														"id": 1448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1390:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1390:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "1390:50:7"
											},
											{
												"expression": {
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1455,
														"name": "charityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "1450:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1456,
														"name": "_charityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "1463:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1450:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "1450:24:7"
											}
										]
									},
									"functionSelector": "20c7c596",
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1446,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1445,
												"name": "onlyOwner",
												"nameLocations": [
													"1370:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1370:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1370:9:7"
										}
									],
									"name": "setCharityFee",
									"nameLocation": "1326:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "_charityFee",
												"nameLocation": "1348:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1340:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:21:7"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1380:0:7"
									},
									"scope": 1503,
									"src": "1317:164:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										772
									],
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "1575:488:7",
										"statements": [
											{
												"assignments": [
													1471
												],
												"declarations": [
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "1667:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1501,
														"src": "1659:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1470,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1659:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1478,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1472,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "1680:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1473,
																	"name": "charityFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "1689:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1680:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1475,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1679:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1476,
														"name": "feeDivisor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "1703:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1679:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1659:54:7"
											},
											{
												"assignments": [
													1480
												],
												"declarations": [
													{
														"constant": false,
														"id": 1480,
														"mutability": "mutable",
														"name": "amountAfterFee",
														"nameLocation": "1792:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1501,
														"src": "1784:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1784:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1484,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1481,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "1809:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1482,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "1818:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1809:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1784:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1488,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "1904:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1489,
															"name": "charityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "1912:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "1927:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1485,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1888:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CatnipToken_$1503_$",
																"typeString": "type(contract super CatnipToken)"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1894:9:7",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 772,
														"src": "1888:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "1888:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1496,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "2022:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "2030:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1498,
															"name": "amountAfterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "2041:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1493,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2006:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CatnipToken_$1503_$",
																"typeString": "type(contract super CatnipToken)"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2012:9:7",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 772,
														"src": "2006:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "2006:50:7"
											}
										]
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "1496:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1468,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1566:8:7"
									},
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1514:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "1506:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1530:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "1522:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1549:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "1541:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1505:51:7"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1575:0:7"
									},
									"scope": 1503,
									"src": "1487:576:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1504,
							"src": "289:1776:7",
							"usedErrors": [
								30,
								35,
								211,
								214,
								1123,
								1128,
								1133,
								1142,
								1147,
								1152
							],
							"usedEvents": [
								41,
								219,
								1260,
								1269
							]
						}
					],
					"src": "32:2034:7"
				},
				"id": 7
			}
		}
	}
}